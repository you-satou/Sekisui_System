/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input } from '@angular/core';
var ShReadOnlyDirective = /** @class */ (function () {
    function ShReadOnlyDirective(el) {
        this.el = el;
        this.isReadOnly = true;
    }
    /**
     * @return {?}
     */
    ShReadOnlyDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.addAttribute();
    };
    /**
     * @return {?}
     */
    ShReadOnlyDirective.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.addAttribute();
    };
    /**
     * @return {?}
     */
    ShReadOnlyDirective.prototype.addAttribute = /**
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b, e_3, _c;
        /** @type {?} */
        var qs = this.el.nativeElement.querySelectorAll('input,textarea,select');
        try {
            for (var qs_1 = tslib_1.__values(qs), qs_1_1 = qs_1.next(); !qs_1_1.done; qs_1_1 = qs_1.next()) {
                var e = qs_1_1.value;
                e.readOnly = this.isReadOnly;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (qs_1_1 && !qs_1_1.done && (_a = qs_1.return)) _a.call(qs_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        qs = this.el.nativeElement.querySelectorAll('button,mat-icon');
        if (this.isReadOnly) {
            try {
                for (var qs_2 = tslib_1.__values(qs), qs_2_1 = qs_2.next(); !qs_2_1.done; qs_2_1 = qs_2.next()) {
                    var e = qs_2_1.value;
                    e.style.display = "none";
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (qs_2_1 && !qs_2_1.done && (_b = qs_2.return)) _b.call(qs_2);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        else {
            try {
                for (var qs_3 = tslib_1.__values(qs), qs_3_1 = qs_3.next(); !qs_3_1.done; qs_3_1 = qs_3.next()) {
                    var e = qs_3_1.value;
                    e.style.display = "inline";
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (qs_3_1 && !qs_3_1.done && (_c = qs_3.return)) _c.call(qs_3);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    };
    ShReadOnlyDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[readonly]'
                },] }
    ];
    /** @nocollapse */
    ShReadOnlyDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ShReadOnlyDirective.propDecorators = {
        isReadOnly: [{ type: Input, args: ['readonly',] }]
    };
    return ShReadOnlyDirective;
}());
export { ShReadOnlyDirective };
if (false) {
    /** @type {?} */
    ShReadOnlyDirective.prototype.isReadOnly;
    /**
     * @type {?}
     * @private
     */
    ShReadOnlyDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtcmVhZG9ubHkuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vc2gtZm9ybS1jb250cm9sLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvc2gtcmVhZG9ubHkuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQztBQUV2RjtJQUtFLDZCQUFvQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUVmLGVBQVUsR0FBWSxJQUFJLENBQUM7SUFGUixDQUFDOzs7O0lBSXZDLDZDQUFlOzs7SUFBZjtRQUNFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQseUNBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCwwQ0FBWTs7O0lBQVo7OztZQUNNLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBdUIsQ0FBQzs7WUFDeEUsS0FBYyxJQUFBLE9BQUEsaUJBQUEsRUFBRSxDQUFBLHNCQUFBLHNDQUFFO2dCQUFiLElBQUksQ0FBQyxlQUFBO2dCQUNSLENBQUMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzthQUM5Qjs7Ozs7Ozs7O1FBRUQsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDL0QsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFOztnQkFDbkIsS0FBYyxJQUFBLE9BQUEsaUJBQUEsRUFBRSxDQUFBLHNCQUFBLHNDQUFFO29CQUFiLElBQUksQ0FBQyxlQUFBO29CQUNSLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztpQkFDMUI7Ozs7Ozs7OztTQUNGO2FBQ0k7O2dCQUNILEtBQWMsSUFBQSxPQUFBLGlCQUFBLEVBQUUsQ0FBQSxzQkFBQSxzQ0FBRTtvQkFBYixJQUFJLENBQUMsZUFBQTtvQkFDUixDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUM7aUJBQzVCOzs7Ozs7Ozs7U0FDRjtJQUNILENBQUM7O2dCQWxDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7aUJBQ3ZCOzs7O2dCQUptQixVQUFVOzs7NkJBUzNCLEtBQUssU0FBQyxVQUFVOztJQTRCbkIsMEJBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQWhDWSxtQkFBbUI7OztJQUk5Qix5Q0FBOEM7Ozs7O0lBRmxDLGlDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQsIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbcmVhZG9ubHldJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hSZWFkT25seURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHsgfVxyXG5cclxuICBASW5wdXQoJ3JlYWRvbmx5JykgaXNSZWFkT25seTogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIHRoaXMuYWRkQXR0cmlidXRlKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcygpIHtcclxuICAgIHRoaXMuYWRkQXR0cmlidXRlKCk7XHJcbiAgfVxyXG5cclxuICBhZGRBdHRyaWJ1dGUoKSB7XHJcbiAgICBsZXQgcXMgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQsdGV4dGFyZWEsc2VsZWN0Jyk7XHJcbiAgICBmb3IgKHZhciBlIG9mIHFzKSB7XHJcbiAgICAgIGUucmVhZE9ubHkgPSB0aGlzLmlzUmVhZE9ubHk7XHJcbiAgICB9XHJcblxyXG4gICAgcXMgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLG1hdC1pY29uJyk7XHJcbiAgICBpZiAodGhpcy5pc1JlYWRPbmx5KSB7XHJcbiAgICAgIGZvciAodmFyIGUgb2YgcXMpIHtcclxuICAgICAgICBlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIGZvciAodmFyIGUgb2YgcXMpIHtcclxuICAgICAgICBlLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==