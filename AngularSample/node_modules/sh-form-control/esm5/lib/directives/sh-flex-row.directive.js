/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef } from '@angular/core';
var ShFlexRowDirective = /** @class */ (function () {
    function ShFlexRowDirective(el) {
        this.el = el;
    }
    /**
     * @return {?}
     */
    ShFlexRowDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.init();
    };
    /**
     * @private
     * @return {?}
     */
    ShFlexRowDirective.prototype.init = /**
     * @private
     * @return {?}
     */
    function () {
        this.el.nativeElement.style.flexFlow = "row wrap";
        this.el.nativeElement.style.display = "flex";
        this.el.nativeElement.style.boxSizing = "border-box";
        this.el.nativeElement.style.margin = "0px -1rem -1rem 0px";
    };
    ShFlexRowDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ShFlexRow]'
                },] }
    ];
    /** @nocollapse */
    ShFlexRowDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ShFlexRowDirective;
}());
export { ShFlexRowDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ShFlexRowDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtZmxleC1yb3cuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vc2gtZm9ybS1jb250cm9sLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvc2gtZmxleC1yb3cuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUU5RDtJQUtFLDRCQUNVLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZO0lBQ2xCLENBQUM7Ozs7SUFFUCxxQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxDQUFDOzs7OztJQUNPLGlDQUFJOzs7O0lBQVo7UUFDRSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQztRQUNsRCxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUM3QyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztRQUNyRCxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLHFCQUFxQixDQUFDO0lBQzdELENBQUM7O2dCQWpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCOzs7O2dCQUptQixVQUFVOztJQW9COUIseUJBQUM7Q0FBQSxBQWxCRCxJQWtCQztTQWZZLGtCQUFrQjs7Ozs7O0lBRzNCLGdDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tTaEZsZXhSb3ddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hGbGV4Um93RGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmLFxyXG4gICAgKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKXtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuICBwcml2YXRlIGluaXQoKXtcclxuICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5mbGV4RmxvdyA9IFwicm93IHdyYXBcIjtcclxuICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XHJcbiAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUuYm94U2l6aW5nID0gXCJib3JkZXItYm94XCI7XHJcbiAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUubWFyZ2luID0gXCIwcHggLTFyZW0gLTFyZW0gMHB4XCI7XHJcbiAgfVxyXG59Il19