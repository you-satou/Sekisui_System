/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var LockScreenService = /** @class */ (function () {
    /**
    * コンストラクタ
    */
    function LockScreenService() {
        this.isConnecting = false;
        this.isConnectingSubject = new Subject();
        this.isConnectingState = this.isConnectingSubject.asObservable();
        this.count = 0;
    }
    /**
    * 画面をロックする(ユーザーが操作出来ないようにする)
    */
    /**
     * 画面をロックする(ユーザーが操作出来ないようにする)
     * @return {?}
     */
    LockScreenService.prototype.lockScreen = /**
     * 画面をロックする(ユーザーが操作出来ないようにする)
     * @return {?}
     */
    function () {
        this.count += 1;
        if (this.count === 1) {
            this.isConnecting = true;
            this.isConnectingSubject.next(this.isConnecting);
        }
    };
    /**
    * 画面のロックを解除する(ユーザーが操作出来る状態にする)
    */
    /**
     * 画面のロックを解除する(ユーザーが操作出来る状態にする)
     * @return {?}
     */
    LockScreenService.prototype.unlock = /**
     * 画面のロックを解除する(ユーザーが操作出来る状態にする)
     * @return {?}
     */
    function () {
        this.count -= 1;
        if (this.count === 0) {
            this.isConnecting = false;
            this.isConnectingSubject.next(this.isConnecting);
        }
    };
    LockScreenService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    LockScreenService.ctorParameters = function () { return []; };
    /** @nocollapse */ LockScreenService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function LockScreenService_Factory() { return new LockScreenService(); }, token: LockScreenService, providedIn: "root" });
    return LockScreenService;
}());
export { LockScreenService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LockScreenService.prototype.isConnecting;
    /**
     * @type {?}
     * @private
     */
    LockScreenService.prototype.isConnectingSubject;
    /** @type {?} */
    LockScreenService.prototype.isConnectingState;
    /** @type {?} */
    LockScreenService.prototype.count;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jay1zY3JlZW4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9sb2NrLXNjcmVlbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBRS9CO0lBU0U7O01BRUU7SUFDRjtRQVJRLGlCQUFZLEdBQVksS0FBSyxDQUFDO1FBQzlCLHdCQUFtQixHQUFHLElBQUksT0FBTyxFQUFXLENBQUM7UUFDOUMsc0JBQWlCLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksRUFBRSxDQUFDO1FBQzVELFVBQUssR0FBVyxDQUFDLENBQUM7SUFLVCxDQUFDO0lBRWpCOztNQUVFOzs7OztJQUNLLHNDQUFVOzs7O0lBQWpCO1FBQ0ksSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUM7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtZQUNwQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUN6QixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNsRDtJQUNMLENBQUM7SUFFRDs7TUFFRTs7Ozs7SUFDSyxrQ0FBTTs7OztJQUFiO1FBQ0UsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUM7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztZQUMxQixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNwRDtJQUNILENBQUM7O2dCQWxDRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozs0QkFMRDtDQXNDQyxBQW5DRCxJQW1DQztTQWhDWSxpQkFBaUI7Ozs7OztJQUM1Qix5Q0FBc0M7Ozs7O0lBQ3RDLGdEQUFxRDs7SUFDckQsOENBQW1FOztJQUNuRSxrQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExvY2tTY3JlZW5TZXJ2aWNlIHtcclxuICBwcml2YXRlIGlzQ29ubmVjdGluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgaXNDb25uZWN0aW5nU3ViamVjdCA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XHJcbiAgcHVibGljIGlzQ29ubmVjdGluZ1N0YXRlID0gdGhpcy5pc0Nvbm5lY3RpbmdTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xyXG4gIHB1YmxpYyBjb3VudCA6bnVtYmVyID0gMDtcclxuXHJcbiAgLyoqXHJcbiAgKiDjgrPjg7Pjgrnjg4jjg6njgq/jgr9cclxuICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICog55S76Z2i44KS44Ot44OD44Kv44GZ44KLKOODpuODvOOCtuODvOOBjOaTjeS9nOWHuuadpeOBquOBhOOCiOOBhuOBq+OBmeOCiylcclxuICAqL1xyXG4gIHB1YmxpYyBsb2NrU2NyZWVuKCkge1xyXG4gICAgICB0aGlzLmNvdW50ICs9IDE7XHJcbiAgICAgIGlmICh0aGlzLmNvdW50ID09PSAxKSB7XHJcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RpbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0aW5nU3ViamVjdC5uZXh0KHRoaXMuaXNDb25uZWN0aW5nKTtcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiDnlLvpnaLjga7jg63jg4Pjgq/jgpLop6PpmaTjgZnjgoso44Om44O844K244O844GM5pON5L2c5Ye65p2l44KL54q25oWL44Gr44GZ44KLKVxyXG4gICovXHJcbiAgcHVibGljIHVubG9jaygpIHtcclxuICAgIHRoaXMuY291bnQgLT0gMTtcclxuICAgIGlmICh0aGlzLmNvdW50ID09PSAwKSB7XHJcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RpbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmlzQ29ubmVjdGluZ1N1YmplY3QubmV4dCh0aGlzLmlzQ29ubmVjdGluZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==