/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ShCtlConst } from "../constShCtl";
import { ShHttpClientConst } from 'sh-http-client';
/**
 * キー制御の初期化など
 */
var /**
 * キー制御の初期化など
 */
ShAppComponent = /** @class */ (function () {
    /**
     * コンストラクタ
     */
    function ShAppComponent(redirectService) {
        this.redirectService = redirectService;
        this.init();
    }
    /**
     * コンポーネント初期化
     */
    /**
     * コンポーネント初期化
     * @return {?}
     */
    ShAppComponent.prototype.ngOnInit = /**
     * コンポーネント初期化
     * @return {?}
     */
    function () { };
    /**
     * 初期化
     */
    /**
     * 初期化
     * @private
     * @return {?}
     */
    ShAppComponent.prototype.init = /**
     * 初期化
     * @private
     * @return {?}
     */
    function () {
        this.redirect();
        this.keyValidation();
        this.setToekn();
    };
    /**
     * @private
     * @return {?}
     */
    ShAppComponent.prototype.redirect = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.redirectService.redirectPath) {
            this.redirectService.redirect();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ShAppComponent.prototype.setToekn = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var params = new URLSearchParams(location.search);
        /** @type {?} */
        var token = params.get('access_token');
        if (token) {
            sessionStorage.setItem("" + ShHttpClientConst.AUTHORIZATION_TOKEN, token);
            params.delete("access_token");
            history.pushState(null, null, location.pathname);
        }
    };
    /**
     *@ エンター時にフォーカスを当てたくない場合の条件
     */
    /**
     * \@ エンター時にフォーカスを当てたくない場合の条件
     * @private
     * @param {?} elm
     * @return {?}
     */
    ShAppComponent.prototype.isTargetElement = /**
     * \@ エンター時にフォーカスを当てたくない場合の条件
     * @private
     * @param {?} elm
     * @return {?}
     */
    function (elm) {
        if (elm.type == 'hidden')
            return false;
        if (elm.style.display == 'none')
            return false;
        if (elm.style.opacity == '0')
            return false;
        if (elm.disabled)
            return false;
        /** @type {?} */
        var shctl = this.getShCtlElement(elm);
        if (this.checkShCtlAttr(shctl.attributes, [
            'hidden'
        ]))
            return false;
        return true;
    };
    /**
     * @private
     * @param {?} map
     * @param {?} targets
     * @return {?}
     */
    ShAppComponent.prototype.checkShCtlAttr = /**
     * @private
     * @param {?} map
     * @param {?} targets
     * @return {?}
     */
    function (map, targets) {
        return targets.map((/**
         * @param {?} t
         * @return {?}
         */
        function (t) {
            return map.getNamedItem(t) != null;
        })).includes(true);
    };
    /**
     * @private
     * @param {?} elm
     * @return {?}
     */
    ShAppComponent.prototype.getShCtlElement = /**
     * @private
     * @param {?} elm
     * @return {?}
     */
    function (elm) {
        /** @type {?} */
        var parent = elm.parentElement;
        if (!parent)
            return null;
        if (parent.tagName.includes('SH-CTL')) {
            return parent;
        }
        else {
            return this.getShCtlElement(parent);
        }
    };
    /**
     * キーバリデーション付与
     */
    /**
     * キーバリデーション付与
     * @return {?}
     */
    ShAppComponent.prototype.keyValidation = /**
     * キーバリデーション付与
     * @return {?}
     */
    function () {
        var _this = this;
        window.document.onkeydown = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F1 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F2 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F3 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F4 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F5 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F6 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F10 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F11 ||
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F12) {
                return false;
            }
            if (event.altKey &&
                (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_LEFT ||
                    event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_RIGHT)) {
                return false;
            }
            if ((event.ctrlKey || event.metaKey) &&
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_N) {
                return false;
            }
            if ((event.ctrlKey || event.metaKey) &&
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_R) {
                return false;
            }
            if ((event.ctrlKey || event.metaKey) &&
                event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_D) {
                return false;
            }
            if (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_ENTER) {
                /** @type {?} */
                var input = (/** @type {?} */ (document.activeElement));
                if (input != null) {
                    if (input.type != 'textarea') {
                        //次の操作可能なタグに切り替える
                        /** @type {?} */
                        var nodeList = window.document.querySelectorAll('.can-moved-with-the-enter-key');
                        /** @type {?} */
                        var filteredInput = Array.from(nodeList).filter((/**
                         * @param {?} el
                         * @return {?}
                         */
                        function (el) {
                            return _this.isTargetElement((/** @type {?} */ (el)));
                        }));
                        /** @type {?} */
                        var preInput = null;
                        for (var i = 0; i < filteredInput.length; i++) {
                            /** @type {?} */
                            var cur_input = (/** @type {?} */ (filteredInput[i]));
                            if (input.name === cur_input.name) {
                                if (++i >= filteredInput.length) {
                                    i = 0;
                                }
                                cur_input.blur();
                                if (event.shiftKey) {
                                    preInput.focus();
                                }
                                else {
                                    /** @type {?} */
                                    var nextInput = (/** @type {?} */ (filteredInput[i]));
                                    nextInput.focus();
                                }
                                return false;
                            }
                            preInput = (/** @type {?} */ (filteredInput[i]));
                        }
                    }
                }
            }
        });
    };
    return ShAppComponent;
}());
/**
 * キー制御の初期化など
 */
export { ShAppComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ShAppComponent.prototype.redirectService;
}
//# sourceMappingURL=data:application/json;base64,