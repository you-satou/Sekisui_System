/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from "@angular/core";
import { SHCtlCommon } from "../components/sh-ctl-common";
import { ShCtlConst } from "../constShCtl";
import { SHFormControl } from "./ShFormControl";
import { SHCtlPopupDialogComponent } from "../components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component";
var SHFormPopup = /** @class */ (function (_super) {
    tslib_1.__extends(SHFormPopup, _super);
    function SHFormPopup(SmplPopupService, dialog, bindCtlService, lockScreenService) {
        var _this = _super.call(this) || this;
        _this.SmplPopupService = SmplPopupService;
        _this.dialog = dialog;
        _this.bindCtlService = bindCtlService;
        _this.lockScreenService = lockScreenService;
        //データタイトル名
        _this.dataTitle = "";
        //データ区分名
        _this.dataKbnName = "";
        //API URL
        _this.apiUrl = "/api/";
        //入力コントロールに紐づく列番号
        _this.bindColumnKey = 1;
        //ラベルコントロールに紐づく列番号
        _this.bindColumnValue = 2;
        //入力コントロールを非表示にするモードフラグ
        _this.hiddenInput = false;
        //ラベルを非表示にするモードフラグ
        _this.hiddenLabel = false;
        //虫眼鏡アイコンを非表示にするモードフラグ
        _this.hiddenPopupButton = false;
        //データキャッシュON/OFF機能フラグ
        _this.dataCache = false;
        //ポップアップ上非表示となる列番号
        _this.hiddenColumns = [];
        _this.name = "";
        _this.codes = [];
        _this.codesHeader = [];
        _this.extendWidth = ShCtlConst.DIALOG_WIDTH;
        //Dialogの結果を受け取る
        _this.dialogRef = null;
        // 初回通信用フラグ
        _this.initFetchFlg = false;
        // bindColumnArrayを利用し値が設定された場合にチェンジを止める
        _this.noChangeFlg = "OFF";
        // 通信中かどうか
        _this.isBusy = false;
        _this.ctlName = "SHCtlPopup";
        return _this;
    }
    Object.defineProperty(SHFormPopup.prototype, "noChangeFlgCtlName", {
        // bindColumnArrayを利用し値が設定された場合にチェンジを止める
        get: 
        // bindColumnArrayを利用し値が設定された場合にチェンジを止める
        /**
         * @return {?}
         */
        function () {
            return this.ctlName + "_" + ShCtlConst.NO_CHANGE.FLG_SUFFIX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SHFormPopup.prototype, "ownValueInputElm", {
        // inputの参照
        get: 
        // inputの参照
        /**
         * @return {?}
         */
        function () {
            return ((/** @type {?} */ ((document.querySelector("textarea[name=" + this.ctlName + "], input[name=" + this.ctlName + "]")))) || null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SHFormPopup.prototype, "ownLabelInputElm", {
        get: /**
         * @return {?}
         */
        function () {
            return (/** @type {?} */ (((document.querySelector("textarea[name=" + this.popupLabelName + "], input[name=" + this.popupLabelName + "]") || null))));
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     */
    /**
     *
     * @param {?} event
     * @return {?}
     */
    SHFormPopup.prototype.noChangeFlgChange = /**
     *
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.noChangeFlg = event.target.value;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.noChangeFlg = "OFF";
        }), 1000);
    };
    /**
     * 入力コントロールの幅を指定
     */
    /**
     * 入力コントロールの幅を指定
     * @return {?}
     */
    SHFormPopup.prototype.setInputWidth = /**
     * 入力コントロールの幅を指定
     * @return {?}
     */
    function () {
        return this.hiddenLabel ? { width: "100%" } : { width: "33.3%" };
    };
    /**
     * ラベルコントロールの幅を指定
     */
    /**
     * ラベルコントロールの幅を指定
     * @return {?}
     */
    SHFormPopup.prototype.setLabelWidth = /**
     * ラベルコントロールの幅を指定
     * @return {?}
     */
    function () {
        return this.hiddenInput ? { width: "100%" } : { width: "66.6%" };
    };
    /**
     * データバインドされた値を再設定する際に値を検証し
     * 親コンポーネントに渡す
     * @param changes 現在の値と直前の値を取得出来る
     */
    /**
     * データバインドされた値を再設定する際に値を検証し
     * 親コンポーネントに渡す
     * @param {?} changes 現在の値と直前の値を取得出来る
     * @return {?}
     */
    SHFormPopup.prototype.ngOnChanges = /**
     * データバインドされた値を再設定する際に値を検証し
     * 親コンポーネントに渡す
     * @param {?} changes 現在の値と直前の値を取得出来る
     * @return {?}
     */
    function (changes) {
        var _this = this;
        if (changes.value && !changes.value.currentValue) {
            this.name = "";
            this.value = "";
            return;
        }
        if (this.noChangeFlg == "OFF") {
            if (changes.value && changes.value.currentValue) {
                if (changes.value.currentValue != changes.value.previousValue) {
                    this.fetchCodes(this.apiUrl);
                    return;
                }
            }
            if (changes.value && changes.value.firstChange) {
                this.initFetchFlg = true;
            }
            if (this.initFetchFlg) {
                if (!this.value || !changes.value.currentValue)
                    return;
                this.fetchCodes(this.apiUrl);
                this.initFetchFlg = false;
            }
            if (changes.apiUrl &&
                changes.apiUrl.previousValue != changes.apiUrl.currentValue &&
                !this.isBindInputNull(this.bindColumnArray)) {
                if (this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)
                    .length == 0) {
                    if (changes.value &&
                        changes.value.currentValue == changes.value.previousValue)
                        return;
                    this.fetchCodes(changes.apiUrl.currentValue);
                }
                else {
                    this.codes = Object(this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)).data;
                    this.value = this.setName(this.value);
                }
            }
        }
        setTimeout((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.noChangeFlg = "OFF";
            }), 1000);
        }), 0);
    };
    /**
     *プロパティの初期化
     *通常サービスにキャッシュしているが、無ければ再度マスタより取得
     */
    /**
     * プロパティの初期化
     * 通常サービスにキャッシュしているが、無ければ再度マスタより取得
     * @return {?}
     */
    SHFormPopup.prototype.ngOnInit = /**
     * プロパティの初期化
     * 通常サービスにキャッシュしているが、無ければ再度マスタより取得
     * @return {?}
     */
    function () {
        var _this = this;
        this.onInit();
        if (this.popupWidth) {
            this.extendWidth = this.popupWidth;
        }
        // //ユニークな文字列
        if (this.isDisabled) {
            if (this.SmplPopupService.getMasterData(this.apiUrl).length <= 0) {
                this.SmplPopupService.fetchAll(this.apiUrl).then((/**
                 * @param {?} response
                 * @return {?}
                 */
                function (response) {
                    _this.codes = response.data;
                    _this.codesHeader = Object.values(response.header);
                }));
            }
        }
    };
    /**
     *api 通信 マスタから取得
     */
    /**
     * api 通信 マスタから取得
     * @param {?} url
     * @param {?=} value
     * @return {?}
     */
    SHFormPopup.prototype.fetchCodes = /**
     * api 通信 マスタから取得
     * @param {?} url
     * @param {?=} value
     * @return {?}
     */
    function (url, value) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                if (this.isBusy)
                    return [2 /*return*/];
                this.isBusy = true;
                this.lockScreenService.lockScreen();
                ((/** @type {?} */ (document.activeElement))).blur();
                return [2 /*return*/, Promise.resolve(this.SmplPopupService.fetchAll(url)).catch((/**
                     * @param {?} _
                     * @return {?}
                     */
                    function (_) { _this.lockScreenService.unlock(); })).then((/**
                     * @param {?} response
                     * @return {?}
                     */
                    function (response) {
                        _this.codes = response.data;
                        _this.codesHeader = Object.values(response.header);
                        _this.dataTitle = response.title;
                        /** @type {?} */
                        var ok = _this.checkValue(value || _this.value);
                        /** @type {?} */
                        var result = "";
                        if (ok) {
                            if (value || _this.value) {
                                result = _this.setName(value || _this.value);
                            }
                            if (_this.dataCache) {
                                _this.SmplPopupService.setMasterData(url, response);
                            }
                        }
                        _this.isBusy = false;
                        return new Promise((/**
                         * @param {?} resolve
                         * @return {?}
                         */
                        function (resolve) {
                            resolve(result);
                            _this.lockScreenService.unlock();
                        }));
                    }))];
            });
        });
    };
    /**
     * onInput
     * @param event input
     */
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    SHFormPopup.prototype.onInput = /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    function (event) {
        SHCtlCommon.replaceSpace(event);
        SHCtlCommon.replaceFullWidth(event);
        SHCtlCommon.replaceSign(event);
    };
    /**
     * ダイアログを開いて閉じる時に値を親に返す
     */
    /**
     * ダイアログを開いて閉じる時に値を親に返す
     * @return {?}
     */
    SHFormPopup.prototype.openDialog = /**
     * ダイアログを開いて閉じる時に値を親に返す
     * @return {?}
     */
    function () {
        var _this = this;
        // valueの値を一時対比　ダイアログを閉じる際に比較します
        /** @type {?} */
        var tmp = this.value;
        if (!this.popupWidth &&
            this.codes.length != 0 &&
            Object.values(this.codes[0]).length >= 4) {
            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;
        }
        this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {
            height: ShCtlConst.DIALOG_HEIGHT,
            width: this.extendWidth,
            data: {
                dataTitle: this.dataTitle,
                codes: this.codes,
                codesHeader: this.codesHeader,
                hiddenColumns: this.hiddenColumns,
            },
        });
        this.dialogRef.afterClosed().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            if (result) {
                _this.setValueName(result);
                //this.allocateToInputValue(result);
                _this.bindCtlService.setNoChangeFlg({
                    bindColumnArray: _this.bindColumnArray,
                    record: result,
                });
                _this.bindCtlService.setBindValue({
                    bindColumnArray: _this.bindColumnArray,
                    record: result,
                });
                _this.noChangeFlg = "ON";
                //changeイベント経由でemitすると無条件でafterChangeイベントが呼ばれるので
                //値を比較し変更がなければこのタイミングでemitする
                /** @type {?} */
                var resultValues = Object.values(result);
                if (resultValues && resultValues.includes(tmp)) {
                    _this.valueChange.emit(_this.value);
                    return;
                }
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.dispatchOwnValueInputChangeEvent();
                }), 0);
            }
        }));
    };
    /**
     *@ 自身のvalueに紐づくinputのチェンジイベントを発火
     */
    /**
     * \@ 自身のvalueに紐づくinputのチェンジイベントを発火
     * @private
     * @return {?}
     */
    SHFormPopup.prototype.dispatchOwnValueInputChangeEvent = /**
     * \@ 自身のvalueに紐づくinputのチェンジイベントを発火
     * @private
     * @return {?}
     */
    function () {
        if (this.ownValueInputElm) {
            this.ownValueInputElm.dispatchEvent(new Event("change"));
        }
    };
    /**
     *@ bind先のinputがnullかどうか
     */
    /**
     * \@ bind先のinputがnullかどうか
     * @param {?} bindColumnArray
     * @return {?}
     */
    SHFormPopup.prototype.isBindInputNull = /**
     * \@ bind先のinputがnullかどうか
     * @param {?} bindColumnArray
     * @return {?}
     */
    function (bindColumnArray) {
        if (!bindColumnArray || bindColumnArray.length == 0)
            return true;
        return bindColumnArray
            .map((/**
         * @param {?} bindColumnData
         * @return {?}
         */
        function (bindColumnData) {
            return (/** @type {?} */ (document.querySelector("input[name=" + Object.keys(bindColumnData)[0] + "]")));
        }))
            .map((/**
         * @param {?} bindInput
         * @return {?}
         */
        function (bindInput) {
            if (!bindInput)
                return false;
            return !!bindInput.value;
        }))
            .includes(false);
    };
    /**
     * onClick
     * @param event click
     */
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    SHFormPopup.prototype.onClick = /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeClick(event);
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.onAfterClick(event);
        }), 0);
    };
    /**
     * onFocus
     * @param event focus
     */
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    SHFormPopup.prototype.onFocus = /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.onAfterFocus(event);
        }), 0);
    };
    /**
     * @return {?}
     */
    SHFormPopup.prototype.clearAll = /**
     * @return {?}
     */
    function () {
        this.value = "";
        this.name = "";
        if (this.ownLabelInputElm) {
            this.ownLabelInputElm.value = "";
        }
        this.valueChange.emit("");
    };
    /**
     * onChange
     * @param event change
     */
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    SHFormPopup.prototype.onChange = /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeChange(event);
        if (!event.target.value) {
            this.clearAll();
        }
        /** @type {?} */
        var flg = false;
        if (this.noChangeFlg == "OFF") {
            flg = true;
            if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&
                event.target.value) {
                this.noChangeFlg = "ON";
                this.fetchCodes(this.apiUrl, this.toText(event.target.value)).then((/**
                 * @param {?} value
                 * @return {?}
                 */
                function (value) {
                    _this.valueChange.emit(value);
                    event.target.value = _this.toText(event.target.value);
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this.onAfterChange(event);
                    }), 0);
                }));
            }
            else {
                event.target.value = this.setName(event.target.value);
                this.valueChange.emit(event.target.value);
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.onAfterChange(event);
                }), 0);
            }
        }
        if (!flg) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.valueChange.emit(event.target.value);
                _this.onAfterChange(event);
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.noChangeFlg = "OFF";
                }), 1000);
            }), 0);
        }
    };
    /**
     * onBlur
     * @param event blur
     */
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    SHFormPopup.prototype.onBlur = /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.onAfterBlur(event);
        }), 0);
    };
    /**
     *手入力の値からの検索結果が複数あった場合はアラートを出す
     */
    /**
     * 手入力の値からの検索結果が複数あった場合はアラートを出す
     * @param {?} value
     * @return {?}
     */
    SHFormPopup.prototype.checkValue = /**
     * 手入力の値からの検索結果が複数あった場合はアラートを出す
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        if (!value)
            return false;
        //let matchedArray = [];
        if (this.codes[0]) {
            /** @type {?} */
            var filterResult = this.codes.filter((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                //this.hasMatchRecords(element, value)
                return Object.values(element)[_this.bindColumnKey - 1] == value;
            }));
            if (filterResult.length == 0) {
                this.clearValue();
                this.valueChange.emit("");
                return false;
            }
            if (filterResult.length >= 2) {
                alert(value + "に複数の候補が検出されました");
                this.clearValue();
                this.valueChange.emit("");
                return false;
            }
        }
        return true;
    };
    /**
     * マスタ情報よりコードを取得
     */
    /**
     * マスタ情報よりコードを取得
     * @return {?}
     */
    SHFormPopup.prototype.getCodes = /**
     * マスタ情報よりコードを取得
     * @return {?}
     */
    function () {
        var _this = this;
        this.openDialog();
        if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0) {
            this.SmplPopupService.fetchAll(this.apiUrl).then((/**
             * @param {?} response
             * @return {?}
             */
            function (response) {
                _this.codes = response.data;
                _this.codesHeader = Object.values(response.header);
                _this.dataTitle = response.title;
                if (_this.dataCache)
                    _this.SmplPopupService.setMasterData(_this.apiUrl, response);
                if (!_this.dialogRef)
                    return;
                if (_this.dialogRef.componentInstance) {
                    _this.dialogRef.componentInstance.codesHeader = _this.codesHeader;
                    _this.dialogRef.componentInstance.unchangeableCodes = _this.codes;
                    _this.dialogRef.componentInstance.codes = _this.codes;
                    _this.dialogRef.componentInstance.dataTitle = _this.dataTitle;
                    if (!_this.popupWidth && Object.values(_this.codes[0]).length >= 4) {
                        _this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;
                    }
                    _this.dialogRef.updateSize(_this.extendWidth, ShCtlConst.DIALOG_HEIGHT);
                    /** @type {?} */
                    var cols_1 = [];
                    _this.dialogRef.componentInstance
                        .getHashKeys()
                        .forEach((/**
                     * @param {?} name
                     * @param {?} idx
                     * @return {?}
                     */
                    function (name, idx) {
                        if (!_this.hiddenColumns.find((/**
                         * @param {?} _
                         * @return {?}
                         */
                        function (_) { return _ == idx + 1; })))
                            cols_1.push(name);
                    }));
                    _this.dialogRef.componentInstance.displayedColumns = cols_1;
                }
            }));
        }
        else {
            this.codes = Object(this.SmplPopupService.getMasterData(this.apiUrl)).data;
            this.codesHeader = Object.values(Object(this.SmplPopupService.getMasterData(this.apiUrl)).header);
            if (this.dialogRef.componentInstance) {
                this.dialogRef.componentInstance.codesHeader = this.codesHeader;
                this.dialogRef.componentInstance.unchangeableCodes = this.codes;
                this.dialogRef.componentInstance.codes = this.codes;
                this.dialogRef.componentInstance.dataTitle = this.dataTitle;
                if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {
                    this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;
                }
                this.dialogRef.updateSize(this.extendWidth, ShCtlConst.DIALOG_HEIGHT);
                /** @type {?} */
                var cols_2 = [];
                this.dialogRef.componentInstance.getHashKeys().forEach((/**
                 * @param {?} name
                 * @param {?} idx
                 * @return {?}
                 */
                function (name, idx) {
                    if (!_this.hiddenColumns.find((/**
                     * @param {?} _
                     * @return {?}
                     */
                    function (_) { return _ == idx + 1; })))
                        cols_2.push(name);
                }));
                this.dialogRef.componentInstance.displayedColumns = cols_2;
            }
        }
    };
    /**
     * 自コントロールのinput value に値を渡す
     * @param matchedArray
     */
    /**
     * 自コントロールのinput value に値を渡す
     * @param {?} matchedArray
     * @return {?}
     */
    SHFormPopup.prototype.setValueName = /**
     * 自コントロールのinput value に値を渡す
     * @param {?} matchedArray
     * @return {?}
     */
    function (matchedArray) {
        if (Object.values(matchedArray)[this.bindColumnKey - 1]) {
            /** @type {?} */
            var val = Object.values(matchedArray)[this.bindColumnKey - 1].toString();
            this.value = val;
        }
        else {
            this.value = "";
        }
        if (Object.values(matchedArray)[this.bindColumnValue - 1]) {
            this.name = Object.values(matchedArray)[this.bindColumnValue - 1].toString();
        }
        else {
            this.name = "";
        }
    };
    /**
     *親子関係になっているinputがある場合に検索対象を親まで広げる
     */
    /**
     * 親子関係になっているinputがある場合に検索対象を親まで広げる
     * @private
     * @param {?} element
     * @param {?} val
     * @return {?}
     */
    SHFormPopup.prototype.hasMatchRecords = /**
     * 親子関係になっているinputがある場合に検索対象を親まで広げる
     * @private
     * @param {?} element
     * @param {?} val
     * @return {?}
     */
    function (element, val) {
        // 検索結果一行分の比較すべき列の値
        /** @type {?} */
        var searchs = [];
        // 現在の比較すべき値
        /** @type {?} */
        var values = [val];
        searchs.push(Object.values(element)[this.bindColumnKey - 1]);
        if (this.bindColumnArray && this.bindColumnArray.length != 0) {
            this.bindColumnArray.forEach((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                /** @type {?} */
                var bindIndex = ((/** @type {?} */ (Object.values(data)[0]))) - 1;
                searchs.push(Object.values(element)[bindIndex]);
                /** @type {?} */
                var targetInput = (/** @type {?} */ (document.querySelector("input[name=" + Object.keys(data)[0] + "]")));
                if (targetInput) {
                    if (targetInput.value) {
                        values.push(targetInput.value);
                    }
                    else {
                        searchs = searchs.filter((/**
                         * @param {?} val
                         * @return {?}
                         */
                        function (val) { return val != Object.values(element)[bindIndex]; }));
                    }
                }
            }));
        }
        /** @type {?} */
        var result = searchs.map((/**
         * @param {?} val
         * @return {?}
         */
        function (val) { return values.includes(val); }));
        return !result.includes(false);
    };
    /**
     * 選択された区分コードに紐づく区分名を設定
     */
    /**
     * 選択された区分コードに紐づく区分名を設定
     * @param {?} val
     * @return {?}
     */
    SHFormPopup.prototype.setName = /**
     * 選択された区分コードに紐づく区分名を設定
     * @param {?} val
     * @return {?}
     */
    function (val) {
        var _this = this;
        /** @type {?} */
        var record = this.codes
            ? this.codes.find((/**
             * @param {?} element
             * @return {?}
             */
            function (element) { return Object.values(element)[_this.bindColumnKey - 1] == val; }))
            : null;
        if (record) {
            /** @type {?} */
            var kbnValue = Object.values(record)[this.bindColumnValue - 1];
            this.name = kbnValue ? kbnValue.toString() : "";
            this.bindCtlService.setBindValue({
                bindColumnArray: this.bindColumnArray,
                record: record,
            });
        }
        else {
            val = "";
            this.clearAll();
        }
        return val;
    };
    /**
     * 入力のクリア
     */
    /**
     * 入力のクリア
     * @return {?}
     */
    SHFormPopup.prototype.clearValue = /**
     * 入力のクリア
     * @return {?}
     */
    function () {
        var _this = this;
        this.value = "";
        this.name = "";
        if (this.ctlName) {
            this.ownValueInputElm.value = "";
            //タイミングを遅らせないとchangeイベント内のevent.target.valueが前の値になる
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.ownValueInputElm.dispatchEvent(new Event("change"));
                _this.ownValueInputElm.dispatchEvent(new Event("focus"));
            }), 0);
        }
        if (this.popupLabelName) {
            this.ownLabelInputElm.value = "";
        }
    };
    /**
     * サブクラスでオーバーライドして使うので消さない
     */
    /**
     * サブクラスでオーバーライドして使うので消さない
     * @param {?} s
     * @return {?}
     */
    SHFormPopup.prototype.toText = /**
     * サブクラスでオーバーライドして使うので消さない
     * @param {?} s
     * @return {?}
     */
    function (s) {
        return s;
    };
    /**
     * @param {?} result
     * @return {?}
     */
    SHFormPopup.prototype.extractBindValue = /**
     * @param {?} result
     * @return {?}
     */
    function (result) {
        if (!result)
            return;
        return Object.values(result)[this.bindColumnKey - 1];
    };
    SHFormPopup.propDecorators = {
        dataTitle: [{ type: Input }],
        dataKbnName: [{ type: Input }],
        apiUrl: [{ type: Input }],
        bindColumnKey: [{ type: Input }],
        bindColumnValue: [{ type: Input }],
        ctlName: [{ type: Input }],
        popupLabelName: [{ type: Input }],
        bindColumnArray: [{ type: Input }],
        hiddenInput: [{ type: Input }],
        hiddenLabel: [{ type: Input }],
        hiddenPopupButton: [{ type: Input }],
        dataCache: [{ type: Input }],
        hiddenColumns: [{ type: Input }],
        popupWidth: [{ type: Input }]
    };
    return SHFormPopup;
}(SHFormControl));
export { SHFormPopup };
if (false) {
    /** @type {?} */
    SHFormPopup.prototype.dataTitle;
    /** @type {?} */
    SHFormPopup.prototype.dataKbnName;
    /** @type {?} */
    SHFormPopup.prototype.apiUrl;
    /** @type {?} */
    SHFormPopup.prototype.bindColumnKey;
    /** @type {?} */
    SHFormPopup.prototype.bindColumnValue;
    /** @type {?} */
    SHFormPopup.prototype.ctlName;
    /** @type {?} */
    SHFormPopup.prototype.popupLabelName;
    /** @type {?} */
    SHFormPopup.prototype.bindColumnArray;
    /** @type {?} */
    SHFormPopup.prototype.hiddenInput;
    /** @type {?} */
    SHFormPopup.prototype.hiddenLabel;
    /** @type {?} */
    SHFormPopup.prototype.hiddenPopupButton;
    /** @type {?} */
    SHFormPopup.prototype.dataCache;
    /** @type {?} */
    SHFormPopup.prototype.hiddenColumns;
    /** @type {?} */
    SHFormPopup.prototype.popupWidth;
    /** @type {?} */
    SHFormPopup.prototype.name;
    /** @type {?} */
    SHFormPopup.prototype.event;
    /** @type {?} */
    SHFormPopup.prototype.codes;
    /** @type {?} */
    SHFormPopup.prototype.codesHeader;
    /** @type {?} */
    SHFormPopup.prototype.extendWidth;
    /** @type {?} */
    SHFormPopup.prototype.dialogRef;
    /** @type {?} */
    SHFormPopup.prototype.initFetchFlg;
    /** @type {?} */
    SHFormPopup.prototype.noChangeFlg;
    /** @type {?} */
    SHFormPopup.prototype.isBusy;
    /**
     * @type {?}
     * @protected
     */
    SHFormPopup.prototype.SmplPopupService;
    /**
     * @type {?}
     * @protected
     */
    SHFormPopup.prototype.dialog;
    /**
     * @type {?}
     * @protected
     */
    SHFormPopup.prototype.bindCtlService;
    /**
     * @type {?}
     * @protected
     */
    SHFormPopup.prototype.lockScreenService;
}
//# sourceMappingURL=data:application/json;base64,