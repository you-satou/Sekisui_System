/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { SHFormControl } from '../../utilities/ShFormControl';
var SHCtlWideCharComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SHCtlWideCharComponent, _super);
    function SHCtlWideCharComponent() {
        var _this = _super.call(this) || this;
        //入力変換時を補足するための値保持
        _this._data = "";
        _this.ctlName = "SHCtlWideChar";
        return _this;
    }
    /**
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.onInit();
        if (this.maxByteLength % 2 != 0)
            this.maxByteLength = this.maxByteLength - 1;
    };
    /**
     * onInput
     * @param event input
     */
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onInput = /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var isSameData = (this._data == event.data);
        this._data = event.data;
        //入力変換中は書き換えを行わない
        if (event.isComposing && (!event.isComposing || !isSameData))
            return;
        if (event.inputType !== 'insertCompositionText') {
            SHCtlCommon.sliceLength(event, this.maxlength);
        }
    };
    /**
     * onClick
     * @param event click
     */
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onClick = /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    function (event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    };
    /**
     * onFocus
     * @param event focus
     */
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onFocus = /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterFocus(event); }), 0);
    };
    /**
     * onBlur
     * @param event blur
     */
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onBlur = /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterBlur(event); }), 0);
        ;
    };
    /**
     * onChange
     * @param event change
     */
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onChange = /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeChange(event);
        //emitの直前にも値の精査を行う
        this.onInput(event);
        this.onKeyUp(event);
        this.valueChange.emit(event.target.value);
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterChange(event); }), 0);
    };
    /**
     * onKeyUp
     * @param event KeyUp
     */
    /**
     * onKeyUp
     * @param {?} event KeyUp
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onKeyUp = /**
     * onKeyUp
     * @param {?} event KeyUp
     * @return {?}
     */
    function (event) {
        if (!event.isComposing) {
            SHCtlCommon.replaceHalf(event);
            SHCtlCommon.replaceHalfSpaceToFull(event);
            SHCtlCommon.replaceHalfKana(event);
            SHCtlCommon.replaceFullDoubleQuote(event);
        }
    };
    /**
     * onKeyDown
     * @param event KeyUp
     */
    /**
     * onKeyDown
     * @param {?} event KeyUp
     * @return {?}
     */
    SHCtlWideCharComponent.prototype.onKeyDown = /**
     * onKeyDown
     * @param {?} event KeyUp
     * @return {?}
     */
    function (event) {
        if (this.maxByteLength > 0)
            _super.prototype.onKeyDown.call(this, event);
        if (!event.isComposing) {
            SHCtlCommon.replaceHalf(event);
            SHCtlCommon.replaceHalfSpaceToFull(event);
            SHCtlCommon.replaceHalfKana(event);
            SHCtlCommon.replaceFullDoubleQuote(event);
        }
    };
    SHCtlWideCharComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-wide-char',
                    template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [placeholder]=\"title\" [required]=\"required\" [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control ShCtlWideChar can-moved-with-the-enter-key {{strClass}}\" (input)=\"onInput($event)\"\r\n        (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" (keyup)=\"onKeyUp($event)\" (keydown)=\"onKeyDown($event)\"\r\n        [disabled]=\"disabled\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n      class=\"form-control ShCtlWideChar can-moved-with-the-enter-key {{strClass}}\" (input)=\"onInput($event)\"\r\n      (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" (keyup)=\"onKeyUp($event)\" (keydown)=\"onKeyDown($event)\"\r\n      [disabled]=\"disabled\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
                }] }
    ];
    /** @nocollapse */
    SHCtlWideCharComponent.ctorParameters = function () { return []; };
    return SHCtlWideCharComponent;
}(SHFormControl));
export { SHCtlWideCharComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    SHCtlWideCharComponent.prototype._data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXdpZGUtY2hhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zaC1mb3JtLWNvbnRyb2wvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zaC1jdGwtd2lkZS1jaGFyL3NoLWN0bC13aWRlLWNoYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFBO0FBRTdEO0lBSzRDLGtEQUFxQjtJQUsvRDtRQUFBLFlBQ0UsaUJBQU8sU0FFUjs7UUFMTyxXQUFLLEdBQUUsRUFBRSxDQUFDO1FBSWhCLEtBQUksQ0FBQyxPQUFPLEdBQUcsZUFBZSxDQUFDOztJQUNqQyxDQUFDOzs7O0lBRU0seUNBQVE7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2QsSUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQzdCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0ksd0NBQU87Ozs7O0lBQWQsVUFBZSxLQUFLOztZQUNaLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQztRQUM3QyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDeEIsaUJBQWlCO1FBQ2pCLElBQUcsS0FBSyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUN6RCxPQUFPO1FBRVQsSUFBSSxLQUFLLENBQUMsU0FBUyxLQUFLLHVCQUF1QixFQUFFO1lB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dCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNIQ3RsQ29tbW9uIH0gZnJvbSAnLi4vc2gtY3RsLWNvbW1vbic7XHJcbmltcG9ydCB7IFNIRm9ybUNvbnRyb2wgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvU2hGb3JtQ29udHJvbCdcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2gtY3RsLXdpZGUtY2hhcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NoLWN0bC13aWRlLWNoYXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoLWN0bC13aWRlLWNoYXIuY29tcG9uZW50LmNzcycsICcuLi8uLi8uLi9zdHlsZS5jb21tb24uY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNIQ3RsV2lkZUNoYXJDb21wb25lbnQgZXh0ZW5kcyBTSEZvcm1Db250cm9sPHN0cmluZz4gaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAvL+WFpeWKm+WkieaPm+aZguOCkuijnOi2s+OBmeOCi+OBn+OCgeOBruWApOS/neaMgVxyXG4gIHByaXZhdGUgX2RhdGEgPVwiXCI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuY3RsTmFtZSA9IFwiU0hDdGxXaWRlQ2hhclwiO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5vbkluaXQoKTtcclxuICAgIGlmICh0aGlzLm1heEJ5dGVMZW5ndGggJSAyICE9IDApXHJcbiAgICAgIHRoaXMubWF4Qnl0ZUxlbmd0aCA9IHRoaXMubWF4Qnl0ZUxlbmd0aCAtIDE7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbklucHV0XHJcbiAgICogQHBhcmFtIGV2ZW50IGlucHV0XHJcbiAgICovXHJcbiAgcHVibGljIG9uSW5wdXQoZXZlbnQpIHtcclxuICAgIGNvbnN0IGlzU2FtZURhdGEgPSAodGhpcy5fZGF0YSA9PSBldmVudC5kYXRhKTtcclxuICAgIHRoaXMuX2RhdGEgPSBldmVudC5kYXRhO1xyXG4gICAgLy/lhaXlipvlpInmj5vkuK3jga/mm7jjgY3mj5vjgYjjgpLooYzjgo/jgarjgYRcclxuICAgIGlmKGV2ZW50LmlzQ29tcG9zaW5nICYmICghZXZlbnQuaXNDb21wb3NpbmcgfHwgIWlzU2FtZURhdGEpKVxyXG4gICAgICByZXR1cm47XHJcblxyXG4gICAgaWYgKGV2ZW50LmlucHV0VHlwZSAhPT0gJ2luc2VydENvbXBvc2l0aW9uVGV4dCcpIHtcclxuICAgICAgU0hDdGxDb21tb24uc2xpY2VMZW5ndGgoZXZlbnQsIHRoaXMubWF4bGVuZ3RoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2xpY2tcclxuICAgKiBAcGFyYW0gZXZlbnQgY2xpY2tcclxuICAgKi9cclxuICBwdWJsaWMgb25DbGljayhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUNsaWNrKGV2ZW50KTtcclxuXHJcbiAgICB0aGlzLm9uQWZ0ZXJDbGljayhldmVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbkZvY3VzXHJcbiAgICogQHBhcmFtIGV2ZW50IGZvY3VzXHJcbiAgICovXHJcbiAgcHVibGljIG9uRm9jdXMoZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVGb2N1cyhldmVudCk7XHJcblxyXG4gICAgZXZlbnQudGFyZ2V0LnNlbGVjdCgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckZvY3VzKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25CbHVyXHJcbiAgICogQHBhcmFtIGV2ZW50IGJsdXJcclxuICAgKi9cclxuICBwdWJsaWMgb25CbHVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQmx1cihldmVudCk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQmx1cihldmVudCk7fSwgMCk7O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25DaGFuZ2VcclxuICAgKiBAcGFyYW0gZXZlbnQgY2hhbmdlXHJcbiAgICovXHJcbiAgcHVibGljIG9uQ2hhbmdlKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQ2hhbmdlKGV2ZW50KTtcclxuXHJcbiAgICAvL2VtaXTjga7nm7TliY3jgavjgoLlgKTjga7nsr7mn7vjgpLooYzjgYZcclxuICAgIHRoaXMub25JbnB1dChldmVudCk7XHJcbiAgICB0aGlzLm9uS2V5VXAoZXZlbnQpO1xyXG4gICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQ2hhbmdlKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25LZXlVcFxyXG4gICAqIEBwYXJhbSBldmVudCBLZXlVcFxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbktleVVwKGV2ZW50KSB7XHJcbiAgICBpZiAoICFldmVudC5pc0NvbXBvc2luZyApIHsgXHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmKGV2ZW50KTtcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUhhbGZTcGFjZVRvRnVsbChldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmS2FuYShldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VGdWxsRG91YmxlUXVvdGUoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25LZXlEb3duXHJcbiAgICogQHBhcmFtIGV2ZW50IEtleVVwXHJcbiAgICovXHJcbiAgcHVibGljIG9uS2V5RG93bihldmVudCkge1xyXG4gICAgaWYgKHRoaXMubWF4Qnl0ZUxlbmd0aCA+IDApXHJcbiAgICAgIHN1cGVyLm9uS2V5RG93bihldmVudCk7XHJcbiAgICBpZiAoICFldmVudC5pc0NvbXBvc2luZyApIHsgXHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmKGV2ZW50KTtcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUhhbGZTcGFjZVRvRnVsbChldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmS2FuYShldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VGdWxsRG91YmxlUXVvdGUoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=