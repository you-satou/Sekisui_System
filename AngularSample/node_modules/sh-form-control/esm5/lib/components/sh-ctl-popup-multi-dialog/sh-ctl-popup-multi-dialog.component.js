/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Component } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
import { SelectionModel } from '@angular/cdk/collections';
import { SHCtlCommon } from '../sh-ctl-common';
/**
 * @record
 */
function Data() { }
if (false) {
    /** @type {?} */
    Data.prototype.dataTitle;
    /** @type {?} */
    Data.prototype.value;
    /** @type {?} */
    Data.prototype.uniqueColumns;
    /** @type {?} */
    Data.prototype.hiddenColumns;
}
var SHCtlPopupDialogMultiComponent = /** @class */ (function () {
    function SHCtlPopupDialogMultiComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.displayedColumns = [];
        this.name = "";
        this.uniqueStr = "";
        this.selection = new SelectionModel(true, []);
    }
    /**
     * 値がバインドされる時に呼ばれる
     */
    /**
     * 値がバインドされる時に呼ばれる
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.ngOnInit = /**
     * 値がバインドされる時に呼ばれる
     * @return {?}
     */
    function () {
        this.init();
    };
    /**
    * 値の初期化
    */
    /**
     * 値の初期化
     * @private
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.init = /**
     * 値の初期化
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.dataTitle = this.data.dataTitle;
        if (this.data.value)
            this.data.value.forEach((/**
             * @param {?} row
             * @return {?}
             */
            function (row) { return _this.selection.select(row); }));
        /** @type {?} */
        var cols = ['select'];
        this.getHashKeys().forEach((/**
         * @param {?} name
         * @param {?} idx
         * @return {?}
         */
        function (name, idx) {
            if (!_this.data.hiddenColumns.find((/**
             * @param {?} _
             * @return {?}
             */
            function (_) { return _ == (idx + 1); })))
                cols.push(name);
        }));
        this.displayedColumns = cols;
        this.uniqueStr = SHCtlCommon.getUniqueStr();
    };
    /**
    * テーブルのヘッダーを編集
    */
    /**
     * テーブルのヘッダーを編集
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.ngAfterViewChecked = /**
     * テーブルのヘッダーを編集
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headerElement = document.getElementsByTagName('th');
        /** @type {?} */
        var countBlank = 0;
        if (!this.codesHeader)
            return;
        for (var i = 0; i < headerElement.length; i++) {
            if (this.codesHeader[i] != "") {
                for (var e = 1; e <= countBlank; e++) {
                    headerElement[i - e].style.display = 'none';
                }
                countBlank = 0;
            }
            else if (this.codesHeader[i] === "") {
                countBlank += 1;
                headerElement[i - countBlank].colSpan = countBlank + 1;
                headerElement[i - countBlank].style.textAlign = 'center';
                if (i === headerElement.length - 1) {
                    for (var j = 0; j < countBlank; j++) {
                        headerElement[i - j].style.display = 'none';
                    }
                }
            }
        }
    };
    /**
     * チェックボックス選択
     */
    /**
     * チェックボックス選択
     * @param {?} row
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.itemSelect = /**
     * チェックボックス選択
     * @param {?} row
     * @return {?}
     */
    function (row) {
        if (!this.isItemSelected(row))
            this.selection.select(row);
    };
    /**
     * 行選択によるチェックボックス値の操作
     */
    /**
     * 行選択によるチェックボックス値の操作
     * @param {?} row
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.itemToggle = /**
     * 行選択によるチェックボックス値の操作
     * @param {?} row
     * @return {?}
     */
    function (row) {
        var _this = this;
        if (!this.isItemSelected(row))
            this.selection.select(row);
        else {
            /** @type {?} */
            var keys_1 = Object.keys(row);
            /** @type {?} */
            var item = this.selection.selected.find((/**
             * @param {?} _
             * @return {?}
             */
            function (_) {
                /** @type {?} */
                var isSame = true;
                keys_1.forEach((/**
                 * @param {?} key
                 * @param {?} idx
                 * @return {?}
                 */
                function (key, idx) {
                    if (_this.data.uniqueColumns.find((/**
                     * @param {?} __
                     * @return {?}
                     */
                    function (__) { return __ == (idx + 1); }))) {
                        if (_[key] != row[key]) {
                            isSame = false;
                            return;
                        }
                    }
                }));
                return isSame;
            }));
            this.selection.deselect(item);
        }
    };
    /**
     * 項目を選択しているかどうか
     */
    /**
     * 項目を選択しているかどうか
     * @param {?} row
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.isItemSelected = /**
     * 項目を選択しているかどうか
     * @param {?} row
     * @return {?}
     */
    function (row) {
        var _this = this;
        if (!this.selection.selected)
            return false;
        /** @type {?} */
        var keys = Object.keys(row);
        /** @type {?} */
        var item = this.selection.selected.find((/**
         * @param {?} _
         * @return {?}
         */
        function (_) {
            /** @type {?} */
            var isSame = true;
            keys.forEach((/**
             * @param {?} key
             * @param {?} idx
             * @return {?}
             */
            function (key, idx) {
                if (_this.data.uniqueColumns.find((/**
                 * @param {?} __
                 * @return {?}
                 */
                function (__) { return __ == (idx + 1); }))) {
                    if (_[key] != row[key]) {
                        isSame = false;
                        return;
                    }
                }
            }));
            return isSame;
        }));
        return item ? true : false;
    };
    /**
     * ダイアログを閉じる
     */
    /**
     * ダイアログを閉じる
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.closeDialog = /**
     * ダイアログを閉じる
     * @return {?}
     */
    function () {
        //ダイアログを閉める時に抽入値を親に渡す
        this.dialogRef.close();
    };
    /**
     * ポップアップから選択されたデータを親に返す
     * @param item
     */
    /**
     * ポップアップから選択されたデータを親に返す
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.returnDialog = /**
     * ポップアップから選択されたデータを親に返す
     * @return {?}
     */
    function () {
        //ダイアログを閉める時に選択値を親に渡す
        this.dialogRef.close(this.selection.selected);
    };
    /**
     * 全ての項目を選択しているかどうか
     */
    /**
     * 全ての項目を選択しているかどうか
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.isAllSelected = /**
     * 全ての項目を選択しているかどうか
     * @return {?}
     */
    function () {
        /** @type {?} */
        var numSelected = this.selection.selected.length;
        /** @type {?} */
        var numRows = this.unchangeableCodes.length;
        return numSelected === numRows;
    };
    /**
     * 全選択・全解除処理
     */
    /**
     * 全選択・全解除処理
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.masterToggle = /**
     * 全選択・全解除処理
     * @return {?}
     */
    function () {
        var _this = this;
        this.isAllSelected() ?
            this.selection.clear() :
            this.unchangeableCodes.forEach((/**
             * @param {?} row
             * @return {?}
             */
            function (row) { return _this.itemSelect(row); }));
    };
    /**
     * チェックボックスラベル
     */
    /**
     * チェックボックスラベル
     * @param {?=} row
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.checkboxLabel = /**
     * チェックボックスラベル
     * @param {?=} row
     * @return {?}
     */
    function (row) {
        if (!row) {
            return (this.isAllSelected() ? 'select' : 'deselect') + " all";
        }
        return (this.selection.isSelected(row) ? 'deselect' : 'select') + " row " + (row.position + 1);
    };
    /**
     * データのkeyを返す
     */
    /**
     * データのkeyを返す
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.getHashKeys = /**
     * データのkeyを返す
     * @return {?}
     */
    function () {
        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {
            return;
        }
        else {
            return Object.keys(this.unchangeableCodes[0]);
        }
    };
    /**
     * ポップアップ内での曖昧検索
     * スペース区切りで1キーワードとする
     * @param event inputイベント
     */
    /**
     * ポップアップ内での曖昧検索
     * スペース区切りで1キーワードとする
     * @param {?} event inputイベント
     * @return {?}
     */
    SHCtlPopupDialogMultiComponent.prototype.filter = /**
     * ポップアップ内での曖昧検索
     * スペース区切りで1キーワードとする
     * @param {?} event inputイベント
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var filterString = event.target.value;
        /** @type {?} */
        var fileterStrArray = filterString.replace(/　/g, " ").split(" ");
        fileterStrArray = fileterStrArray.filter((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            return value;
        }));
        /** @type {?} */
        var resultArray;
        resultArray = this.unchangeableCodes.concat();
        var _loop_1 = function (i) {
            /** @type {?} */
            var obj = this_1;
            resultArray = resultArray.filter((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                /** @type {?} */
                var values = Object.values(value);
                var _loop_2 = function (j) {
                    if (obj.data.hiddenColumns.find((/**
                     * @param {?} _
                     * @return {?}
                     */
                    function (_) { return _ == (j + 1); })))
                        return "continue";
                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {
                        return { value: true };
                    }
                };
                for (var j = 0; j < values.length; j++) {
                    var state_1 = _loop_2(j);
                    if (typeof state_1 === "object")
                        return state_1.value;
                }
                return false;
            }));
        };
        var this_1 = this;
        for (var i = 0; i < fileterStrArray.length; i++) {
            _loop_1(i);
        }
        this.codes = resultArray;
    };
    SHCtlPopupDialogMultiComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-popup-multi-dialog',
                    template: "<div *ngIf=\"!unchangeableCodes\" class=\"overlay\">\r\n  <mat-spinner></mat-spinner>\r\n  <span class=\"loader-text\">Loading...</span>\r\n</div> \r\n<div class=\"sh-container\" id={{uniqueStr}}>\r\n    <h1 mat-dialog-title class=\"sh-text-center\">{{dataTitle}}</h1>\r\n    <div mat-dialog-content class=\"sh-dialog-content\">\r\n      <mat-form-field class=\"sh-width-100\">\r\n        <input matInput placeholder=\"\u691C\u7D22\u6B04\" (input)=\"filter($event)\"/>\r\n      </mat-form-field>\r\n      <div class=\"sh-dialog-table-container mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"codes\" class=\"sh-width-100\">\r\n          <ng-container matColumnDef=\"select\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                            [aria-label]=\"checkboxLabel()\">\r\n              </mat-checkbox>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n              <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                            (change)=\"$event ? itemToggle(row) : null\"\r\n                            [checked]=\"isItemSelected(row)\"\r\n                            [aria-label]=\"checkboxLabel(row)\">\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n          <span *ngFor=\"let key of getHashKeys(); let i = index\">\r\n            <ng-container matColumnDef=\"{{key}}\">\r\n              <th mat-header-cell *matHeaderCellDef>{{codesHeader[i]}}</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element[key]}}</td>\r\n            </ng-container>\r\n          </span>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"itemToggle(row)\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <div ShFlexRow style=\"width: 100%\">\r\n        <div ShFlex [colLg]=\"50\" [colMd]=\"50\">\r\n          <button mat-raised-button (click)=\"closeDialog()\">\u623B\u308B</button>\r\n        </div>\r\n        <div ShFlex [colLg]=\"50\" [colMd]=\"50\" style=\"text-align: right; padding-right: 0px;\">\r\n          <span style=\"margin-right: 1em;\">\u9078\u629E\u6570\u3000{{selection.selected ? selection.selected.length : \"-\"}} / {{unchangeableCodes ? unchangeableCodes.length : \"-\"}}</span>\r\n          <button mat-raised-button color=\"primary\" (click)=\"returnDialog()\">\u9078\u629E</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ",
                    styles: ["", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
                }] }
    ];
    /** @nocollapse */
    SHCtlPopupDialogMultiComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return SHCtlPopupDialogMultiComponent;
}());
export { SHCtlPopupDialogMultiComponent };
if (false) {
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.displayedColumns;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.name;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.uniqueStr;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.dataTitle;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.codes;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.unchangeableCodes;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.codesHeader;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.selection;
    /**
     * @type {?}
     * @private
     */
    SHCtlPopupDialogMultiComponent.prototype.dialogRef;
    /** @type {?} */
    SHCtlPopupDialogMultiComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXBvcHVwLW11bHRpLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zaC1mb3JtLWNvbnRyb2wvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zaC1jdGwtcG9wdXAtbXVsdGktZGlhbG9nL3NoLWN0bC1wb3B1cC1tdWx0aS1kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLFlBQVksRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7O0FBRS9DLG1CQUtDOzs7SUFKRyx5QkFBaUI7O0lBQ2pCLHFCQUFXOztJQUNYLDZCQUFrQjs7SUFDbEIsNkJBQW1COztBQUd2QjtJQWVJLHdDQUNZLFNBQTRCLEVBQ0osSUFBVTtRQURsQyxjQUFTLEdBQVQsU0FBUyxDQUFtQjtRQUNKLFNBQUksR0FBSixJQUFJLENBQU07UUFYdkMscUJBQWdCLEdBQWEsRUFBRSxDQUFDO1FBQ2hDLFNBQUksR0FBVyxFQUFFLENBQUM7UUFDbEIsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUtmLGNBQVMsR0FBRyxJQUFJLGNBQWMsQ0FBTSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFLakQsQ0FBQztJQUVMOztPQUVHOzs7OztJQUNILGlEQUFROzs7O0lBQVI7UUFDSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7SUFDZixDQUFDO0lBRUQ7O01BRUU7Ozs7OztJQUNNLDZDQUFJOzs7OztJQUFaO1FBQUEsaUJBVUM7UUFURyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3JDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQ2YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQTFCLENBQTBCLEVBQUMsQ0FBQzs7WUFDM0QsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPOzs7OztRQUFDLFVBQUMsSUFBSSxFQUFFLEdBQUc7WUFDakMsSUFBSSxDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUk7Ozs7WUFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBZCxDQUFjLEVBQUM7Z0JBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1RSxDQUFDLEVBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDaEQsQ0FBQztJQUVEOztNQUVFOzs7OztJQUNGLDJEQUFrQjs7OztJQUFsQjs7WUFDUSxhQUFhLEdBQUcsUUFBUSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQzs7WUFDbkQsVUFBVSxHQUFHLENBQUM7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXO1lBQUUsT0FBTztRQUM5QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUMzQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUNsQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO2lCQUMvQztnQkFDRCxVQUFVLEdBQUcsQ0FBQyxDQUFDO2FBQ2xCO2lCQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7Z0JBQ25DLFVBQVUsSUFBSSxDQUFDLENBQUM7Z0JBQ2hCLGFBQWEsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsT0FBTyxHQUFHLFVBQVUsR0FBRyxDQUFDLENBQUM7Z0JBQ3ZELGFBQWEsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7Z0JBQ3pELElBQUksQ0FBQyxLQUFLLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO3dCQUNqQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO3FCQUMvQztpQkFDSjthQUNKO1NBQ0o7SUFDTCxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNJLG1EQUFVOzs7OztJQUFqQixVQUFrQixHQUFPO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNJLG1EQUFVOzs7OztJQUFqQixVQUFrQixHQUFPO1FBQXpCLGlCQWtCQztRQWpCRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUM7WUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDMUI7O2dCQUNHLE1BQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzs7Z0JBQ3ZCLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQSxDQUFDOztvQkFDakMsTUFBTSxHQUFHLElBQUk7Z0JBQ2pCLE1BQUksQ0FBQyxPQUFPOzs7OztnQkFBQyxVQUFDLEdBQUcsRUFBRSxHQUFHO29CQUNsQixJQUFJLEtBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUk7Ozs7b0JBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQWYsQ0FBZSxFQUFDLEVBQUU7d0JBQ3JELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTs0QkFDcEIsTUFBTSxHQUFHLEtBQUssQ0FBQzs0QkFBQyxPQUFPO3lCQUMxQjtxQkFDSjtnQkFDTCxDQUFDLEVBQUMsQ0FBQztnQkFDSCxPQUFPLE1BQU0sQ0FBQztZQUNsQixDQUFDLEVBQUM7WUFDRixJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqQztJQUNMLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0ksdURBQWM7Ozs7O0lBQXJCLFVBQXNCLEdBQU87UUFBN0IsaUJBZUM7UUFkRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRO1lBQUUsT0FBTyxLQUFLLENBQUM7O1lBQ3ZDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzs7WUFDdkIsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUk7Ozs7UUFBQyxVQUFBLENBQUM7O2dCQUNqQyxNQUFNLEdBQUcsSUFBSTtZQUNqQixJQUFJLENBQUMsT0FBTzs7Ozs7WUFBQyxVQUFDLEdBQUcsRUFBRSxHQUFHO2dCQUNsQixJQUFJLEtBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUk7Ozs7Z0JBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEVBQWYsQ0FBZSxFQUFDLEVBQUU7b0JBQ3JELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTt3QkFDcEIsTUFBTSxHQUFHLEtBQUssQ0FBQzt3QkFBQyxPQUFPO3FCQUMxQjtpQkFDSjtZQUNMLENBQUMsRUFBQyxDQUFDO1lBQ0gsT0FBTyxNQUFNLENBQUM7UUFDbEIsQ0FBQyxFQUFDO1FBQ0YsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQy9CLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSxvREFBVzs7OztJQUFsQjtRQUNJLHFCQUFxQjtRQUNyQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRDs7O09BR0c7Ozs7O0lBQ0kscURBQVk7Ozs7SUFBbkI7UUFDSSxxQkFBcUI7UUFDckIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0ksc0RBQWE7Ozs7SUFBcEI7O1lBQ1UsV0FBVyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLE1BQU07O1lBQzVDLE9BQU8sR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTTtRQUM3QyxPQUFPLFdBQVcsS0FBSyxPQUFPLENBQUM7SUFDbkMsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNJLHFEQUFZOzs7O0lBQW5CO1FBQUEsaUJBSUM7UUFIRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQXBCLENBQW9CLEVBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNJLHNEQUFhOzs7OztJQUFwQixVQUFxQixHQUFTO1FBQzFCLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDTixPQUFPLENBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsVUFBTSxDQUFDO1NBQ2hFO1FBQ0QsT0FBTyxDQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFFBQVEsZUFBUSxHQUFHLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBRSxDQUFDO0lBQy9GLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSxvREFBVzs7OztJQUFsQjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsaUJBQWlCLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDL0QsT0FBTztTQUNWO2FBQU07WUFDSCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDakQ7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRzs7Ozs7OztJQUNJLCtDQUFNOzs7Ozs7SUFBYixVQUFjLEtBQUs7O1lBQ1QsWUFBWSxHQUFXLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSzs7WUFDM0MsZUFBZSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7UUFDaEUsZUFBZSxHQUFHLGVBQWUsQ0FBQyxNQUFNOzs7O1FBQUMsVUFBQyxLQUFLO1lBQzNDLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLENBQUMsRUFBQyxDQUFDOztZQUNDLFdBQWtCO1FBQ3RCLFdBQVcsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLENBQUM7Z0NBQ3JDLENBQUM7O2dCQUNGLEdBQUcsU0FBTztZQUNkLFdBQVcsR0FBRyxXQUFXLENBQUMsTUFBTTs7OztZQUFDLFVBQVUsS0FBVTs7b0JBQzdDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzt3Q0FDeEIsQ0FBQztvQkFDTixJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUk7Ozs7b0JBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQVosQ0FBWSxFQUFDOzBDQUFXO29CQUM3RCxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTt3Q0FDOUQsSUFBSTtxQkFDZDs7Z0JBSkwsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFOzBDQUE3QixDQUFDOzs7aUJBS1Q7Z0JBQ0QsT0FBTyxLQUFLLENBQUM7WUFDakIsQ0FBQyxFQUFDLENBQUM7OztRQVhQLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxlQUFlLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRTtvQkFBdEMsQ0FBQztTQVlUO1FBQ0QsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUM7SUFDN0IsQ0FBQzs7Z0JBMU1KLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyx5eEZBQXVEOztpQkFFMUQ7Ozs7Z0JBZlEsWUFBWTtnREE0QlosTUFBTSxTQUFDLGVBQWU7O0lBMEwvQixxQ0FBQztDQUFBLEFBM01ELElBMk1DO1NBdE1ZLDhCQUE4Qjs7O0lBQ3ZDLDBEQUF1Qzs7SUFDdkMsOENBQXlCOztJQUN6QixtREFBc0I7O0lBQ3RCLG1EQUF5Qjs7SUFDekIsK0NBQWtCOztJQUNsQiwyREFBOEI7O0lBQzlCLHFEQUF3Qjs7SUFDeEIsbURBQXFEOzs7OztJQUdqRCxtREFBb0M7O0lBQ3BDLDhDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgQ29tcG9uZW50LCBPbkluaXQsIEFmdGVyVmlld0NoZWNrZWQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWF0RGlhbG9nUmVmLCBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XHJcbmltcG9ydCB7IFNlbGVjdGlvbk1vZGVsIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvbGxlY3Rpb25zJztcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tICcuLi9zaC1jdGwtY29tbW9uJztcclxuXHJcbmludGVyZmFjZSBEYXRhIHtcclxuICAgIGRhdGFUaXRsZTogc3RyaW5nXHJcbiAgICB2YWx1ZTogYW55LFxyXG4gICAgdW5pcXVlQ29sdW1uczogYW55XHJcbiAgICBoaWRkZW5Db2x1bW5zOiBhbnksXHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdzaC1jdGwtcG9wdXAtbXVsdGktZGlhbG9nJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnc2gtY3RsLXBvcHVwLW11bHRpLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnc2gtY3RsLXBvcHVwLW11bHRpLWRpYWxvZy5jb21wb25lbnQuY3NzJywgJy4uLy4uLy4uL3N0eWxlLmNvbW1vbi5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU0hDdGxQb3B1cERpYWxvZ011bHRpQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdDaGVja2VkIHtcclxuICAgIHB1YmxpYyBkaXNwbGF5ZWRDb2x1bW5zOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgcHVibGljIG5hbWU6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBwdWJsaWMgdW5pcXVlU3RyID0gXCJcIjtcclxuICAgIHB1YmxpYyBkYXRhVGl0bGU6IHN0cmluZztcclxuICAgIHB1YmxpYyBjb2RlczogYW55O1xyXG4gICAgcHVibGljIHVuY2hhbmdlYWJsZUNvZGVzOiBhbnk7XHJcbiAgICBwdWJsaWMgY29kZXNIZWFkZXI6IGFueTtcclxuICAgIHB1YmxpYyBzZWxlY3Rpb24gPSBuZXcgU2VsZWN0aW9uTW9kZWw8YW55Pih0cnVlLCBbXSk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxhbnk+LFxyXG4gICAgICAgIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogRGF0YSxcclxuICAgICkgeyB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlgKTjgYzjg5DjgqTjg7Pjg4njgZXjgozjgovmmYLjgavlkbzjgbDjgozjgotcclxuICAgICAqL1xyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5pbml0KClcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICog5YCk44Gu5Yid5pyf5YyWXHJcbiAgICAqL1xyXG4gICAgcHJpdmF0ZSBpbml0KCkge1xyXG4gICAgICAgIHRoaXMuZGF0YVRpdGxlID0gdGhpcy5kYXRhLmRhdGFUaXRsZTtcclxuICAgICAgICBpZiAodGhpcy5kYXRhLnZhbHVlKVxyXG4gICAgICAgICAgICB0aGlzLmRhdGEudmFsdWUuZm9yRWFjaChyb3cgPT4gdGhpcy5zZWxlY3Rpb24uc2VsZWN0KHJvdykpO1xyXG4gICAgICAgIGxldCBjb2xzID0gWydzZWxlY3QnXTtcclxuICAgICAgICB0aGlzLmdldEhhc2hLZXlzKCkuZm9yRWFjaCgobmFtZSwgaWR4KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5kYXRhLmhpZGRlbkNvbHVtbnMuZmluZChfID0+IF8gPT0gKGlkeCArIDEpKSkgY29scy5wdXNoKG5hbWUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuZGlzcGxheWVkQ29sdW1ucyA9IGNvbHM7XHJcbiAgICAgICAgdGhpcy51bmlxdWVTdHIgPSBTSEN0bENvbW1vbi5nZXRVbmlxdWVTdHIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICog44OG44O844OW44Or44Gu44OY44OD44OA44O844KS57eo6ZuGXHJcbiAgICAqL1xyXG4gICAgbmdBZnRlclZpZXdDaGVja2VkKCkge1xyXG4gICAgICAgIGxldCBoZWFkZXJFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RoJylcclxuICAgICAgICBsZXQgY291bnRCbGFuayA9IDA7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNvZGVzSGVhZGVyKSByZXR1cm47XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFkZXJFbGVtZW50Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvZGVzSGVhZGVyW2ldICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGUgPSAxOyBlIDw9IGNvdW50Qmxhbms7IGUrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlckVsZW1lbnRbaSAtIGVdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb3VudEJsYW5rID0gMDtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvZGVzSGVhZGVyW2ldID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICBjb3VudEJsYW5rICs9IDE7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJFbGVtZW50W2kgLSBjb3VudEJsYW5rXS5jb2xTcGFuID0gY291bnRCbGFuayArIDE7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJFbGVtZW50W2kgLSBjb3VudEJsYW5rXS5zdHlsZS50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICAgICAgICAgICAgICAgIGlmIChpID09PSBoZWFkZXJFbGVtZW50Lmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNvdW50Qmxhbms7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJFbGVtZW50W2kgLSBqXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOODgeOCp+ODg+OCr+ODnOODg+OCr+OCuemBuOaKnlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXRlbVNlbGVjdChyb3c6YW55KSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzSXRlbVNlbGVjdGVkKHJvdykpXHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNlbGVjdChyb3cpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6KGM6YG45oqe44Gr44KI44KL44OB44Kn44OD44Kv44Oc44OD44Kv44K55YCk44Gu5pON5L2cXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpdGVtVG9nZ2xlKHJvdzphbnkpIHtcclxuICAgICAgICBpZiAoIXRoaXMuaXNJdGVtU2VsZWN0ZWQocm93KSlcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2VsZWN0KHJvdyk7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMocm93KTsgIFxyXG4gICAgICAgICAgICBsZXQgaXRlbSA9IHRoaXMuc2VsZWN0aW9uLnNlbGVjdGVkLmZpbmQoXyA9PiB7IFxyXG4gICAgICAgICAgICAgICAgbGV0IGlzU2FtZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBrZXlzLmZvckVhY2goKGtleSwgaWR4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZGF0YS51bmlxdWVDb2x1bW5zLmZpbmQoX18gPT4gX18gPT0gKGlkeCArIDEpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX1trZXldICE9IHJvd1trZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1NhbWUgPSBmYWxzZTvjgIByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWU7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5kZXNlbGVjdChpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpoIXnm67jgpLpgbjmip7jgZfjgabjgYTjgovjgYvjganjgYbjgYtcclxuICAgICAqL1xyXG4gICAgcHVibGljIGlzSXRlbVNlbGVjdGVkKHJvdzphbnkpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoIXRoaXMuc2VsZWN0aW9uLnNlbGVjdGVkKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyhyb3cpOyAgXHJcbiAgICAgICAgbGV0IGl0ZW0gPSB0aGlzLnNlbGVjdGlvbi5zZWxlY3RlZC5maW5kKF8gPT4geyBcclxuICAgICAgICAgICAgbGV0IGlzU2FtZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGtleXMuZm9yRWFjaCgoa2V5LCBpZHgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRhdGEudW5pcXVlQ29sdW1ucy5maW5kKF9fID0+IF9fID09IChpZHggKyAxKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoX1trZXldICE9IHJvd1trZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzU2FtZSA9IGZhbHNlOyByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gaXRlbSA/IHRydWUgOiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOODgOOCpOOCouODreOCsOOCkumWieOBmOOCi1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY2xvc2VEaWFsb2coKSB7XHJcbiAgICAgICAgLy/jg4DjgqTjgqLjg63jgrDjgpLplonjgoHjgovmmYLjgavmir3lhaXlgKTjgpLopqrjgavmuKHjgZlcclxuICAgICAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog44Od44OD44OX44Ki44OD44OX44GL44KJ6YG45oqe44GV44KM44Gf44OH44O844K/44KS6Kaq44Gr6L+U44GZXHJcbiAgICAgKiBAcGFyYW0gaXRlbSBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJldHVybkRpYWxvZygpIHtcclxuICAgICAgICAvL+ODgOOCpOOCouODreOCsOOCkumWieOCgeOCi+aZguOBq+mBuOaKnuWApOOCkuimquOBq+a4oeOBmVxyXG4gICAgICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKHRoaXMuc2VsZWN0aW9uLnNlbGVjdGVkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFqOOBpuOBrumgheebruOCkumBuOaKnuOBl+OBpuOBhOOCi+OBi+OBqeOBhuOBi1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXNBbGxTZWxlY3RlZCgpIHtcclxuICAgICAgICBjb25zdCBudW1TZWxlY3RlZCA9IHRoaXMuc2VsZWN0aW9uLnNlbGVjdGVkLmxlbmd0aDtcclxuICAgICAgICBjb25zdCBudW1Sb3dzID0gdGhpcy51bmNoYW5nZWFibGVDb2Rlcy5sZW5ndGg7XHJcbiAgICAgICAgcmV0dXJuIG51bVNlbGVjdGVkID09PSBudW1Sb3dzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YWo6YG45oqe44O75YWo6Kej6Zmk5Yem55CGXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBtYXN0ZXJUb2dnbGUoKSB7XHJcbiAgICAgICAgdGhpcy5pc0FsbFNlbGVjdGVkKCkgP1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5jbGVhcigpIDpcclxuICAgICAgICAgICAgdGhpcy51bmNoYW5nZWFibGVDb2Rlcy5mb3JFYWNoKHJvdyA9PiB0aGlzLml0ZW1TZWxlY3Qocm93KSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDjg4Hjgqfjg4Pjgq/jg5zjg4Pjgq/jgrnjg6njg5njg6tcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNoZWNrYm94TGFiZWwocm93PzogYW55KTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoIXJvdykge1xyXG4gICAgICAgICAgICByZXR1cm4gYCR7dGhpcy5pc0FsbFNlbGVjdGVkKCkgPyAnc2VsZWN0JyA6ICdkZXNlbGVjdCd9IGFsbGA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBgJHt0aGlzLnNlbGVjdGlvbi5pc1NlbGVjdGVkKHJvdykgPyAnZGVzZWxlY3QnIDogJ3NlbGVjdCd9IHJvdyAke3Jvdy5wb3NpdGlvbiArIDF9YDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOODh+ODvOOCv+OBrmtleeOCkui/lOOBmVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0SGFzaEtleXMoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnVuY2hhbmdlYWJsZUNvZGVzIHx8IHRoaXMudW5jaGFuZ2VhYmxlQ29kZXMubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuOyBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy51bmNoYW5nZWFibGVDb2Rlc1swXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog44Od44OD44OX44Ki44OD44OX5YaF44Gn44Gu5puW5pin5qSc57SiXHJcbiAgICAgKiDjgrnjg5rjg7zjgrnljLrliIfjgorjgacx44Kt44O844Ov44O844OJ44Go44GZ44KLXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgaW5wdXTjgqTjg5njg7Pjg4hcclxuICAgICAqL1xyXG4gICAgcHVibGljIGZpbHRlcihldmVudCkge1xyXG4gICAgICAgIGNvbnN0IGZpbHRlclN0cmluZzogc3RyaW5nID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgIGxldCBmaWxldGVyU3RyQXJyYXkgPSBmaWx0ZXJTdHJpbmcucmVwbGFjZSgv44CAL2csIFwiIFwiKS5zcGxpdChcIiBcIik7XHJcbiAgICAgICAgZmlsZXRlclN0ckFycmF5ID0gZmlsZXRlclN0ckFycmF5LmZpbHRlcigodmFsdWUpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxldCByZXN1bHRBcnJheTogYW55W107XHJcbiAgICAgICAgcmVzdWx0QXJyYXkgPSB0aGlzLnVuY2hhbmdlYWJsZUNvZGVzLmNvbmNhdCgpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsZXRlclN0ckFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBvYmogPSB0aGlzO1xyXG4gICAgICAgICAgICByZXN1bHRBcnJheSA9IHJlc3VsdEFycmF5LmZpbHRlcihmdW5jdGlvbiAodmFsdWU6IGFueSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlcyA9IE9iamVjdC52YWx1ZXModmFsdWUpXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHZhbHVlcy5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvYmouZGF0YS5oaWRkZW5Db2x1bW5zLmZpbmQoXyA9PiBfID09IChqICsgMSkpKSBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVzW2pdICE9IG51bGwgJiYgdmFsdWVzW2pdLnRvU3RyaW5nKCkubWF0Y2goZmlsZXRlclN0ckFycmF5W2ldKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvZGVzID0gcmVzdWx0QXJyYXk7XHJcbiAgICB9XHJcbn0iXX0=