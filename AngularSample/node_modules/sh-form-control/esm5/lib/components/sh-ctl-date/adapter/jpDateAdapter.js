/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NativeDateAdapter } from '@angular/material';
import { SHCtlCommon } from '../../sh-ctl-common';
/**
 * DatePickerの設定
 */
var /**
 * DatePickerの設定
 */
JpDateAdapter = /** @class */ (function (_super) {
    tslib_1.__extends(JpDateAdapter, _super);
    function JpDateAdapter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * 日付設定
     */
    /**
     * 日付設定
     * @return {?}
     */
    JpDateAdapter.prototype.getDateNames = /**
     * 日付設定
     * @return {?}
     */
    function () {
        /** @type {?} */
        var dateNames = [];
        for (var i = 0; i < 31; i++) {
            dateNames[i] = (i + 1).toString();
        }
        return dateNames;
    };
    /**
     * フォーマット設定
     * @param date 入力された日付
     * @param displayFormat 使用しないがinterfaceで指定があるため定義から消さないこと
     */
    /**
     * フォーマット設定
     * @param {?} date 入力された日付
     * @param {?} displayFormat 使用しないがinterfaceで指定があるため定義から消さないこと
     * @return {?}
     */
    JpDateAdapter.prototype.format = /**
     * フォーマット設定
     * @param {?} date 入力された日付
     * @param {?} displayFormat 使用しないがinterfaceで指定があるため定義から消さないこと
     * @return {?}
     */
    function (date, displayFormat) {
        if (!date)
            return '';
        /** @type {?} */
        var dateStr = SHCtlCommon.getDateStr(date, 'YYYY-MM-dd');
        return dateStr;
    };
    return JpDateAdapter;
}(NativeDateAdapter));
/**
 * DatePickerの設定
 */
export { JpDateAdapter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianBEYXRlQWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1kYXRlL2FkYXB0ZXIvanBEYXRlQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQUtsRDs7OztJQUFtQyx5Q0FBaUI7SUFBcEQ7O0lBc0JBLENBQUM7SUFyQkM7O09BRUc7Ozs7O0lBQ0gsb0NBQVk7Ozs7SUFBWjs7WUFDUSxTQUFTLEdBQWEsRUFBRTtRQUM5QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNCLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNuQztRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRDs7OztPQUlHOzs7Ozs7O0lBQ0gsOEJBQU07Ozs7OztJQUFOLFVBQU8sSUFBVSxFQUFFLGFBQXFCO1FBQ3BDLElBQUcsQ0FBQyxJQUFJO1lBQUUsT0FBTyxFQUFFLENBQUM7O1lBQ2QsT0FBTyxHQUFHLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQztRQUMxRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ0gsb0JBQUM7QUFBRCxDQUFDLEFBdEJELENBQW1DLGlCQUFpQixHQXNCbkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOYXRpdmVEYXRlQWRhcHRlciB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tICcuLi8uLi9zaC1jdGwtY29tbW9uJztcclxuXHJcbi8qKlxyXG4gKiBEYXRlUGlja2Vy44Gu6Kit5a6aXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgSnBEYXRlQWRhcHRlciBleHRlbmRzIE5hdGl2ZURhdGVBZGFwdGVyIHtcclxuICAvKipcclxuICAgKiDml6Xku5joqK3lrppcclxuICAgKi9cclxuICBnZXREYXRlTmFtZXMoKTogc3RyaW5nW10ge1xyXG4gICAgY29uc3QgZGF0ZU5hbWVzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzMTsgaSsrKSB7XHJcbiAgICAgIGRhdGVOYW1lc1tpXSA9IChpICsgMSkudG9TdHJpbmcoKTtcclxuICAgIH1cclxuICAgIHJldHVybiBkYXRlTmFtZXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDjg5Xjgqnjg7zjg57jg4Pjg4joqK3lrppcclxuICAgKiBAcGFyYW0gZGF0ZSDlhaXlipvjgZXjgozjgZ/ml6Xku5hcclxuICAgKiBAcGFyYW0gZGlzcGxheUZvcm1hdCDkvb/nlKjjgZfjgarjgYTjgYxpbnRlcmZhY2XjgafmjIflrprjgYzjgYLjgovjgZ/jgoHlrprnvqnjgYvjgonmtojjgZXjgarjgYTjgZPjgahcclxuICAgKi9cclxuICBmb3JtYXQoZGF0ZTogRGF0ZSwgZGlzcGxheUZvcm1hdDogT2JqZWN0KTogc3RyaW5ne1xyXG4gICAgICBpZighZGF0ZSkgcmV0dXJuICcnO1xyXG4gICAgICBjb25zdCBkYXRlU3RyID0gU0hDdGxDb21tb24uZ2V0RGF0ZVN0cihkYXRlLCAnWVlZWS1NTS1kZCcpO1xyXG4gICAgICByZXR1cm4gZGF0ZVN0cjtcclxuICB9XHJcbn0iXX0=