/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { ValidationErrorService } from 'sh-http-client';
var ShCtlValidatedErrorComponent = /** @class */ (function () {
    /**
     * コンストラクタ
     */
    function ShCtlValidatedErrorComponent(validationErrorService) {
        this.validationErrorService = validationErrorService;
        this.isError = false;
    }
    /**
     * コンポーネント初期化
     */
    /**
     * コンポーネント初期化
     * @return {?}
     */
    ShCtlValidatedErrorComponent.prototype.ngOnInit = /**
     * コンポーネント初期化
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscription = this.validationErrorService.validationErrorState
            .subscribe((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            if (response.show) {
                _this.isError = true;
                _this.errors = [];
                Object.keys(response.meesages).forEach((/**
                 * @param {?} controlName
                 * @return {?}
                 */
                function (controlName) {
                    _this.errors = tslib_1.__spread(_this.errors, response.meesages[controlName]);
                }));
            }
            else {
                _this.isError = false;
                _this.errors = [];
            }
        }));
    };
    /**
     * @return {?}
     */
    ShCtlValidatedErrorComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscription.unsubscribe();
    };
    ShCtlValidatedErrorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-validated-error',
                    template: "<div *ngIf=\"isError\" class=\"error-message\">\r\n  <div *ngFor=\"let item of errors\" class=\"errorMessages text-red\" role=\"alert\">\r\n    \u30FB{{item}}\r\n  </div>\r\n</div>\r\n",
                    styles: [".error-message{text-align:left;width:100%;height:100%}.text-red{color:red}"]
                }] }
    ];
    /** @nocollapse */
    ShCtlValidatedErrorComponent.ctorParameters = function () { return [
        { type: ValidationErrorService }
    ]; };
    ShCtlValidatedErrorComponent.propDecorators = {
        message: [{ type: Input }],
        isError: [{ type: Input }],
        errors: [{ type: Input }]
    };
    return ShCtlValidatedErrorComponent;
}());
export { ShCtlValidatedErrorComponent };
if (false) {
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.message;
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.isError;
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.errors;
    /**
     * @type {?}
     * @private
     */
    ShCtlValidatedErrorComponent.prototype.subscription;
    /**
     * @type {?}
     * @private
     */
    ShCtlValidatedErrorComponent.prototype.validationErrorService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXZhbGlkYXRlZC1lcnJvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zaC1mb3JtLWNvbnRyb2wvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zaC1jdGwtdmFsaWRhdGVkLWVycm9yL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHeEQ7SUFVRTs7T0FFRztJQUNILHNDQUNVLHNCQUE4QztRQUE5QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBUC9DLFlBQU8sR0FBWSxLQUFLLENBQUM7SUFROUIsQ0FBQztJQUVMOztPQUVHOzs7OztJQUNJLCtDQUFROzs7O0lBQWY7UUFBQSxpQkFjQztRQWJDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLG9CQUFvQjthQUNqRSxTQUFTOzs7O1FBQUMsVUFBQSxRQUFRO1lBQ2pCLElBQUksUUFBUSxDQUFDLElBQUksRUFBRTtnQkFDakIsS0FBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7Z0JBQ3BCLEtBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO2dCQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPOzs7O2dCQUFDLFVBQUEsV0FBVztvQkFDaEQsS0FBSSxDQUFDLE1BQU0sb0JBQU8sS0FBSSxDQUFDLE1BQU0sRUFBSyxRQUFRLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BFLENBQUMsRUFBQyxDQUFDO2FBQ0o7aUJBQU07Z0JBQ0wsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQ3JCLEtBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO2FBQ2xCO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDOzs7O0lBQ00sa0RBQVc7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7Z0JBckNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxvTUFBc0Q7O2lCQUV2RDs7OztnQkFQUSxzQkFBc0I7OzswQkFTNUIsS0FBSzswQkFDTCxLQUFLO3lCQUNMLEtBQUs7O0lBOEJSLG1DQUFDO0NBQUEsQUF0Q0QsSUFzQ0M7U0FqQ1ksNEJBQTRCOzs7SUFDdkMsK0NBQXlCOztJQUN6QiwrQ0FBa0M7O0lBQ2xDLDhDQUEwQjs7Ozs7SUFDMUIsb0RBQW1DOzs7OztJQUtqQyw4REFBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBWYWxpZGF0aW9uRXJyb3JTZXJ2aWNlIH0gZnJvbSAnc2gtaHR0cC1jbGllbnQnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2gtY3RsLXZhbGlkYXRlZC1lcnJvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaEN0bFZhbGlkYXRlZEVycm9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIEBJbnB1dCgpIG1lc3NhZ2U6IHN0cmluZztcclxuICBASW5wdXQoKSBpc0Vycm9yOiBib29sZWFuID0gZmFsc2U7XHJcbiAgQElucHV0KCkgZXJyb3JzOiBzdHJpbmdbXTtcclxuICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xyXG4gIC8qKlxyXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSB2YWxpZGF0aW9uRXJyb3JTZXJ2aWNlOiBWYWxpZGF0aW9uRXJyb3JTZXJ2aWNlXHJcbiAgKSB7IH1cclxuXHJcbiAgLyoqXHJcbiAgICog44Kz44Oz44Od44O844ON44Oz44OI5Yid5pyf5YyWXHJcbiAgICovXHJcbiAgcHVibGljIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLnZhbGlkYXRpb25FcnJvclNlcnZpY2UudmFsaWRhdGlvbkVycm9yU3RhdGVcclxuICAgICAgLnN1YnNjcmliZShyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnNob3cpIHtcclxuICAgICAgICAgIHRoaXMuaXNFcnJvciA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLmVycm9ycyA9IFtdO1xyXG4gICAgICAgICAgT2JqZWN0LmtleXMocmVzcG9uc2UubWVlc2FnZXMpLmZvckVhY2goY29udHJvbE5hbWUgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9ycyA9IFsuLi50aGlzLmVycm9ycywgLi4ucmVzcG9uc2UubWVlc2FnZXNbY29udHJvbE5hbWVdXTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmlzRXJyb3IgPSBmYWxzZTtcclxuICAgICAgICAgIHRoaXMuZXJyb3JzID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcbiAgcHVibGljIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICB9XHJcbn1cclxuIl19