/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from "@angular/core";
import { SHCtlCommon } from "../sh-ctl-common";
import { SmplPopupService } from "../../services/smpl-popup.service";
import { MatDialog } from "@angular/material";
import { SHFormPopup } from '../../utilities/ShFormPopup';
import { BindCtlService } from '../../services/bind-ctl.service';
import { LockScreenService } from "../../services/lock-screen.service";
var ShCtlPopupComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ShCtlPopupComponent, _super);
    function ShCtlPopupComponent(SmplPopupService, dialog, bindCtlService, lockScreenService) {
        var _this = _super.call(this, SmplPopupService, dialog, bindCtlService, lockScreenService) || this;
        _this.SmplPopupService = SmplPopupService;
        _this.dialog = dialog;
        _this.bindCtlService = bindCtlService;
        _this.lockScreenService = lockScreenService;
        _this.ctlName = "SHCtlPopup";
        return _this;
    }
    /**
     * onInput
     * @param event input
     */
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    ShCtlPopupComponent.prototype.onInput = /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    function (event) {
        SHCtlCommon.replaceSpace(event);
        SHCtlCommon.replaceFullWidth(event);
        SHCtlCommon.replaceSign(event);
    };
    ShCtlPopupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-popup',
                    template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input class=\"bind-flg__input\" [(value)]=\"noChangeFlg\" [name]=\"noChangeFlgCtlName\" (change)=\"noChangeFlgChange($event)\"/>\r\n    <div class=\"sh-flex sh-flex-center\">\r\n      <mat-form-field [ngStyle]=\"setInputWidth()\" *ngIf=\"!hiddenInput\" class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n        <input #inputElm matInput [required]=\"required\" (input)=\"onInput($event)\" (click)=\"onClick($event)\"\r\n          (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" [(ngModel)]=\"value\"\r\n          class=\"SHCtlJigCode can-moved-with-the-enter-key {{strClass}}\" type=\"tel\" [disabled]=\"disabled\"\r\n          placeholder=\"{{title}}\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\"\r\n          attr.name=\"{{ctlName}}\" />\r\n        <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n          aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n        <mat-icon *ngIf=\"!hiddenPopupButton && hiddenLabel && !inputElm.readOnly && !inputElm.disabled\" mat-button matSuffix class=\"mat-search-btn\"\r\n          (click)=\"getCodes()\">\r\n          search\r\n        </mat-icon>\r\n      </mat-form-field>\r\n      <mat-form-field [ngStyle]=\"setLabelWidth()\" *ngIf=\"!hiddenLabel\" class=\"result-container\">\r\n        <input class=\"result-input  {{strClass}}\" matInput type=\"text\" [(ngModel)]=\"name\" [ngStyle]=\"styles\"\r\n          [ngClass]=\"objClass\" attr.name=\"{{popupLabelName}}\" disabled>\r\n        <mat-icon *ngIf=\"!hiddenPopupButton && !disabled\" mat-button matSuffix class=\"mat-search-btn\" (click)=\"getCodes()\">search\r\n        </mat-icon>\r\n      </mat-form-field>\r\n      <span class=\"mat-icon-container\">\r\n        <mat-icon *ngIf=\"!hiddenPopupButton && hiddenInput && hiddenLabel && !disabled\" mat-button matSuffix class=\"mat-search-btn\"\r\n          (click)=\"getCodes()\">\r\n          search\r\n        </mat-icon>\r\n      </span>\r\n    </div>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}\r\n    </span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"sh-flex sh-flex-center\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <div class=\"only-field\" style=\"width: 33.3%;\" *ngIf=\"!hiddenInput\">\r\n      <input class=\"bind-flg__input\" [(value)]=\"noChangeFlg\" [name]=\"noChangeFlgCtlName\" (change)=\"noChangeFlgChange($event)\"/>\r\n      <input #inputElm matInput [required]=\"required\" (input)=\"onInput($event)\" (click)=\"onClick($event)\"\r\n        (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" [(ngModel)]=\"value\"\r\n        class=\"SHCtlJigCode can-moved-with-the-enter-key {{strClass}}\" type=\"tel\" [disabled]=\"disabled\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\"\r\n        attr.name=\"{{ctlName}}\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n      <mat-icon *ngIf=\"!hiddenPopupButton && hiddenLabel && !inputElm.readOnly && !inputElm.disabled\" mat-button matSuffix class=\"mat-search-btn\"\r\n        (click)=\"getCodes()\">\r\n        search\r\n      </mat-icon>\r\n    </div>\r\n    <div class=\"only-field only-label\" style=\"width: 66.6%;\" *ngIf=\"!hiddenInput\">\r\n      <input class=\"result-input  {{strClass}}\" matInput type=\"text\" [(ngModel)]=\"name\" [ngStyle]=\"styles\"\r\n        [ngClass]=\"objClass\" attr.name=\"{{popupLabelName}}\" disabled>\r\n      <mat-icon *ngIf=\"!hiddenPopupButton && !disabled\" mat-button matSuffix class=\"mat-search-btn\" (click)=\"getCodes()\">search\r\n      </mat-icon>\r\n    </div>\r\n    <span class=\"mat-icon-container\">\r\n      <mat-icon *ngIf=\"!hiddenPopupButton && hiddenInput && hiddenLabel && !disabled\" mat-button matSuffix class=\"mat-search-btn\"\r\n        (click)=\"getCodes()\">\r\n        search\r\n      </mat-icon>\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div class=\"valueOutput-container\">\r\n        <div fxFlex class=\"valueOutput\">{{name}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong></strong></div>\r\n      </div>\r\n      <div class=\"valueOutput-container\">\r\n        <div fxFlex class=\"valueOutput\">{{name}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".input-group-text{background-color:#fff;border:none}.btn{border:none}.btn.btn-primary:disabled{background-color:#999}.btn-primary{background-color:#17a2b8}.btn-primary:hover{background-color:#1792b8}.fixed-bottom{top:708px;height:65px;max-width:1024px;margin-right:auto;margin-left:auto}.mat-search-btn{color:#bababa;font-size:1.1rem}.mat-search-btn:hover{cursor:pointer}.mat-icon-container{margin-left:-17px}.mat-icon-container .mat-search-btn{color:#bababa;font-size:1.1rem;margin:17px 0 0 100%}.result-input{text-overflow:ellipsis}.display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
                }] }
    ];
    /** @nocollapse */
    ShCtlPopupComponent.ctorParameters = function () { return [
        { type: SmplPopupService },
        { type: MatDialog },
        { type: BindCtlService },
        { type: LockScreenService }
    ]; };
    return ShCtlPopupComponent;
}(SHFormPopup));
export { ShCtlPopupComponent };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ShCtlPopupComponent.prototype.SmplPopupService;
    /**
     * @type {?}
     * @protected
     */
    ShCtlPopupComponent.prototype.dialog;
    /**
     * @type {?}
     * @protected
     */
    ShCtlPopupComponent.prototype.bindCtlService;
    /**
     * @type {?}
     * @protected
     */
    ShCtlPopupComponent.prototype.lockScreenService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXBvcHVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1wb3B1cC9zaC1jdGwtcG9wdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRXZFO0lBS3lDLCtDQUFXO0lBRWxELDZCQUNZLGdCQUFrQyxFQUNsQyxNQUFpQixFQUNqQixjQUE4QixFQUM5QixpQkFBb0M7UUFKaEQsWUFNRSxrQkFBTSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDLFNBR25FO1FBUlcsc0JBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxZQUFNLEdBQU4sTUFBTSxDQUFXO1FBQ2pCLG9CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5Qix1QkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBRzlDLEtBQUksQ0FBQyxPQUFPLEdBQUcsWUFBWSxDQUFDOztJQUU5QixDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSSxxQ0FBTzs7Ozs7SUFBZCxVQUFlLEtBQUs7UUFDbEIsV0FBVyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDOztnQkExQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QiwydktBQTRDOztpQkFFN0M7Ozs7Z0JBVlEsZ0JBQWdCO2dCQUNoQixTQUFTO2dCQUVULGNBQWM7Z0JBQ2QsaUJBQWlCOztJQThCMUIsMEJBQUM7Q0FBQSxBQTVCRCxDQUt5QyxXQUFXLEdBdUJuRDtTQXZCWSxtQkFBbUI7Ozs7OztJQUc1QiwrQ0FBNEM7Ozs7O0lBQzVDLHFDQUEyQjs7Ozs7SUFDM0IsNkNBQXdDOzs7OztJQUN4QyxnREFBOEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25DaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tIFwiLi4vc2gtY3RsLWNvbW1vblwiO1xyXG5pbXBvcnQgeyBTbXBsUG9wdXBTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL3NtcGwtcG9wdXAuc2VydmljZVwiO1xyXG5pbXBvcnQgeyBNYXREaWFsb2cgfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWxcIjtcclxuaW1wb3J0IHsgU0hGb3JtUG9wdXAgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvU2hGb3JtUG9wdXAnO1xyXG5pbXBvcnQgeyBCaW5kQ3RsU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2JpbmQtY3RsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2NrU2NyZWVuU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9sb2NrLXNjcmVlbi5zZXJ2aWNlXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NoLWN0bC1wb3B1cCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NoLWN0bC1wb3B1cC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2gtY3RsLXBvcHVwLmNvbXBvbmVudC5jc3MnLCAnLi4vLi4vLi4vc3R5bGUuY29tbW9uLmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaEN0bFBvcHVwQ29tcG9uZW50IGV4dGVuZHMgU0hGb3JtUG9wdXAgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJvdGVjdGVkIFNtcGxQb3B1cFNlcnZpY2U6IFNtcGxQb3B1cFNlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgZGlhbG9nOiBNYXREaWFsb2csXHJcbiAgICBwcm90ZWN0ZWQgYmluZEN0bFNlcnZpY2U6IEJpbmRDdGxTZXJ2aWNlLFxyXG4gICAgcHJvdGVjdGVkIGxvY2tTY3JlZW5TZXJ2aWNlOiBMb2NrU2NyZWVuU2VydmljZVxyXG4gICkge1xyXG4gICAgc3VwZXIoU21wbFBvcHVwU2VydmljZSwgZGlhbG9nLCBiaW5kQ3RsU2VydmljZSwgbG9ja1NjcmVlblNlcnZpY2UpO1xyXG4gICAgdGhpcy5jdGxOYW1lID0gXCJTSEN0bFBvcHVwXCI7XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogb25JbnB1dFxyXG4gICAqIEBwYXJhbSBldmVudCBpbnB1dFxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbklucHV0KGV2ZW50KSB7XHJcbiAgICBTSEN0bENvbW1vbi5yZXBsYWNlU3BhY2UoZXZlbnQpO1xyXG4gICAgU0hDdGxDb21tb24ucmVwbGFjZUZ1bGxXaWR0aChldmVudCk7XHJcbiAgICBTSEN0bENvbW1vbi5yZXBsYWNlU2lnbihldmVudCk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=