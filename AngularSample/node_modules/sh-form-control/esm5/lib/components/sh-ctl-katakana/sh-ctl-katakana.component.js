/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { SHFormControl } from '../../utilities/ShFormControl';
var SHCtlKatakanaComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SHCtlKatakanaComponent, _super);
    function SHCtlKatakanaComponent() {
        var _this = _super.call(this) || this;
        //入力変換時を補足するための値保持
        _this._data = "";
        _this.ctlName = "SHCtlKatakana";
        return _this;
    }
    /**
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.onInit();
    };
    /**
     * onInput
     * @param event input
     */
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onInput = /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var isSameData = (this._data == event.data);
        this._data = event.data;
        //入力変換中は書き換えを行わない
        if (event.isComposing && (!event.isComposing || !isSameData))
            return;
        if (!event.isComposing) {
            if (this.maxByteLength > 0)
                if (event.inputType !== 'insertCompositionText') {
                    this.onKeyDown(event);
                    SHCtlCommon.sliceLength(event, this.maxByteLength);
                }
        }
    };
    /**
     * onPaste
     * @param event paste
     */
    /**
     * onPaste
     * @param {?} event paste
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onPaste = /**
     * onPaste
     * @param {?} event paste
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var obj = this;
        setTimeout((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            SHCtlCommon.replaceHalfDoubleQuote(event);
            obj.replaceFullWIdth(event);
        }), 100);
    };
    /**
     * onClick
     * @param event click
     */
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onClick = /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    function (event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    };
    /**
     * onFocus
     * @param event focus
     */
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onFocus = /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterFocus(event); }), 0);
    };
    /**
     * onChange
     * @param event chage
     */
    /**
     * onChange
     * @param {?} event chage
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onChange = /**
     * onChange
     * @param {?} event chage
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeChange(event);
        //emitの直前にも値の精査を行う
        this.onInput(event);
        this.replaceFullWIdth(event);
        this.valueChange.emit(event.target.value);
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterChange(event); }), 0);
    };
    /**
     * onBlur
     * @param event blur
     */
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onBlur = /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeBlur(event);
        this.replaceFullWIdth(event);
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterBlur(event); }), 0);
        ;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onKeyUp = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!event.isComposing) {
            SHCtlCommon.replaceHalfDoubleQuote(event);
            this.replaceFullWIdth(event);
        }
    };
    /**
     * onKeyDown
     * @param event KeyDown
     */
    /**
     * onKeyDown
     * @param {?} event KeyDown
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.onKeyDown = /**
     * onKeyDown
     * @param {?} event KeyDown
     * @return {?}
     */
    function (event) {
        _super.prototype.onKeyDown.call(this, event);
    };
    /**
     * 除去変換
     * @param event
     */
    /**
     * 除去変換
     * @param {?} event
     * @return {?}
     */
    SHCtlKatakanaComponent.prototype.replaceFullWIdth = /**
     * 除去変換
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.target.value = event.target.value.replace(/[ぁ-んァ-ヶ\u30e0-\u9fcfａ-ｚＡ-Ｚ１-９！”＃＄％＆’（）＝～｜￥＾－‘｛＋＊｝＜＞？＿＠「；：」、。・￥ー　]/g, "");
    };
    SHCtlKatakanaComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-katakana',
                    template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [required]=\"required\" [placeholder]=\"title\" (input)=\"onInput($event)\"\r\n        (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\"\r\n        (paste)=\"onPaste($event)\"\r\n        [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control SHCtlKatakana can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" (input)=\"onInput($event)\"\r\n      (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\"\r\n      (paste)=\"onPaste($event)\"\r\n      [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n      class=\"form-control SHCtlKatakana can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\"\r\n      maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
                }] }
    ];
    /** @nocollapse */
    SHCtlKatakanaComponent.ctorParameters = function () { return []; };
    return SHCtlKatakanaComponent;
}(SHFormControl));
export { SHCtlKatakanaComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    SHCtlKatakanaComponent.prototype._data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLWthdGFrYW5hLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1rYXRha2FuYS9zaC1jdGwta2F0YWthbmEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFBO0FBRTdEO0lBSzRDLGtEQUFxQjtJQUsvRDtRQUFBLFlBQ0UsaUJBQU8sU0FFUjs7UUFMTyxXQUFLLEdBQUUsRUFBRSxDQUFDO1FBSWhCLEtBQUksQ0FBQyxPQUFPLEdBQUcsZUFBZSxDQUFDOztJQUNqQyxDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNJLHdDQUFPOzs7OztJQUFkLFVBQWUsS0FBSzs7WUFDWixVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDN0MsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFBO1FBQ3ZCLGlCQUFpQjtRQUNqQixJQUFHLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDekQsT0FBTztRQUNULElBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFHO1lBQ3hCLElBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDO2dCQUN4QixJQUFJLEtBQUssQ0FBQyxTQUFTLEtBQUssdUJBQXVCLEVBQUU7b0JBQy9DLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxD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OztpQkFFaEQ7Ozs7SUFvSEQsNkJBQUM7Q0FBQSxBQXhIRCxDQUs0QyxhQUFhLEdBbUh4RDtTQW5IWSxzQkFBc0I7Ozs7OztJQUdqQyx1Q0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tICcuLi9zaC1jdGwtY29tbW9uJztcclxuaW1wb3J0IHsgU0hGb3JtQ29udHJvbCB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9TaEZvcm1Db250cm9sJ1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzaC1jdGwta2F0YWthbmEnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zaC1jdGwta2F0YWthbmEuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoLWN0bC1rYXRha2FuYS5jb21wb25lbnQuY3NzJywgJy4uLy4uLy4uL3N0eWxlLmNvbW1vbi5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU0hDdGxLYXRha2FuYUNvbXBvbmVudCBleHRlbmRzIFNIRm9ybUNvbnRyb2w8c3RyaW5nPiBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIC8v5YWl5Yqb5aSJ5o+b5pmC44KS6KOc6Laz44GZ44KL44Gf44KB44Gu5YCk5L+d5oyBXHJcbiAgcHJpdmF0ZSBfZGF0YSA9XCJcIjtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5jdGxOYW1lID0gXCJTSEN0bEthdGFrYW5hXCI7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMub25Jbml0KCk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIG9uSW5wdXRcclxuICAgKiBAcGFyYW0gZXZlbnQgaW5wdXRcclxuICAgKi9cclxuICBwdWJsaWMgb25JbnB1dChldmVudCkge1xyXG4gICAgY29uc3QgaXNTYW1lRGF0YSA9ICh0aGlzLl9kYXRhID09IGV2ZW50LmRhdGEpO1xyXG4gICAgdGhpcy5fZGF0YSA9IGV2ZW50LmRhdGFcclxuICAgIC8v5YWl5Yqb5aSJ5o+b5Lit44Gv5pu444GN5o+b44GI44KS6KGM44KP44Gq44GEXHJcbiAgICBpZihldmVudC5pc0NvbXBvc2luZyAmJiAoIWV2ZW50LmlzQ29tcG9zaW5nIHx8ICFpc1NhbWVEYXRhKSlcclxuICAgICAgcmV0dXJuO1xyXG4gICAgaWYgKCAhZXZlbnQuaXNDb21wb3NpbmcgKSB7XHJcbiAgICAgIGlmICh0aGlzLm1heEJ5dGVMZW5ndGggPiAwKVxyXG4gICAgICAgIGlmIChldmVudC5pbnB1dFR5cGUgIT09ICdpbnNlcnRDb21wb3NpdGlvblRleHQnKSB7XHJcbiAgICAgICAgICB0aGlzLm9uS2V5RG93bihldmVudCk7XHJcbiAgICAgICAgICBTSEN0bENvbW1vbi5zbGljZUxlbmd0aChldmVudCwgdGhpcy5tYXhCeXRlTGVuZ3RoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvblBhc3RlXHJcbiAgICogQHBhcmFtIGV2ZW50IHBhc3RlXHJcbiAgICovXHJcbiAgcHVibGljIG9uUGFzdGUoZXZlbnQpIHtcclxuICAgIGxldCBvYmogPSB0aGlzO1xyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbihlKXtcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUhhbGZEb3VibGVRdW90ZShldmVudCk7XHJcbiAgICAgIG9iai5yZXBsYWNlRnVsbFdJZHRoKGV2ZW50KTtcclxuICAgIH0sIDEwMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbkNsaWNrXHJcbiAgICogQHBhcmFtIGV2ZW50IGNsaWNrXHJcbiAgICovXHJcbiAgcHVibGljIG9uQ2xpY2soZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVDbGljayhldmVudCk7XHJcblxyXG4gICAgdGhpcy5vbkFmdGVyQ2xpY2soZXZlbnQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25Gb2N1c1xyXG4gICAqIEBwYXJhbSBldmVudCBmb2N1c1xyXG4gICAqL1xyXG4gIHB1YmxpYyBvbkZvY3VzKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlRm9jdXMoZXZlbnQpO1xyXG5cclxuICAgIGV2ZW50LnRhcmdldC5zZWxlY3QoKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHt0aGlzLm9uQWZ0ZXJGb2N1cyhldmVudCl9LCAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2hhbmdlXHJcbiAgICogQHBhcmFtIGV2ZW50IGNoYWdlXHJcbiAgICovXHJcbiAgcHVibGljIG9uQ2hhbmdlKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQ2hhbmdlKGV2ZW50KTtcclxuXHJcbiAgICAvL2VtaXTjga7nm7TliY3jgavjgoLlgKTjga7nsr7mn7vjgpLooYzjgYZcclxuICAgIHRoaXMub25JbnB1dChldmVudCk7XHJcbiAgICB0aGlzLnJlcGxhY2VGdWxsV0lkdGgoZXZlbnQpO1xyXG4gICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQ2hhbmdlKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25CbHVyXHJcbiAgICogQHBhcmFtIGV2ZW50IGJsdXJcclxuICAgKi9cclxuICBwdWJsaWMgb25CbHVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQmx1cihldmVudCk7XHJcbiAgICB0aGlzLnJlcGxhY2VGdWxsV0lkdGgoZXZlbnQpXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHt0aGlzLm9uQWZ0ZXJCbHVyKGV2ZW50KTt9LCAwKTs7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25LZXlVcChldmVudCkge1xyXG4gICAgaWYgKCAhZXZlbnQuaXNDb21wb3NpbmcgKSB7IFxyXG4gICAgICBTSEN0bENvbW1vbi5yZXBsYWNlSGFsZkRvdWJsZVF1b3RlKGV2ZW50KTtcclxuICAgICAgdGhpcy5yZXBsYWNlRnVsbFdJZHRoKGV2ZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uS2V5RG93blxyXG4gICAqIEBwYXJhbSBldmVudCBLZXlEb3duXHJcbiAgICovXHJcbiAgcHVibGljIG9uS2V5RG93bihldmVudCkge1xyXG4gICAgc3VwZXIub25LZXlEb3duKGV2ZW50KTtcclxuICB9XHJcblxyXG4gLyoqXHJcbiAgKiDpmaTljrvlpInmj5tcclxuICAqIEBwYXJhbSBldmVudFxyXG4gICovXHJcbiAgcHVibGljIHJlcGxhY2VGdWxsV0lkdGgoZXZlbnQpIHtcclxuICAgIGV2ZW50LnRhcmdldC52YWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZS5yZXBsYWNlKC9b44GBLeOCk+OCoS3jg7ZcXHUzMGUwLVxcdTlmY2bvvYEt772a77yhLe+8uu+8kS3vvJnvvIHigJ3vvIPvvITvvIXvvIbigJnvvIjvvInvvJ3vvZ7vvZzvv6XvvL7vvI3igJjvvZvvvIvvvIrvvZ3vvJzvvJ7vvJ/vvL/vvKDjgIzvvJvvvJrjgI3jgIHjgILjg7vvv6Xjg7zjgIBdL2csIFwiXCIpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19