/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { SHFormControl } from '../../utilities/ShFormControl';
var SHCtlHalfNumberComponent = /** @class */ (function (_super) {
    tslib_1.__extends(SHCtlHalfNumberComponent, _super);
    function SHCtlHalfNumberComponent() {
        var _this = _super.call(this) || this;
        _this.ctlName = "SHCtlHalfNumber";
        return _this;
    }
    /**
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.onInit();
    };
    /**
     * onInput
     * @param event input
     */
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.onInput = /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    function (event) {
        SHCtlCommon.replaceFullWidth(event);
        SHCtlCommon.replaceHalfWidth(event);
        if (event.inputType !== 'insertCompositionText') {
            SHCtlCommon.replaceSpace(event);
            SHCtlCommon.replaceFUllSpace(event);
            SHCtlCommon.replaceSign(event);
            SHCtlCommon.replaceFullWidth(event);
            SHCtlCommon.replaceHalfWidth(event);
        }
    };
    /**
     * onClick
     * @param event click
     */
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.onClick = /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    function (event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    };
    /**
     * onChange
     * @param event change
     */
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.onChange = /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeChange(event);
        this.valueChange.emit(event.target.value.replace(/[^\x01-\x7E\xA1-\xDF]/g, ""));
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterChange(event); }), 0);
    };
    /**
     * onFocus
     * @param event focus
     */
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.onFocus = /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterFocus(event); }), 0);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SHCtlHalfNumberComponent.prototype.onBlur = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        function () { _this.onAfterBlur(event); }), 0);
        ;
    };
    SHCtlHalfNumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sh-ctl-half-number',
                    template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [required]=\"required\" [placeholder]=\"title\" (input)=\"onInput($event)\"\r\n        (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\"\r\n        [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control SHCtlHalfNumber can-moved-with-the-enter-key {{strClass}}\" type=ime-mode:disabled type=\"tel\"\r\n        [disabled]=\"disabled\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" (input)=\"onInput($event)\"\r\n      (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\"\r\n      [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n      class=\"form-control SHCtlHalfNumber can-moved-with-the-enter-key {{strClass}}\" type=ime-mode:disabled type=\"tel\"\r\n      [disabled]=\"disabled\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
                }] }
    ];
    /** @nocollapse */
    SHCtlHalfNumberComponent.ctorParameters = function () { return []; };
    return SHCtlHalfNumberComponent;
}(SHFormControl));
export { SHCtlHalfNumberComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLWhhbGYtbnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1oYWxmLW51bWJlci9zaC1jdGwtaGFsZi1udW1iZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFBO0FBRTdEO0lBSzhDLG9EQUFxQjtJQUVqRTtRQUFBLFlBQ0UsaUJBQU8sU0FFUjtRQURDLEtBQUksQ0FBQyxPQUFPLEdBQUcsaUJBQWlCLENBQUM7O0lBQ25DLENBQUM7Ozs7SUFFRCwyQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0ksMENBQU87Ozs7O0lBQWQsVUFBZSxLQUFVO1FBQ3ZCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsSUFBSSxLQUFLLENBQUMsU0FBUyxLQUFLLHVCQUF1QixFQUFFO1lBQy9DLFdBQVcsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDaEMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BDLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDL0IsV0FBVyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNJLDBDQUFPOzs7OztJQUFkLFVBQWUsS0FBSztRQUNsQixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTFCLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUdEOzs7T0FHRzs7Ozs7O0lBQ0csMkNBQVE7Ozs7O0lBQWYsVUFBZ0IsS0FBSztRQUFyQixpQkFNRTtRQUxELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFM0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLHdCQUF3QixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFaEYsVUFBVTs7O1FBQUMsY0FBTyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFBLENBQUEsQ0FBQyxHQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNJLDBDQUFPOzs7OztJQUFkLFVBQWUsS0FBSztRQUFwQixpQkFNQztRQUxDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUV0QixVQUFVOzs7UUFBQyxjQUFPLEtBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBQSxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFTSx5Q0FBTTs7OztJQUFiLFVBQWMsS0FBSztRQUFuQixpQkFJQztRQUhDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFekIsVUFBVTs7O1FBQUMsY0FBTyxLQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUEsQ0FBQyxHQUFFLENBQUMsQ0FBQyxDQUFDO1FBQUEsQ0FBQztJQUNuRCxDQUFDOztnQkF2RUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDJyRkFBa0Q7O2lCQUVuRDs7OztJQXNFRCwrQkFBQztDQUFBLEFBMUVELENBSzhDLGFBQWEsR0FxRTFEO1NBckVZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNIQ3RsQ29tbW9uIH0gZnJvbSAnLi4vc2gtY3RsLWNvbW1vbic7XHJcbmltcG9ydCB7IFNIRm9ybUNvbnRyb2wgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvU2hGb3JtQ29udHJvbCdcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2gtY3RsLWhhbGYtbnVtYmVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2gtY3RsLWhhbGYtbnVtYmVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zaC1jdGwtaGFsZi1udW1iZXIuY29tcG9uZW50LmNzcycsICcuLi8uLi8uLi9zdHlsZS5jb21tb24uY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNIQ3RsSGFsZk51bWJlckNvbXBvbmVudCBleHRlbmRzIFNIRm9ybUNvbnRyb2w8c3RyaW5nPiBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuY3RsTmFtZSA9IFwiU0hDdGxIYWxmTnVtYmVyXCI7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMub25Jbml0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbklucHV0XHJcbiAgICogQHBhcmFtIGV2ZW50IGlucHV0XHJcbiAgICovXHJcbiAgcHVibGljIG9uSW5wdXQoZXZlbnQ6IGFueSkge1xyXG4gICAgU0hDdGxDb21tb24ucmVwbGFjZUZ1bGxXaWR0aChldmVudCk7XHJcbiAgICBTSEN0bENvbW1vbi5yZXBsYWNlSGFsZldpZHRoKGV2ZW50KTtcclxuICAgIGlmIChldmVudC5pbnB1dFR5cGUgIT09ICdpbnNlcnRDb21wb3NpdGlvblRleHQnKSB7ICBcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZVNwYWNlKGV2ZW50KTtcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUZVbGxTcGFjZShldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VTaWduKGV2ZW50KTtcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUZ1bGxXaWR0aChldmVudCk7XHJcbiAgICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmV2lkdGgoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25DbGlja1xyXG4gICAqIEBwYXJhbSBldmVudCBjbGlja1xyXG4gICAqL1xyXG4gIHB1YmxpYyBvbkNsaWNrKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQ2xpY2soZXZlbnQpO1xyXG5cclxuICAgIHRoaXMub25BZnRlckNsaWNrKGV2ZW50KTtcclxuICB9XHJcblxyXG5cclxuICAvKipcclxuICAgKiBvbkNoYW5nZVxyXG4gICAqIEBwYXJhbSBldmVudCBjaGFuZ2VcclxuICAgKi9cclxuIHB1YmxpYyBvbkNoYW5nZShldmVudCkge1xyXG4gIHRoaXMub25CZWZvcmVDaGFuZ2UoZXZlbnQpO1xyXG4gIFxyXG4gIHRoaXMudmFsdWVDaGFuZ2UuZW1pdChldmVudC50YXJnZXQudmFsdWUucmVwbGFjZSgvW15cXHgwMS1cXHg3RVxceEExLVxceERGXS9nLCBcIlwiKSk7XHJcblxyXG4gIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckNoYW5nZShldmVudCl9LCAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uRm9jdXNcclxuICAgKiBAcGFyYW0gZXZlbnQgZm9jdXNcclxuICAgKi9cclxuICBwdWJsaWMgb25Gb2N1cyhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUZvY3VzKGV2ZW50KTtcclxuXHJcbiAgICBldmVudC50YXJnZXQuc2VsZWN0KCk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyRm9jdXMoZXZlbnQpfSwgMCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25CbHVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQmx1cihldmVudCk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQmx1cihldmVudCk7fSwgMCk7O1xyXG4gIH1cclxuXHJcblxyXG59XHJcbiJdfQ==