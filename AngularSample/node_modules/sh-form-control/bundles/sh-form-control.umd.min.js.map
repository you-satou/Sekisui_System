{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://sh-form-control/lib/components/sh-ctl-common.ts","ng://sh-form-control/lib/services/max-bytelength.service.ts","ng://sh-form-control/lib/utilities/MaxByteLengthHistory.ts","ng://sh-form-control/lib/utilities/ShFormControl.ts","ng://sh-form-control/lib/components/sh-ctl-all-char/sh-ctl-all-char.component.ts","ng://sh-form-control/lib/components/sh-ctl-all-char-ml/sh-ctl-all-char-ml.component.ts","ng://sh-form-control/lib/components/sh-ctl-bunj-no/sh-ctl-bunj-no.component.ts","ng://sh-form-control/lib/components/sh-ctl-date/sh-ctl-date.component.ts","ng://sh-form-control/lib/components/sh-ctl-half-char/sh-ctl-half-char.component.ts","ng://sh-form-control/lib/constShCtl.ts","ng://sh-form-control/lib/components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component.ts","ng://sh-form-control/lib/utilities/ShFormPopup.ts","ng://sh-form-control/lib/services/sh-ctl-api.service.ts","ng://sh-form-control/lib/services/smpl-popup.service.ts","ng://sh-form-control/lib/types/NoChangeFlg.ts","ng://sh-form-control/lib/services/bind-ctl.service.ts","ng://sh-form-control/lib/services/lock-screen.service.ts","ng://sh-form-control/lib/components/sh-ctl-jig-code/sh-ctl-jig-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component.ts","ng://sh-form-control/lib/components/sh-ctl-jyu-code/sh-ctl-jyu-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-katakana/sh-ctl-katakana.component.ts","ng://sh-form-control/lib/components/sh-ctl-number/sh-ctl-number.component.ts","ng://sh-form-control/lib/components/sh-ctl-sesyu-code/sh-ctl-sesyu-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-tan-code/sh-ctl-tan-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-tel-no/sh-ctl-tel-no.component.ts","ng://sh-form-control/lib/components/sh-ctl-time/sh-ctl-time.component.ts","ng://sh-form-control/lib/components/sh-ctl-toku-code/sh-ctl-toku-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-wide-char/sh-ctl-wide-char.component.ts","ng://sh-form-control/lib/components/sh-ctl-wide-char-ml/sh-ctl-wide-char-ml.component.ts","ng://sh-form-control/lib/components/sh-ctl-year-month/sh-ctl-year-month.component.ts","ng://sh-form-control/lib/components/sh-ctl-zip-no/sh-ctl-zip-no.component.ts","ng://sh-form-control/lib/services/smpl-kbn-code.service.ts","ng://sh-form-control/lib/components/sh-ctl-kbn-radio/sh-ctl-kbn-radio.component.ts","ng://sh-form-control/lib/components/sh-ctl-kbn-select/sh-ctl-kbn-select.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup/sh-ctl-popup.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup-multi/sh-ctl-popup-multi.component.ts","ng://sh-form-control/lib/components/sh-ctl-validated-error/sh-ctl-validated-error.component.ts","ng://sh-form-control/lib/components/sh-ctl-half-number/sh-ctl-half-number.component.ts","ng://sh-form-control/lib/components/sh-ctl-check/sh-ctl-check.component.ts","ng://sh-form-control/lib/components/sh-ctl-lock-screen/sh-ctl-lock-screen.component.ts","ng://sh-form-control/lib/pipes/ng-date-value.pipe.ts","ng://sh-form-control/lib/directives/sh-flex-row.directive.ts","ng://sh-form-control/lib/directives/sh-flex.directive.ts","ng://sh-form-control/lib/directives/sh-readonly.directive.ts","ng://sh-form-control/lib/directives/sh-ctl-state.directive.ts","ng://sh-form-control/lib/sh-ctl-common.module.ts","ng://sh-form-control/lib/utilities/sh-app.component.ts","ng://sh-form-control/lib/utilities/ShFormControlType.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","m","i","__read","r","ar","error","SHCtlCommon","getDateStr","date","format","replace","getFullYear","toString","getMonth","slice","getDate","isBlank","obj","undefined","padding","num","option","Number","isNaN","join","LineBreak","str","replaceFullWidth","event","target","replaceHalfChar","match","replaceNumeric","replaceSpace","replaceHalfSpaceToFull","replaceFUllSpace","replaceHalfWidth","replaceSign","exclusionValue","RegExp","getRestrictedSign","replaceFullDoubleQuote","replaceHalfDoubleQuote","replaceHalf","inputTargetValue","String","fromCharCode","charCodeAt","replaceHalfKana","D_MUD","D_KIY","len","split","toZenKata","sliceLength","maxlength","exclude","needsEscape","item","escapeByBackSlash","_this","excludeIndex","signsList","signs","map","index","array","indexOf","getUniqueStr","Math","random","convJyuCode6To8","s","trim","parseInt","sJyuCode","strCd","substr","toUpperCase","subNumber","rStr","Const","keyCodes","numerics","min","max","tenKeyNumerics","enter","chars","space","wideChara","okCharas","65","67","86","88","90","186","187","188","189","190","191","192","219","220","221","222","226","111","106","109","107","110","minus","dot","slash","plus","state","none","danger","warning","success","timeFormat","HH","HHMM","HHMMSS","Injectable","args","providedIn","MaxByteLengthService","generateByteInfo","bytes","c","calcMaxLength","maxBytelength","total","isAllowOperation","ctrlKey","isAllowWithCtlKey","key","shiftKey","isAllowWithShiftKey","isAllowCodes","code","isAllowKey","allowKeys","includes","allowCodes","allowWithCtlKey","allowWithShiftKey","MaxByteLengthHistory","startPoint","maxByteLength","enterableBytes","service","cache","changeEnterableBytes","info","entarableByte","getEnterableBytes","getResult","data","bytes_1","insertStr","substring","getMaxLength","JSON","stringify","SHFormControl","ctlName","isDisabled","title","floatLabel","labelWidth","styles","classes","required","message","disabled","valueChange","EventEmitter","beforeClick","afterClick","beforeFocus","afterFocus","beforeBlur","afterBlur","beforeChange","afterChange","objClass","strClass","isComp","isfocused","onlyField","onInit","onInput","onKeyDown","ngAfterViewInit","selfInputElm","nativeElement","addEventListener","handleKeydown","bind","handleInput","handleCompositionStart","handleCompositionEnd","maxByteLengthHistory","selectionStart","maxLen","emit","onFocusin","onFocusout","setTimeout","onBlur","clickClearButton","keyCode","document","querySelector","dispatchEvent","Event","clearValue","onChange","onFocus","select","onBeforeClick","onAfterClick","onBeforeFocus","onAfterFocus","onBeforeBlur","onAfterBlur","onBeforeChange","onAfterChange","inputValue","Input","Output","ViewChild","static","SHCtlAllCharComponent","_super","_data","tslib_1.__extends","ngOnInit","isSameData","isComposing","inputType","onClick","Component","selector","template","SHCtlAllCharMLComponent","SHCtlBunjNoComponent","toText","toValue","moment","moment_","SHCtlDateComponent","ngOnChanges","changes","currentValue","getfomatedDate","ngAfterContentChecked","stringValue","changeFormat","onKeypress","setCurrentDate","Date","_a","paddingDate","toLocaleDateString","year","month","day","_b","dateStr","dateArr","SHCtlHalfCharComponent","ShCtlConst","STATUS_OK","DIALOG_WIDTH","DIALOG_HEIGHT","DIALOG_MAX_WIDTH","ORDINAL","KEYS","KEY_TAB","KEY_ENTER","KEY_LEFT","KEY_RIGHT","KEY_D","KEY_N","KEY_R","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F10","KEY_F11","KEY_F12","NO_CHANGE","FLG_SUFFIX","SHCtlPopupDialogComponent","dialogRef","displayedColumns","name","uniqueStr","init","dataTitle","cols","getHashKeys","forEach","idx","hiddenColumns","find","ngAfterViewChecked","headerElement","getElementsByTagName","countBlank","codesHeader","style","display","colSpan","textAlign","j","closeDialog","close","selectCode","unchangeableCodes","keys","filter","resultArray","fileterStrArray","concat","this_1","values","codes","MatDialogRef","Inject","MAT_DIALOG_DATA","SHFormPopup","SmplPopupService","dialog","bindCtlService","lockScreenService","dataKbnName","apiUrl","bindColumnKey","bindColumnValue","hiddenInput","hiddenLabel","hiddenPopupButton","dataCache","extendWidth","initFetchFlg","noChangeFlg","isBusy","defineProperty","popupLabelName","noChangeFlgChange","setInputWidth","width","setLabelWidth","previousValue","fetchCodes","firstChange","isBindInputNull","bindColumnArray","getMasterData","setName","popupWidth","fetchAll","response","header","url","lockScreen","blur","catch","unlock","ok","checkValue","setMasterData","openDialog","tmp","open","height","afterClosed","subscribe","setValueName","setNoChangeFlg","record","setBindValue","resultValues","dispatchOwnValueInputChangeEvent","ownValueInputElm","bindColumnData","bindInput","clearAll","ownLabelInputElm","flg","filterResult","element","alert","getCodes","componentInstance","updateSize","cols_1","cols_2","matchedArray","val","hasMatchRecords","searchs","bindIndex","targetInput","kbnValue","extractBindValue","ShCtlApiService","apiComService","getApplicationData","apiResponseBody","applicationData","get","ret","post","put","delete","ShHttpClientService","popupCdSubject","Subject","popupCdState","asObservable","masterCache","masterName","masterData","tslib_1.__values","_c","NoChangeFlg","BindCtlService","NO_CHANGE_FLG_SUFFIX","param","isParamEmpty","generateBindInputInfo","column","LockScreenService","isConnecting","isConnectingSubject","isConnectingState","count","SHCtlJigCodeComponent","smplPopupService","jigCode","strNo","MatDialog","SHCtlPopupDialogMultiComponent","selection","SelectionModel","row","itemSelect","isItemSelected","itemToggle","keys_1","selected","isSame","uniqueColumns","deselect","returnDialog","isAllSelected","masterToggle","clear","checkboxLabel","isSelected","position","SHCtlJyuCodeComponent","enabledHalfKanaInput","rawCodes","rawCodesArray","contactCode","inputElement_1","onKeyUp","toHankaku","hiraganaToKatagana","chr","half","halfArr","full","fullArr","reg","oneStr","charAt","SHCtlKatakanaComponent","onPaste","replaceFullWIdth","SHCtlNumberComponent","decimaldigit","rounding","firstFlag","parseFloat","setMinMax","matInputElement","activeElement","classList","contains","checkNumbersSigns","test","removeComma","decimalDigit","toFixed","toLocaleString","minimumFractionDigits","maximumFractionDigits","decimalAdjust","CEIL","w","pow","round","type","NaN","SHCtlSesyuCodeComponent","SHCtlTanCodeComponent","SHCtlTelNoComponent","SHCtlTimeComponent","adjust","isValidateError","errorMessage","isFirst","timeStrage","timecalculation","setCurrentTime","nullFirstString","nullLastString","newDate","getHours","getMinutes","SHCtlTokuCodeComponent","SHCtlWideCharComponent","allowkeys","isAllowkeys","input","cursor","setSelectionRange","SHCtlWideCharMLComponent","_moment","SHCtlYearMonthComponent","el","FormControl","getYearAndManth","setAttribute","onOpened","onClosed","yearAndMonthCalculation","isKeysAllowedToMe","convYear","ElementRef","SHCtlZipNoComponent","withHyphen","withoutHyphen","inputValue_1","focus","zipcd","SmplKbnCodeService","SHCtlKbnRadioComponent","SmplKbnRadioService","radioContent","displayLabel","throwError","items","kbnCodes","change","changeRadioContent","SHCtlKbnSelectComponent","SmplKbnSelectService","selectContent","hiddenClearButton","changeSelectContent","ShCtlPopupComponent","ShCtlPopupMultiComponent","ShCtlValidatedErrorComponent","validationErrorService","isError","subscription","validationErrorState","show","errors","meesages","controlName","arguments","__spread","ngOnDestroy","unsubscribe","ValidationErrorService","SHCtlHalfNumberComponent","SHCtlCheckComponent","checkedLabel","beforeAlign","checkedValue","uncheckedValue","setLabelPosition","checked","SHCtlLockScreenComponent","NgDateValuePipe","transform","Pipe","ShFlexRowDirective","flexFlow","boxSizing","margin","Directive","ShFlexDirective","colLg","ctlLgFlex","ctlLgMaxWidth","colMd","ctlMdFlex","ctlMdMaxWidth","colSm","ctlSmFlex","ctlSmMaxWidth","mediaSm","mediaMd","ctlWidth","ctlBoxSizing","ctlPadding","initParam","initStyle","window","sm","matchMedia","md","matches","smStyleInit","mdStyleInit","defaultStyleInit","flex","maxWidth","ShReadOnlyDirective","isReadOnly","addAttribute","qs","querySelectorAll","qs_1","qs_1_1","readOnly","qs_2","qs_2_1","qs_3","qs_3_1","ShCtlStateDirective","addShCtlStateClass","className","startsWith","remove","add","qsOnlyField","qsOnlyField_1","qsOnlyField_1_1","ShCtlCommonModule","NgModule","declarations","entryComponents","imports","FormsModule","CommonModule","MatInputModule","MatFormFieldModule","ReactiveFormsModule","MatDialogModule","MatTableModule","MatButtonModule","MatButtonToggleModule","MatRadioModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatIconModule","MatCheckboxModule","MatProgressSpinnerModule","ShHttpClient","exports","providers","ShAppComponent","redirectService","redirect","keyValidation","setToekn","redirectPath","params","URLSearchParams","location","search","token","sessionStorage","setItem","ShHttpClientConst","AUTHORIZATION_TOKEN","history","pushState","pathname","isTargetElement","elm","opacity","shctl","getShCtlElement","checkShCtlAttr","attributes","targets","getNamedItem","parent","parentElement","tagName","onkeydown","altKey","metaKey","nodeList","filteredInput","from","preInput","cur_input","ShFormControlType","_ctlName"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, ViewEncapsulation } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SHCtlCommon {\r\n\r\n  public static readonly Const = {\r\n    keyCodes: {\r\n      numerics: { min: 48, max: 57 }, // åè§1 to 0\r\n      tenKeyNumerics: { min: 96, max: 105 }, // ãã³ã­ã¼ã®åè§0 to 9\r\n      enter: 13, // ã¨ã³ã¿ã¼\r\n      chars: { min: 65, max: 90 }, // åè§a to z\r\n      space: 32, // åè§ã¹ãã¼ã¹\r\n      wideChara: 229, // å¨è§\r\n      okCharas: {\r\n        \"65\": \"a\", \"67\": \"c\", \"86\": \"v\", \"88\": \"x\", \"90\": \"z\"\r\n      }, // Ctrlã¨ã®çµã¿åãã\r\n      signs: { // åè§è¨å·\r\n        \"186\": \":\", \"187\": \";\", \"188\": \",\", \"189\": \"-\", \"190\": \".\", \"191\": \"/\",\r\n        \"192\": \"@\", \"219\": \"[\", \"220\": \"\\\\\", \"221\": \"]\", \"222\": \"^\", \"226\": \"_\",\r\n        \"111\": \"/\", \"106\": \"*\", \"109\": \"-\", \"107\": \"+\", \"110\": \".\" // ãã³ã­ã¼ã®å\r\n      },\r\n      minus: [109, 189], // åè§ãã¤ãã¹(ãã¤ãã³)\r\n      dot: [110, 190], // åè§ããã\r\n      slash: [111, 191], // åè§ã¹ã©ãã·ã¥\r\n      plus: [107, 187], // ãã©ã¹\r\n    },\r\n    state: {\r\n      none: 'none',\r\n      danger: 'danger',\r\n      warning: 'warning',\r\n      success: 'success',\r\n    },\r\n    timeFormat: {\r\n      HH: 3600,\r\n      HHMM: 60,\r\n      HHMMSS: 1,\r\n    }\r\n  }\r\n\r\n  private static signs: string = \"[\\\\\\\\!\\\"#$%&'()\\*\\+\\-\\.,\\/:;<=>?@\\[\\]^_`{|}~]\";\r\n  /**\r\n   * æå®ãããã©ã¼ãããã§Dateãstringã«å¤æ\r\n   * @param date \r\n   * @param format \r\n   */\r\n  public static getDateStr(date: Date, format: string): string {\r\n    format = format.replace(/YYYY/g, date.getFullYear().toString());\r\n    format = format.replace(/MM/g, ('0' + (date.getMonth() + 1).toString()).slice(-2).toString());\r\n    format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2).toString())\r\n    return format\r\n  }\r\n  /**\r\n   * ä¸­èº«ãç©ºãã©ããã®å¤å®\r\n   * @param obj \r\n   */\r\n  public static isBlank(obj: any): boolean {\r\n    if (obj === undefined) return true;\r\n    if (obj === null) return true;\r\n    if (typeof (obj) === \"string\" && obj === \"\") return true;\r\n    if (typeof (obj) === \"object\" && (obj.length !== undefined && obj.length <= 0)) return true;\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããå¤ã¾ãã¯0ã§ããã£ã³ã°ãã\r\n   * @param num ããã£ã³ã°å¯¾è±¡å¤\r\n   * @param lengthãå¤ã®é·ã\r\n   * @param option ä½ã§ããã£ã³ã°ãããã\r\n   */\r\n  public static padding(num: any, length: number, option?: any) {\r\n    //æå®ããªããã°0\r\n    option = option || \"0\";\r\n    //æ°å¤åã«å¤æ\r\n    num = Number(num);\r\n    //æ°å¤ã§ãªããã°nullãè¿ã\r\n    if (isNaN(num)) return null;\r\n\r\n    return (Array(length).join(option) + num).slice(-length);\r\n\r\n  }\r\n\r\n  /**\r\n   * æ¹è¡ã®åé¤\r\n   * @param strãæ¹è¡åé¤ãããæå­å\r\n   */\r\n  public static LineBreak(str: string) {\r\n    let tmp = str.replace(/\\r?\\n/g, \"\")\r\n    return tmp;\r\n\r\n  }\r\n\r\n  /*********************************************************\r\n   * æ°:å¥åãã§ãã¯ \r\n   * ********************************************************/\r\n  /**\r\n   * å¨è§å¥åãã§ãã¯\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceFullWidth(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, '');\r\n\r\n  }\r\n\r\n  /**\r\n   * åè§å¥åãã§ãã¯\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceHalfChar(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.match( /[ -~ï½¡-ï¾]+/g)\r\n  }\r\n\r\n  /**\r\n  * æ°å¤å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceNumeric(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/\\d*/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(åè§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceSpace(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ /g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(åè§)â(å¨è§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceHalfSpaceToFull(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ /g, \"ã\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(å¨è§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceFUllSpace(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ã/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n  * ã¢ã«ãã¡ãããå¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceHalfWidth(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/[a-zA-Z]/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n  * è¨å·å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  * @param exclusionValue å¥åãè¨±å®¹ãããè¨å·ã®éå\r\n  */\r\n  public static replaceSign(event: any, exclusionValue?: string[]) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(new RegExp(SHCtlCommon.getRestrictedSign(exclusionValue), \"g\"), \"\");\r\n\r\n  }\r\n\r\n /**\r\n  * å¨è§ããã«ã¯ã©ã¼ãã¼ã·ã§ã³å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceFullDoubleQuote(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(\"â\", \"ï¼\");\r\n\r\n  }\r\n\r\n /**\r\n  * åè§ããã«ã¯ã©ã¼ãã¼ã·ã§ã³å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceHalfDoubleQuote(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(\"\\\"\", \"ï¾\");\r\n\r\n  }\r\n\r\n /**\r\n  * ãã©ã¼ãããè¨­å®\r\n  * @param inputTargetValue event.target.value\r\n  */\r\n  public static replaceHalf(event:any) {\r\n    event.target.value = event.target.value.replace(/[A-Za-z0-9-!\"#$%&'()=<>,.?_\\[\\]|{}@`^~\\\\/+;*:}]/g, function (inputTargetValue) {\r\n      return String.fromCharCode(inputTargetValue.charCodeAt(0) + 65248);\r\n    });\r\n    return event.target.value;\r\n  }\r\n\r\n/**\r\n * ãã©ã¼ãããè¨­å®\r\n * @param inputTargetValue event.target.value\r\n */\r\n public static replaceHalfKana(event:any) {\r\n  const D_MUD = 'ã¬ã®ã°ã²ã´ã¶ã¸ãºã¼ã¾ãããããããããããããããã´ã·ãº';\r\n  const S_MUD = 'ï½¶ï¾ï½·ï¾ï½¸ï¾ï½¹ï¾ï½ºï¾ï½»ï¾ï½¼ï¾ï½½ï¾ï½¾ï¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½³ï¾ï¾ï¾ï½¦ï¾';\r\n  const D_KIY = 'ã¢ã¤ã¦ã¨ãªã«ã­ã¯ã±ã³ãµã·ã¹ã»ã½ã¿ãããããããããããããã'\r\n              +'ããã ã¡ã¢ã¤ã¦ã¨ã©ãªã«ã¬ã­ã¯ã²ã³ã¡ã£ã¥ã§ã©ãã£ã¥ã§ããã¼ããã»';\r\n  const S_KIY = 'ï½±ï½²ï½³ï½´ï½µï½¶ï½·ï½¸ï½¹ï½ºï½»ï½¼ï½½ï½¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½¦ï¾ï½§ï½¨ï½©ï½ªï½«ï½¯ï½¬ï½­ï½®ï½¡ï½¤ï½°ï½¢ï½£ï½¥';\r\n\r\n  const toZenKata = str => {\r\n      for (let i=0,len=D_MUD.length; i<len; i++) {\r\n          str = str.split( S_MUD.slice(i*2, i*2+2) ).join( D_MUD.slice(i, i+1) );\r\n      }\r\n      for (let i=0,len=D_KIY.length; i<len; i++) {\r\n          str = str.split( S_KIY.slice(i, i+1) ).join( D_KIY.slice(i, i+1) );\r\n      }\r\n      return str;\r\n  };\r\n\r\n  event.target.value = toZenKata(event.target.value);\r\n\r\n  return this.replaceHalf(event);\r\n\r\n}\r\n\r\n  /**\r\n   * inputå¤ã®å¥åæå­æ°å¶é\r\n   * @param event inputã¤ãã³ã\r\n   * @param maxlength å¥åå¶éæå­æ°\r\n   */\r\n  public static sliceLength(event: any, maxlength: number) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.slice(0, maxlength);\r\n\r\n  }\r\n\r\n  /**\r\n   * å¥åå¶éè¨å·ã®åå¾\r\n   * @param exclusionValue å¥åå¯è½æå­ã®éå\r\n   */\r\n  private static getRestrictedSign(exclusionValue: string[]): string {\r\n    if (exclusionValue === undefined || exclusionValue.length === 0) return SHCtlCommon.exclude();\r\n    return SHCtlCommon.exclude(exclusionValue);\r\n\r\n  }\r\n\r\n  /**\r\n   * itemãæ¡ä»¶ã«é©ãã¦ãããªãtrueãè¿ã \r\n   * @param item \r\n   */\r\n  public static needsEscape(item) {\r\n    if (item === \".\" || item === \"*\" || item === \"-\" || item === \"+\" || item === \"[\" || item === \"]\") return true;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * itemã®åã«ããã«ããã¯ã¹ã©ãã·ã¥ä»ä¸ãã \r\n   * @param item \r\n   */\r\n  public static escapeByBackSlash(item) {\r\n    const escapedValue = \"\\\\\" + item;\r\n    return escapedValue;\r\n  }\r\n\r\n  /**\r\n   * å¥åä¸å¯å¯¾è±¡ã®è¨å·ããæå®ããæå­åãé¤å¤ãã\r\n   * \"+\" \".\" ãªã©ã¨ã¹ã±ã¼ããå¿è¦ãªæå­ã«ã¯ã\"\\\"ãã¤ãããex\"\\+\" \r\n   * @param exclusionValue å¥åå¯è½æå­ã®éå\r\n   */\r\n  private static exclude(exclusionValue?: string[]): string {\r\n    let excludeIndex = null;\r\n    let signsList = this.signs.split(\"\");\r\n    signsList.map((item, index, array) => {\r\n      if (exclusionValue !== undefined) excludeIndex = exclusionValue.indexOf(item);\r\n      if (excludeIndex !== -1 && excludeIndex !== null) array[index] = \"\";\r\n      if (array[index] !== \"\" && index !== 0 && index !== signsList.length - 1) {\r\n        if (this.needsEscape(item)) array[index] = this.escapeByBackSlash(item);\r\n      }\r\n    })\r\n    return signsList.join(\"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã«ã¹ã¿ã ã³ã³ãã­ã¼ã«ã³ã³ãã¼ãã³ãåã®è¦ç´ åéè¤ãé¿ããããã®ã¦ãã¼ã¯ã­ã¼\r\n   * ã«ã¹ã¿ã ã³ã³ãã­ã¼ã«1ã¤ã«å¯¾ã1ã¤æã¤\r\n  */\r\n  public static getUniqueStr() {\r\n    return \"uk-\" + Math.random().toString(36).slice(-8);\r\n\r\n  }\r\n\r\n  /**\r\n  * å¾æ¥­å¡ã³ã¼ãã®å¤æ(6æ¡â8æ¡)\r\n  * @param s ã³ã¼ãæå­å\r\n  * @return å¤æå¾ã®ã³ã¼ãæå­å\r\n  */\r\n  public static convJyuCode6To8(s: String): String {\r\n    // ãã©ã³ã¯ãªã\r\n    if (this.isBlank(s)) return '';\r\n    // 6æ¡ä»¥å¤å¦çããªã\r\n    if (s.trim().length != 6 && !isNaN(parseInt(s.toString()))) return s;\r\n\r\n    let sJyuCode = s;\r\n    let result = '00';\r\n\r\n    if (((sJyuCode == '922222') || (sJyuCode == '933333') ||\r\n      (sJyuCode == '944444') || (sJyuCode == '955555') ||\r\n      (sJyuCode == '966666') || (sJyuCode == '977777') ||\r\n      (sJyuCode == '988888')) || ((sJyuCode >= '999000') && (sJyuCode <= '999999'))) {\r\n\r\n      result = '99' + sJyuCode;\r\n    } else {\r\n      let strCd = sJyuCode.substr(0, 1).toUpperCase();\r\n      sJyuCode = sJyuCode.replace(/[c|k|s]/g, '');\r\n      if (strCd == 'C' || strCd == 'S') {\r\n        //å·¦1æå­ã[C]ã[S]ã®ã¨ã\r\n        let subNumber = sJyuCode.substr(2, 2);\r\n        //å·¦ã«æå­ç®ããèªåå«ãï¼æå­ç®ãã\r\n        if (Number(subNumber) >= 0 && Number(subNumber) <= 49) {\r\n          //>= 0 ããã³ã <=49 ã®å ´å\r\n          result = '20' + sJyuCode;\r\n        } else {\r\n          //>= 0 ããã³ã <=49 ã§ãªãå ´å\r\n          result = '19' + sJyuCode;\r\n        }\r\n      } else if (strCd == 'K') {\r\n        //å·¦1æå­ã[C]ã[S]ã®ã¨ãã§ãªã[K]ã®å ´å\r\n        result = '00' + sJyuCode;\r\n      } else {\r\n        //å·¦1æå­ãä¸è¨ä»¥å¤\r\n        let rStr = sJyuCode.substr(-2, 2);\r\n        //å·¦ï¼æå­ã\r\n        if (Number(rStr) >= 0 && Number(rStr) <= 43) {\r\n          //     >= 0 åã³ã<= 43 ã®å ´å\r\n          result = '20' + sJyuCode;\r\n        } else {\r\n          //>= 0 åã³ã<= 43 ã§ãªãå ´å\r\n          result = '19' + sJyuCode;\r\n        }\r\n      }\r\n    }\r\n    // æ´å½¢æå­è¿å´\r\n    return result;\r\n\r\n  }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: `root`,\r\n})\r\nexport class MaxByteLengthService {\r\n  private static readonly allowKeys: string[] = [\"ArrowRight\", \"ArrowLeft\", \"Backspace\", \"ArrowDown\", \"ArrowUp\"];\r\n  private static readonly allowCodes: string[] = [\"Enter\", \"Tab\"];\r\n  private static readonly allowWithCtlKey: string[] = [\"a\", \"Home\", \"End\"];\r\n  private static readonly allowWithShiftKey: string[] = [\"Home\", \"End\"];\r\n  constructor() {}\r\n\r\n  public generateByteInfo(value: string) {\r\n    var length = 0;\r\n    let bytes = [];\r\n    if (!value) return { length, bytes };\r\n    for (var i = 0; i < value.length; i++) {\r\n      var c = value.charCodeAt(i);\r\n      if (\r\n        (c >= 0x0 && c < 0x81) ||\r\n        c === 0xf8f0 ||\r\n        (c >= 0xff61 && c < 0xffa0) ||\r\n        (c >= 0xf8f1 && c < 0xf8f4)\r\n      ) {\r\n        length += 1;\r\n        bytes.push(1);\r\n      } else {\r\n        length += 2;\r\n        bytes.push(2);\r\n      }\r\n    }\r\n    return { length, bytes };\r\n  }\r\n\r\n  public calcMaxLength(bytes: number[], maxBytelength: number, total: number = 0) {\r\n    let i: number;\r\n    for (i = 0; i < bytes.length; i++) {\r\n      total += bytes[i];\r\n      if (total >= maxBytelength) {\r\n        break;\r\n      }\r\n    }\r\n    return (total - maxBytelength) > 0 ? i : i + 1;\r\n  }\r\n  public static isAllowOperation(e: KeyboardEvent) {\r\n    if (e.ctrlKey && MaxByteLengthService.isAllowWithCtlKey(e.key)) return true;\r\n    if (e.shiftKey && MaxByteLengthService.isAllowWithShiftKey(e.key)) return true;\r\n    if (MaxByteLengthService.isAllowCodes(e.code)) return true;\r\n    if(MaxByteLengthService.isAllowKey(e.key)) return true;\r\n    return false;\r\n  }\r\n  public static isAllowKey(key: string) {\r\n    if (MaxByteLengthService.allowKeys.includes(key)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowCodes(code: string) {\r\n    if (MaxByteLengthService.allowCodes.includes(code)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowWithCtlKey(key: string) {\r\n    if (MaxByteLengthService.allowWithCtlKey.includes(key)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowWithShiftKey(key: string) {\r\n    if (MaxByteLengthService.allowWithShiftKey.includes(key)) return true;\r\n    return false;\r\n  }\r\n}\r\n","import { MaxByteLengthService } from \"../services/max-bytelength.service\";\r\n\r\nexport class MaxByteLengthHistory {\r\n  private cache: string;\r\n  private startPoint: number;\r\n  private enterableBytes: number = 0;\r\n  private maxByteLength: number;\r\n  private service: MaxByteLengthService = new MaxByteLengthService();\r\n  constructor(value: string, startPoint: number, maxByteLength: number) {\r\n    this.cache = value;\r\n    this.startPoint = value.length == 1 && startPoint == 1 ? 0 : startPoint;\r\n    this.maxByteLength = maxByteLength;\r\n  }\r\n  public static isAllowOperation(e: KeyboardEvent) {\r\n    return MaxByteLengthService.isAllowOperation(e);\r\n  }\r\n  /**\r\n   *@ enterableBytesãæ¸ãæãã¾ã\r\n   */\r\n  public changeEnterableBytes(value: string) {\r\n    const info = this.service.generateByteInfo(value);\r\n    const entarableByte = this.maxByteLength - info.length;\r\n    this.enterableBytes = entarableByte >= 0 ? entarableByte : 0;\r\n  }\r\n  /**\r\n   *@ æ®ãã®å¥åå¯è½byteæ°ãè¿ã\r\n   */\r\n  public getEnterableBytes() {\r\n    return this.enterableBytes;\r\n  }\r\n  /**\r\n   *@ inputã«ã»ããããå¤ãè¿ã \r\n   */\r\n  public getResult(data: string, value: string) {\r\n    if (!value) return \"\";\r\n    // // è¨±å®¹ãã¤ãæ°ãã¾ã ããæ\r\n    if (this.enterableBytes) return value;\r\n    if (this.startPoint === 0) {\r\n      const { bytes } = this.service.generateByteInfo(value);\r\n      const maxByteLength = this.service.calcMaxLength(\r\n        bytes,\r\n        this.maxByteLength\r\n      );\r\n      return value.substr(0, maxByteLength);\r\n    }\r\n    const { bytes } = this.service.generateByteInfo(data);\r\n    const { length } = this.service.generateByteInfo(this.cache);\r\n    const len = this.service.calcMaxLength(bytes, this.maxByteLength, length);\r\n    const insertStr = data.substr(0, len);\r\n    const h = this.cache.substr(0, this.startPoint);\r\n    const f = this.cache.substring(this.startPoint);\r\n    return h + insertStr + f;\r\n  }\r\n  /**\r\n   *ã¢ã«ãã¡ããããæ°å­ã®å¥åæã«æ¨æºã®maxlengthã«è¨­å®ããããã®å¤ãè¿ã\r\n   */\r\n  public getMaxLength(value) {\r\n    const { bytes } = this.service.generateByteInfo(value);\r\n    return this.service.calcMaxLength(\r\n        bytes,\r\n        this.maxByteLength\r\n      );\r\n  }\r\n  /**\r\n   *ãããã°ç¨\r\n   */\r\n  public toString() {\r\n    return JSON.stringify({\r\n      cache: this.cache,\r\n      startPoint: this.startPoint,\r\n      enterableBytes: this.enterableBytes,\r\n      maxByteLength: this.maxByteLength,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from '../components/sh-ctl-common';\r\nimport { MaxByteLengthHistory } from \"./MaxByteLengthHistory\";\r\n\r\nexport class SHFormControl<T> {\r\n  //è¦ç´ ã³ã³ãã­ã¼ã«å\r\n  @Input() public ctlName: string = \"SHFormControl\";\r\n  //è¡¨ç¤ºã¬ã¤ã¢ã¦ãåãæ¿ããã©ã°(true:é²è¦§å°ç¨/false:ç·¨éå¯è½)\r\n  @Input() public isDisabled: boolean = false;\r\n  //å¤ãã¤ã³ãå¤æ°\r\n  @Input() public value: T = null;\r\n  //ã¿ã¤ãã«å\r\n  @Input() public title = \" \";\r\n  //ã³ã³ãã­ã¼ã«æå(auto/always/nevwer)\r\n  @Input() public floatLabel = \"auto\";\r\n  //é²è¦§å°ç¨ç»é¢ã§ã®ã©ãã«å¹(px)\r\n  @Input() public labelWidth = \"150\";\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åæå­æ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  @Input() public maxlength: number;\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åbyteæ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  @Input() public maxByteLength: number;\r\n  //inputè¦ç´ ã«å¯¾ããstyleã®æå®(å½¢å¼ï¼{ color: \"red\" })\r\n  @Input() public styles: any = {};\r\n  //inputè¦ç´ ã«å¯¾ããclassã®æå®(å½¢å¼ï¼{ \"className\": true } or \"className className2\")\r\n  @Input() public classes: any = {};\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  @Input() public required: boolean = false;\r\n  //inputè¦ç´ ã«å¯¾ããç¶æã®æå®\r\n  @Input() public state: string = \"\";\r\n  //inputè¦ç´ ã«å¯¾ããæè¨ã®æå®\r\n  @Input() public message: string[] = [\"\"];\r\n  //radio,selectã«å¯¾ããééä¿¡ç¨ãã¼ã¿ã®åãæ¸¡ã\r\n  @Input() public items: any[];\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  @Input() public disabled: boolean = false;\r\n\r\n  //å¤ãã¤ã³ãçµæã®è¿å´ãæã\r\n  @Output() public valueChange = new EventEmitter();\r\n\r\n  //BeforeClickã¤ãã³ãè¿å´\r\n  @Output() public beforeClick = new EventEmitter();\r\n  //AfterClickã¤ãã³ãè¿å´\r\n  @Output() public afterClick = new EventEmitter();\r\n  //BeforeFocusã¤ãã³ãè¿å´\r\n  @Output() public beforeFocus = new EventEmitter();\r\n  //AfterFocusã¤ãã³ãè¿å´\r\n  @Output() public afterFocus = new EventEmitter();\r\n  //BeforeBlurã¤ãã³ãè¿å´\r\n  @Output() public beforeBlur = new EventEmitter();\r\n  //AfterBlurã¤ãã³ãè¿å´\r\n  @Output() public afterBlur = new EventEmitter();\r\n  //BeforeChangeã¤ãã³ãè¿å´\r\n  @Output() public beforeChange = new EventEmitter();\r\n  //AfterChangeã¤ãã³ãè¿å´\r\n  @Output() public afterChange = new EventEmitter();\r\n  @ViewChild(`inputElm`, { static: false }) selfInputElm: ElementRef<HTMLInputElement>;\r\n\r\n  public objClass: object = {};\r\n  public strClass: string = \"\";\r\n  public isComp = false;\r\n  public array: any[] = [];\r\n  public maxByteLengthHistory: MaxByteLengthHistory;\r\n  \r\n  //forcusã®ä¿æå¤æ°\r\n  public isfocused: boolean = false;\r\n\r\n  @Input() public onlyField: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  public onInit() {\r\n    //ã¯ã©ã¹ã®æå®æ¹æ³ã«ãã£ã¦åå²ãã\r\n    if (typeof this.classes === \"string\") {\r\n      this.strClass = this.classes;\r\n      this.objClass = null;\r\n    } else {\r\n      this.strClass = \"\";\r\n      this.objClass = this.classes;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {}\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event keydown\r\n   */\r\n  public onKeyDown(event) {}\r\n\r\n  \r\n  ngAfterViewInit() {\r\n    if (!this.maxByteLength) return;\r\n    if (this.selfInputElm) {\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"keydown\",\r\n        this.handleKeydown.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"input\",\r\n        this.handleInput.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"compositionstart\",\r\n        this.handleCompositionStart.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"compositionend\",\r\n        this.handleCompositionEnd.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   *maxByteLengthã®å¶å¾¡\r\n   */\r\n  protected handleKeydown(e) {\r\n    if (!this.maxByteLength) return;\r\n    const value = e.target.value;\r\n    if (\r\n      value &&\r\n      !this.maxByteLengthHistory &&\r\n      !MaxByteLengthHistory.isAllowOperation(e)\r\n    ) {\r\n      this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   *@ ãã¨ä½byteè¨±å®¹ã§ããããæ´æ°\r\n   */\r\n  protected handleInput(e) {\r\n    if (!this.maxByteLength) return;\r\n    this.maxlength = undefined;\r\n    if(!this.maxByteLengthHistory && e.target.value) {\r\n      this.maxByteLengthHistory = this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        e.target.value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }\r\n    if (this.maxByteLengthHistory) {\r\n      this.maxByteLengthHistory.changeEnterableBytes(e.target.value);\r\n      if (!this.maxByteLengthHistory.getEnterableBytes() && !this.isComp) {\r\n        const maxLen = this.maxByteLengthHistory.getMaxLength(e.target.value);\r\n        this.maxlength = maxLen;\r\n        if(e.target.value.length > maxLen) {\r\n          e.target.value = e.target.value.substr(0, maxLen)\r\n          this.valueChange.emit(e.target.value)\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  protected handleCompositionStart(e) {\r\n    if (!this.maxByteLength) return;\r\n    this.isComp = true;\r\n    this.maxlength = undefined;\r\n    if(e.target.value) {\r\n      this.maxByteLengthHistory = this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        e.target.value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }else {\r\n      this.isComp = false;\r\n    }\r\n  }\r\n  protected handleCompositionEnd(e) {\r\n    if (!this.maxByteLength) return;\r\n    const result = this.maxByteLengthHistory.getResult(\r\n      e.data,\r\n      e.target.value.replace(/\\n/g, '##')\r\n    ).replace(/##/g, '\\n');\r\n    e.target.value = result;\r\n    this.valueChange.emit(result);\r\n    this.maxByteLengthHistory = null;\r\n    this.isComp = false;\r\n  }\r\n  /**\r\n   * onFocusin\r\n   * @param event focusin\r\n   */\r\n  public onFocusin(event) {\r\n    this.isfocused = true;\r\n  }\r\n\r\n  /**\r\n   * onFocusout\r\n   * @param event focusout\r\n   */\r\n  public onFocusout(event) {\r\n    this.isfocused = false;\r\n    setTimeout(() => {\r\n      if (!this.isfocused) this.onBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * clickClearButton\r\n   * @param event keydown\r\n   */\r\n  public clickClearButton(event) {\r\n    if (event.keyCode == SHCtlCommon.Const.keyCodes.enter ||\r\n      event.keyCode == SHCtlCommon.Const.keyCodes.space )\r\n    {\r\n      //ã¨ã³ã¿ã¼ã­ã¼ã§å¥ã³ã³ãã­ã¼ã«ã«ãã©ã¼ã«ã¹ãç§»åããªãããã«ãã©ã¼ã«ã¹ãå½ã¦ç´ã\r\n      setTimeout(() => {\r\n        let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n        inputValue.dispatchEvent(new Event('focus'));          \r\n      }, 0);\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    event.target.select();\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {}\r\n\r\n  /**\r\n   * onBeforeClick\r\n   * @param event\r\n   */\r\n  public onBeforeClick(event) {\r\n    this.beforeClick.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterClick\r\n   * @param event\r\n   */\r\n  public onAfterClick(event) {\r\n    this.afterClick.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeFocus\r\n   * @param event\r\n   */\r\n  public onBeforeFocus(event) {\r\n    this.beforeFocus.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterFocus\r\n   * @param event\r\n   */\r\n  public onAfterFocus(event) {\r\n    this.afterFocus.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeBlur\r\n   * @param event\r\n   */\r\n  public onBeforeBlur(event) {\r\n    this.beforeBlur.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterBlur\r\n   * @param event\r\n   */\r\n  public onAfterBlur(event) {\r\n    this.afterBlur.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeChange\r\n   * @param event\r\n   */\r\n  public onBeforeChange(event) {\r\n    this.beforeChange.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterChange\r\n   * @param event\r\n   */\r\n  public onAfterChange(event) {\r\n    this.afterChange.emit(event);\r\n  }\r\n\r\n  /**\r\n   * å¤ã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = null;\r\n    let inputValue = <HTMLInputElement>(\r\n      document.querySelector(\r\n        `textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`\r\n      )\r\n    );\r\n    //ã¿ã¤ãã³ã°ãéãããªãã¨changeã¤ãã³ãåã®event.target.valueãåã®å¤ã«ãªã\r\n    setTimeout(function(){\r\n      inputValue.dispatchEvent(new Event('change'));\r\n      inputValue.dispatchEvent(new Event('focus'));\r\n    },10);   \r\n\r\n  }\r\n}\r\n","import { Component, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-all-char\",\r\n  templateUrl: \"./sh-ctl-all-char.component.html\",\r\n  styleUrls: [\"./sh-ctl-all-char.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlAllCharComponent\r\n  extends SHFormControl<string>\r\n  implements OnInit {\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlAllChar\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = this._data == event.data;\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if (event.isComposing && (!event.isComposing || !isSameData)) return;\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    SHCtlCommon.replaceFullDoubleQuote(event);\r\n    SHCtlCommon.replaceHalfDoubleQuote(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterChange(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = SHCtlCommon.LineBreak(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    event.target.value = SHCtlCommon.LineBreak(event.target.value);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-all-char-ml\",\r\n  templateUrl: \"./sh-ctl-all-char-ml.component.html\",\r\n  styleUrls: [\"./sh-ctl-all-char-ml.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlAllCharMLComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlAllCharML\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    SHCtlCommon.replaceFullDoubleQuote(event);\r\n    SHCtlCommon.replaceHalfDoubleQuote(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (this.value == undefined) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return false;\r\n    }\r\n    this.value = String(this.value);\r\n    this.value = this.value.trim();\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-bunj-no',\r\n  templateUrl: './sh-ctl-bunj-no.component.html',\r\n  styleUrls: ['./sh-ctl-bunj-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlBunjNoComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlBunjNo\";\r\n    this.maxlength = 9;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value)\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ã¼ã­ããã£ã³ã°\r\n   * @param inputValue inputã®å¤\r\n   */\r\n  public toText(inputValue: string): string {\r\n    // ãã©ã³ã¯ãªã\r\n    if (SHCtlCommon.isBlank(inputValue)) return \"\";\r\n    if (inputValue.length > 9) return inputValue;\r\n    inputValue = inputValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    const result: string = (('00000000' + inputValue).slice(-9));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ã¼ã­ãµãã¬ã¹\r\n   * @param inputValue inputã®å¤\r\n   */\r\n  public toValue(inputValue: string): string {\r\n    if (!inputValue) return \"\";\r\n    return inputValue.replace(/^0*/, \"\");\r\n  }\r\n\r\n}\r\n","import { Component, OnChanges, SimpleChanges, OnInit } from \"@angular/core\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\nimport * as moment_ from 'moment';\r\nconst moment = moment_;\r\n\r\n@Component({\r\n  selector: \"sh-ctl-date\",\r\n  templateUrl: \"./sh-ctl-date.component.html\",\r\n  styleUrls: [\"./sh-ctl-date.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlDateComponent extends SHFormControl<string> implements OnInit, OnChanges {\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlDate\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        const result = this.getfomatedDate(changes.value.currentValue.replace(/\\-/g, '/'));\r\n        this.value = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null && this.isDisabled) {\r\n      this.stringValue = this.changeFormat(this.value);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keyPress\r\n   */\r\n  public onKeypress(event) {\r\n    this.setCurrentDate(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    const o = event.target.value;\r\n    this.valueChange.emit(this.getfomatedDate(event.target.value));\r\n    event.target.value = o;\r\n\r\n    setTimeout(() => {\r\n      this.onAfterChange(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * æ¬æ¥æ¥ä»ã®è¨­å®\r\n   */\r\n  public setCurrentDate(event) {\r\n    if (event.key === \"/\") {\r\n      const d  = moment(new Date()).format('YYYY/MM/DD');\r\n      this.value = d;\r\n      event.target.value = d.replace(/\\//g, '-');\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ä»ãã¼ã¿ã®ãã©ã¼ãããå¤æ´ãè¡ã\r\n   * @param date æ¥ä»ãã¼ã¿\r\n   * @return æ¥ä»æå­å\r\n   */\r\n  private getfomatedDate(date) {\r\n    if (!date) return \"\";\r\n    const toString = Object.prototype.toString;\r\n    if (toString.call(date) == \"[object Date]\") {\r\n      const { year, month, day } = this.paddingDate(date.toLocaleDateString());\r\n      return `${year}/${month}/${day}`;\r\n    } \r\n    else {\r\n      const { year, month, day } = this.paddingDate(date);\r\n      if (date.match(/-/))\r\n        return `${year}/${month}/${day}`;\r\n      else\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ä»æå­åã®å¹´ææ¥åå²ãªãã¸ã§ã¯ããè¿å´ãã\r\n   * @param dateStr æ¥ä»æå­å\r\n   * @return åå²ãªãã¸ã§ã¯ã(year, month, day)\r\n   */\r\n  public paddingDate(dateStr: string) {\r\n    if (!dateStr) return;\r\n    const dateArr = dateStr.split(/[-/]/)\r\n    let year = (Array(4).join(\"0\") + dateArr[0]).slice(-4);\r\n    const month = (Array(2).join('0') + dateArr[1]).slice(-2);\r\n    const day = (Array(2).join('0') + dateArr[2]).slice(-2);\r\n    return { year, month, day }\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value \r\n   */\r\n  public changeFormat(value: string) {\r\n    if (!value) {\r\n      this.stringValue = \"\";\r\n      return;\r\n    }\r\n    const result = moment(new Date(value)).format('YYYYå¹´MMæDDæ¥');\r\n    return result;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-half-char',\r\n  templateUrl: './sh-ctl-half-char.component.html',\r\n  styleUrls: ['./sh-ctl-half-char.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlHalfCharComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlHalfChar\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    \r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = !event.target.value ? \"\" : event.target.value; \r\n    event.target.value = event.target.value.replace(/^[^\\x01-\\x7E\\uFF61-\\uFF9F]+$/g, '');\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n}\r\n","export const ShCtlConst = {\r\n  STATUS_OK: 200,\r\n  DIALOG_WIDTH: \"650px\",\r\n  DIALOG_HEIGHT: \"750px\",\r\n  DIALOG_MAX_WIDTH: \"1000px\",\r\n  ORDINAL: {\r\n    KEYS: {\r\n      KEY_TAB: 9,\r\n      KEY_ENTER: 13,\r\n      KEY_LEFT: 37,\r\n      KEY_RIGHT: 39,\r\n      KEY_D: 68,\r\n      KEY_N: 78,\r\n      KEY_R: 82,\r\n      KEY_F1: 112,\r\n      KEY_F2: 113,\r\n      KEY_F3: 114,\r\n      KEY_F4: 115,\r\n      KEY_F5: 116,\r\n      KEY_F6: 117,\r\n      KEY_F10: 121,\r\n      KEY_F11: 122,\r\n      KEY_F12: 123\r\n    },\r\n  },\r\n  NO_CHANGE: {\r\n    FLG_SUFFIX: `NO_CHANGE_FLG_SUFFIX`,\r\n  }\r\n};","import { Inject, Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\n\r\ninterface Data {\r\n    dataTitle: string\r\n    hiddenColumns: any\r\n}\r\n@Component({\r\n    selector: 'sh-ctl-popup-dialog',\r\n    templateUrl: 'sh-ctl-popup-dialog.component.html',\r\n    styleUrls: ['sh-ctl-popup-dialog.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlPopupDialogComponent implements OnInit, AfterViewChecked {\r\n    public displayedColumns: string[] = [];\r\n    public name: string = \"\";\r\n    public uniqueStr = \"\";\r\n    public dataTitle: string;\r\n    public codes: any;\r\n    public unchangeableCodes: any;\r\n    public codesHeader: any;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<SHCtlPopupDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: Data,\r\n    ) { }\r\n\r\n    /**\r\n     * å¤ããã¤ã³ããããæã«å¼ã°ãã\r\n     */\r\n    ngOnInit() {\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n    * å¤ã®åæå\r\n    */\r\n    private init() {\r\n        this.dataTitle = this.data.dataTitle;\r\n        let cols = [];\r\n        this.getHashKeys().forEach((name, idx) => {\r\n            if (!this.data.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n        });\r\n        this.displayedColumns = cols;\r\n        this.uniqueStr = SHCtlCommon.getUniqueStr();\r\n    }\r\n\r\n    /**\r\n    * ãã¼ãã«ã®ãããã¼ãç·¨é\r\n    */\r\n    ngAfterViewChecked() {\r\n        let headerElement = document.getElementsByTagName('th')\r\n        let countBlank = 0;\r\n        if (!this.codesHeader) return;\r\n        for (let i = 0; i < headerElement.length; i++) {\r\n            if (this.codesHeader[i] != \"\") {\r\n                for (let e = 1; e <= countBlank; e++) {\r\n                    headerElement[i - e].style.display = 'none';\r\n                }\r\n                countBlank = 0;\r\n            } else if (this.codesHeader[i] === \"\") {\r\n                countBlank += 1;\r\n                headerElement[i - countBlank].colSpan = countBlank + 1;\r\n                headerElement[i - countBlank].style.textAlign = 'center';\r\n                if (i === headerElement.length - 1) {\r\n                    for (let j = 0; j < countBlank; j++) {\r\n                        headerElement[i - j].style.display = 'none';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã\r\n     */\r\n    public closeDialog() {\r\n        this.dialogRef.close()\r\n\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããããé¸æããããã¼ã¿ãè¦ªã«è¿ã\r\n     * @param item äºæ¥­æã³ã¼ãä¸è¦§ããé¸æããã1ã¤\r\n     */\r\n    public selectCode(item: any) {\r\n        //ãã¤ã¢ã­ã°ãéããæã«å¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close(item)\r\n\r\n    }\r\n\r\n    /**\r\n     * ãã¼ã¿ã®keyãè¿ã\r\n     */\r\n    public getHashKeys() {\r\n        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {\r\n            return []; \r\n        } else {\r\n            return Object.keys(this.unchangeableCodes[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããåã§ã®ææ§æ¤ç´¢\r\n     * ã¹ãã¼ã¹åºåãã§1ã­ã¼ã¯ã¼ãã¨ãã\r\n     * @param event inputã¤ãã³ã\r\n     */\r\n    public filter(event) {\r\n        if (!this.unchangeableCodes) return;\r\n        const filterString: string = event.target.value;\r\n        let fileterStrArray = filterString.replace(/ã/g, \" \").split(\" \");\r\n        fileterStrArray = fileterStrArray.filter((value) => {\r\n            return value;\r\n        });\r\n        let resultArray: any[];\r\n        resultArray = this.unchangeableCodes.concat();\r\n        for (let i = 0; i < fileterStrArray.length; i++) {\r\n            let obj = this;\r\n            resultArray = resultArray.filter(function (value: any) {\r\n                let values = Object.values(value)\r\n                for (let j = 0; j < values.length; j++) {\r\n                    if (obj.data.hiddenColumns.find(_ => _ == (j + 1))) continue;\r\n                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        this.codes = resultArray;\r\n    }\r\n}","import { Input, SimpleChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../components/sh-ctl-common\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { SmplPopupService } from \"../services/smpl-popup.service\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material\";\r\nimport { SHFormControl } from \"./ShFormControl\";\r\nimport { SHCtlPopupDialogComponent } from \"../components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { BindCtlService } from \"../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../services/lock-screen.service\";\r\nimport { NoChangeFlg } from \"../types/NoChangeFlg\";\r\n\r\n\r\nexport class SHFormPopup extends SHFormControl<any> {\r\n  //ãã¼ã¿ã¿ã¤ãã«å\r\n  @Input() public dataTitle: string = \"\";\r\n  //ãã¼ã¿åºåå\r\n  @Input() public dataKbnName: string = \"\";\r\n  //API URL\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  //å¥åã³ã³ãã­ã¼ã«ã«ç´ã¥ãåçªå·\r\n  @Input() public bindColumnKey: number = 1;\r\n  //ã©ãã«ã³ã³ãã­ã¼ã«ã«ç´ã¥ãåçªå·\r\n  @Input() public bindColumnValue: number = 2;\r\n  //å¥åã³ã³ãã­ã¼ã«å\r\n  @Input() public ctlName;\r\n  //ã©ãã«ã³ã³ãã­ã¼ã«å\r\n  @Input() public popupLabelName;\r\n  //ä»ã®ã³ã³ãã­ã¼ã«ã¨ã®å¤é£æºãè¨­å®ãã\r\n  @Input() public bindColumnArray: any;\r\n  //å¥åã³ã³ãã­ã¼ã«ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenInput: boolean = false;\r\n  //ã©ãã«ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenLabel: boolean = false;\r\n  //è«ç¼é¡ã¢ã¤ã³ã³ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenPopupButton: boolean = false;\r\n  //ãã¼ã¿ã­ã£ãã·ã¥ON/OFFæ©è½ãã©ã°\r\n  @Input() public dataCache: boolean = false;\r\n  //ãããã¢ããä¸éè¡¨ç¤ºã¨ãªãåçªå·\r\n  @Input() public hiddenColumns: number[] = [];\r\n  // ãã¤ã¢ã­ã°ã®å¹ãæå®\r\n  @Input() public popupWidth: string;\r\n\r\n  public name: string = \"\";\r\n  public event: any;\r\n  public codes = [];\r\n  public codesHeader = [];\r\n\r\n  public extendWidth = ShCtlConst.DIALOG_WIDTH;\r\n\r\n  //Dialogã®çµæãåãåã\r\n  public dialogRef: MatDialogRef<SHCtlPopupDialogComponent, any> = null;\r\n  // ååéä¿¡ç¨ãã©ã°\r\n  public initFetchFlg: boolean = false;\r\n  // bindColumnArrayãå©ç¨ãå¤ãè¨­å®ãããå ´åã«ãã§ã³ã¸ãæ­¢ãã\r\n  get noChangeFlgCtlName(): string {\r\n    return `${this.ctlName}_${ShCtlConst.NO_CHANGE.FLG_SUFFIX}`;\r\n  }\r\n  // inputã®åç§\r\n  get ownValueInputElm(): HTMLInputElement | null {\r\n    return (\r\n      <HTMLInputElement>(\r\n        document.querySelector(\r\n          `textarea[name=${this.ctlName}], input[name=${this.ctlName}]`\r\n        )\r\n      ) || null\r\n    );\r\n  }\r\n  get ownLabelInputElm(): HTMLInputElement | null {\r\n    return <HTMLInputElement>(\r\n      (document.querySelector(\r\n        `textarea[name=${this.popupLabelName}], input[name=${this.popupLabelName}]`\r\n      ) || null)\r\n    );\r\n  }\r\n\r\n  // bindColumnArrayãå©ç¨ãå¤ãè¨­å®ãããå ´åã«ãã§ã³ã¸ãæ­¢ãã\r\n  public noChangeFlg: NoChangeFlg = `OFF`;\r\n  // éä¿¡ä¸­ãã©ãã\r\n  public isBusy = false;\r\n  constructor(\r\n    protected SmplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlPopup\";\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public noChangeFlgChange(event) {\r\n    this.noChangeFlg = event.target.value;\r\n    setTimeout(() => {\r\n      this.noChangeFlg = `OFF`;\r\n    }, 1000);\r\n  }\r\n  /**\r\n   * å¥åã³ã³ãã­ã¼ã«ã®å¹ãæå®\r\n   */\r\n  public setInputWidth() {\r\n    return this.hiddenLabel ? { width: \"100%\" } : { width: \"33.3%\" };\r\n  }\r\n\r\n  /**\r\n   * ã©ãã«ã³ã³ãã­ã¼ã«ã®å¹ãæå®\r\n   */\r\n  public setLabelWidth() {\r\n    return this.hiddenInput ? { width: \"100%\" } : { width: \"66.6%\" };\r\n  }\r\n\r\n  /**\r\n   * ãã¼ã¿ãã¤ã³ããããå¤ãåè¨­å®ããéã«å¤ãæ¤è¨¼ã\r\n   * è¦ªã³ã³ãã¼ãã³ãã«æ¸¡ã\r\n   * @param changes ç¾å¨ã®å¤ã¨ç´åã®å¤ãåå¾åºæ¥ã\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value && !changes.value.currentValue) {\r\n      this.name = \"\";\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (this.noChangeFlg == \"OFF\") {\r\n      if (changes.value && changes.value.currentValue) {\r\n        if (changes.value.currentValue != changes.value.previousValue) {\r\n          this.fetchCodes(this.apiUrl);\r\n          return;\r\n        }\r\n      }\r\n      if (changes.value && changes.value.firstChange) {\r\n        this.initFetchFlg = true;\r\n      }\r\n\r\n      if (this.initFetchFlg) {\r\n        if (!this.value || !changes.value.currentValue) return;\r\n        this.fetchCodes(this.apiUrl);\r\n        this.initFetchFlg = false;\r\n      }\r\n      if (\r\n        changes.apiUrl &&\r\n        changes.apiUrl.previousValue != changes.apiUrl.currentValue &&\r\n        !this.isBindInputNull(this.bindColumnArray)\r\n      ) {\r\n        if (\r\n          this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)\r\n            .length == 0\r\n        ) {\r\n          if (\r\n            changes.value &&\r\n            changes.value.currentValue == changes.value.previousValue\r\n          )\r\n            return;\r\n          this.fetchCodes(changes.apiUrl.currentValue);\r\n        } else {\r\n          this.codes = Object(\r\n            this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)\r\n          ).data;\r\n          this.value = this.setName(this.value);\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setTimeout(() => {\r\n        this.noChangeFlg = `OFF`;\r\n      }, 1000);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n    // //ã¦ãã¼ã¯ãªæå­å\r\n    if (this.isDisabled) {\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length <= 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then((response) => {\r\n          this.codes = response.data;\r\n          this.codesHeader = Object.values(response.header);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *api éä¿¡ ãã¹ã¿ããåå¾\r\n   */\r\n  public async fetchCodes(url: string, value?: string) {\r\n    if (this.isBusy) return;\r\n    this.isBusy = true;\r\n    this.lockScreenService.lockScreen();\r\n    (document.activeElement as HTMLElement).blur();\r\n    return Promise.resolve(this.SmplPopupService.fetchAll(url)).catch(_ => {this.lockScreenService.unlock()}).then(\r\n      (response) => {\r\n        this.codes = response.data;\r\n        this.codesHeader = Object.values(response.header);\r\n        this.dataTitle = response.title;\r\n        const ok = this.checkValue(value || this.value);\r\n        let result = \"\";\r\n        if (ok) {\r\n          if (value || this.value) {\r\n            result = this.setName(value || this.value);\r\n          }\r\n          if (this.dataCache) {\r\n            this.SmplPopupService.setMasterData(url, response);\r\n          }\r\n        }\r\n        this.isBusy = false;\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(result);\r\n          this.lockScreenService.unlock();\r\n        });\r\n      }\r\n    )\r\n\r\n  }\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    // valueã®å¤ãä¸æå¯¾æ¯ããã¤ã¢ã­ã°ãéããéã«æ¯è¼ãã¾ã\r\n    const tmp = this.value;\r\n    if (\r\n      !this.popupWidth &&\r\n      this.codes.length != 0 &&\r\n      Object.values(this.codes[0]).length >= 4\r\n    ) {\r\n      this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n    }\r\n    this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n      height: ShCtlConst.DIALOG_HEIGHT,\r\n      width: this.extendWidth,\r\n      data: {\r\n        dataTitle: this.dataTitle,\r\n        codes: this.codes,\r\n        codesHeader: this.codesHeader,\r\n        hiddenColumns: this.hiddenColumns,\r\n      },\r\n    });\r\n    this.dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.setValueName(result);\r\n        //this.allocateToInputValue(result);\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record: result,\r\n        });\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record: result,\r\n        });\r\n        this.noChangeFlg = `ON`;\r\n        //changeã¤ãã³ãçµç±ã§emitããã¨ç¡æ¡ä»¶ã§afterChangeã¤ãã³ããå¼ã°ããã®ã§\r\n        //å¤ãæ¯è¼ãå¤æ´ããªããã°ãã®ã¿ã¤ãã³ã°ã§emitãã\r\n        const resultValues = Object.values(result);\r\n        if (resultValues && resultValues.includes(tmp)) {\r\n          this.valueChange.emit(this.value);\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          this.dispatchOwnValueInputChangeEvent();\r\n        }, 0);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   *@ èªèº«ã®valueã«ç´ã¥ãinputã®ãã§ã³ã¸ã¤ãã³ããçºç«\r\n   */\r\n  private dispatchOwnValueInputChangeEvent() {\r\n    if (this.ownValueInputElm) {\r\n      this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n    }\r\n  }\r\n  /**\r\n   *@ bindåã®inputãnullãã©ãã\r\n   */\r\n  public isBindInputNull(bindColumnArray: { [key: string]: string }[]) {\r\n    if (!bindColumnArray || bindColumnArray.length == 0) return true;\r\n    return bindColumnArray\r\n      .map((bindColumnData) => {\r\n        return document.querySelector(\r\n          `input[name=${Object.keys(bindColumnData)[0]}]`\r\n        ) as HTMLInputElement;\r\n      })\r\n      .map((bindInput) => {\r\n        if (!bindInput) return false;\r\n        return !!bindInput.value;\r\n      })\r\n      .includes(false);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterClick(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n  public clearAll() {\r\n    this.value = \"\";\r\n    this.name = \"\";\r\n    if (this.ownLabelInputElm) {\r\n      this.ownLabelInputElm.value = \"\";\r\n    }\r\n    this.valueChange.emit(\"\");\r\n  }\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    if (!event.target.value) {\r\n      this.clearAll();\r\n    }\r\n    let flg = false;\r\n    if (this.noChangeFlg == \"OFF\") {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.noChangeFlg = \"ON\";\r\n        this.fetchCodes(this.apiUrl, this.toText(event.target.value)).then(\r\n          (value) => {\r\n            this.valueChange.emit(value);\r\n            event.target.value = this.toText(event.target.value);\r\n            setTimeout(() => {\r\n              this.onAfterChange(event);\r\n            }, 0);\r\n          }\r\n        );\r\n      } else {\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n  /**\r\n   *æå¥åã®å¤ããã®æ¤ç´¢çµæãè¤æ°ãã£ãå ´åã¯ã¢ã©ã¼ããåºã\r\n   */\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter(\r\n        (element) =>\r\n          //this.hasMatchRecords(element, value)\r\n          Object.values(element)[this.bindColumnKey - 1] == value\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue();\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * ãã¹ã¿æå ±ããã³ã¼ããåå¾\r\n   */\r\n  public getCodes() {\r\n    this.openDialog();\r\n    if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0) {\r\n      this.SmplPopupService.fetchAll(this.apiUrl).then((response) => {\r\n        this.codes = response.data;\r\n        this.codesHeader = Object.values(response.header);\r\n        this.dataTitle = response.title;\r\n        if (this.dataCache)\r\n          this.SmplPopupService.setMasterData(this.apiUrl, response);\r\n        if (!this.dialogRef) return;\r\n        if (this.dialogRef.componentInstance) {\r\n          this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n          this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n          this.dialogRef.componentInstance.codes = this.codes;\r\n          this.dialogRef.componentInstance.dataTitle = this.dataTitle;\r\n          if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n          }\r\n          this.dialogRef.updateSize(this.extendWidth, ShCtlConst.DIALOG_HEIGHT);\r\n          let cols = [];\r\n          this.dialogRef.componentInstance\r\n            .getHashKeys()\r\n            .forEach((name, idx) => {\r\n              if (!this.hiddenColumns.find((_) => _ == idx + 1))\r\n                cols.push(name);\r\n            });\r\n          this.dialogRef.componentInstance.displayedColumns = cols;\r\n        }\r\n      });\r\n    } else {\r\n      this.codes = Object(\r\n        this.SmplPopupService.getMasterData(this.apiUrl)\r\n      ).data;\r\n      this.codesHeader = Object.values(\r\n        Object(this.SmplPopupService.getMasterData(this.apiUrl)).header\r\n      );\r\n      if (this.dialogRef.componentInstance) {\r\n        this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n        this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n        this.dialogRef.componentInstance.codes = this.codes;\r\n        this.dialogRef.componentInstance.dataTitle = this.dataTitle;\r\n        if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n          this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n        }\r\n        this.dialogRef.updateSize(this.extendWidth, ShCtlConst.DIALOG_HEIGHT);\r\n        let cols = [];\r\n        this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n          if (!this.hiddenColumns.find((_) => _ == idx + 1)) cols.push(name);\r\n        });\r\n        this.dialogRef.componentInstance.displayedColumns = cols;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªã³ã³ãã­ã¼ã«ã®input value ã«å¤ãæ¸¡ã\r\n   * @param matchedArray\r\n   */\r\n  public setValueName(matchedArray) {\r\n    if (Object.values(matchedArray)[this.bindColumnKey - 1]) {\r\n      const val = Object.values(matchedArray)[\r\n        this.bindColumnKey - 1\r\n      ].toString();\r\n      this.value = val;\r\n    } else {\r\n      this.value = \"\";\r\n    }\r\n    if (Object.values(matchedArray)[this.bindColumnValue - 1]) {\r\n      this.name = Object.values(matchedArray)[\r\n        this.bindColumnValue - 1\r\n      ].toString();\r\n    } else {\r\n      this.name = \"\";\r\n    }\r\n  }\r\n  /**\r\n   *è¦ªå­é¢ä¿ã«ãªã£ã¦ããinputãããå ´åã«æ¤ç´¢å¯¾è±¡ãè¦ªã¾ã§åºãã\r\n   */\r\n  private hasMatchRecords(element: any, val: any): boolean {\r\n    // æ¤ç´¢çµæä¸è¡åã®æ¯è¼ãã¹ãåã®å¤\r\n    let searchs = [];\r\n    // ç¾å¨ã®æ¯è¼ãã¹ãå¤\r\n    let values = [val];\r\n    searchs.push(Object.values(element)[this.bindColumnKey - 1]);\r\n    if (this.bindColumnArray && this.bindColumnArray.length != 0) {\r\n      this.bindColumnArray.forEach((data) => {\r\n        let bindIndex = (Object.values(data)[0] as number) - 1;\r\n        searchs.push(Object.values(element)[bindIndex]);\r\n        let targetInput = document.querySelector(\r\n          `input[name=${Object.keys(data)[0]}]`\r\n        ) as HTMLInputElement;\r\n        if (targetInput) {\r\n          if (targetInput.value) {\r\n            values.push(targetInput.value);\r\n          } else {\r\n            searchs = searchs.filter(\r\n              (val) => val != Object.values(element)[bindIndex]\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n    const result = searchs.map((val) => values.includes(val));\r\n    return !result.includes(false);\r\n  }\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    const record = this.codes\r\n      ? this.codes.find(\r\n          (element) => Object.values(element)[this.bindColumnKey - 1] == val\r\n        )\r\n      : null;\r\n    if (record) {\r\n      let kbnValue = Object.values(record)[this.bindColumnValue - 1];\r\n      this.name = kbnValue ? kbnValue.toString() : \"\";\r\n      this.bindCtlService.setBindValue({\r\n        bindColumnArray: this.bindColumnArray,\r\n        record,\r\n      });\r\n    } else {\r\n      val = \"\";\r\n      this.clearAll();\r\n    }\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * å¥åã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = \"\";\r\n    this.name = \"\";\r\n    if (this.ctlName) {\r\n      this.ownValueInputElm.value = \"\";\r\n      //ã¿ã¤ãã³ã°ãéãããªãã¨changeã¤ãã³ãåã®event.target.valueãåã®å¤ã«ãªã\r\n      setTimeout(() => {\r\n        this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        this.ownValueInputElm.dispatchEvent(new Event(\"focus\"));\r\n      }, 0);\r\n    }\r\n    if (this.popupLabelName) {\r\n      this.ownLabelInputElm.value = \"\";\r\n    }\r\n  }\r\n  /**\r\n   * ãµãã¯ã©ã¹ã§ãªã¼ãã¼ã©ã¤ããã¦ä½¿ãã®ã§æ¶ããªã\r\n   */\r\n  public toText(s: string) {\r\n    return s;\r\n  }\r\n  public extractBindValue(result: any) {\r\n    if (!result) return;\r\n    return Object.values(result)[this.bindColumnKey - 1];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShHttpClientService, ApiResponseBody } from 'sh-http-client';\r\nimport { ShCtlConst } from '../constShCtl';\r\n\r\n/**\r\n * ShCtlãApiéä¿¡ã¯ã©ã¹\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShCtlApiService {\r\n\r\n  constructor(\r\n    private apiComService: ShHttpClientService,\r\n  ) { }\r\n\r\n  /**\r\n  * APIè¿å´çµæã«å¿ãã¦å¦çåå²ãè¡ããApplicationDataã®ã¿ãè¿å´ãã\r\n  * @param apiResponse APIè¿å´çµæ\r\n  * @return APIè¿å´çµæã®ApplicationData\r\n  */\r\n  private getApplicationData<T>(apiResponseBody: ApiResponseBody<T>): T {\r\n    //ããªãã¼ã·ã§ã³å¦ç\r\n    //ã¢ã©ã¼ãå¦ç\r\n    //ã·ã¹ãã ã«è¿ãéã¯å¦çã«å¿è¦ãªãã¼ã¿ã ãã«ãã\r\n    return apiResponseBody.applicationData;\r\n\r\n  }\r\n\r\n  /**\r\n  * GET\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async get<T>(url: string): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.get<T>(url, false)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * POST\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async post<T>(url: string, data: any): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.post<T>(url, data)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * PUT\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async put<T>(url: string, data: any): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.put<T>(url, data)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * DELETE\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async delete<T>(url: string): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.delete<T>(url)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShCtlApiService } from './sh-ctl-api.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * åºåãã¹ã¿ã®æå ±ãåå¾\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmplPopupService {\r\n  private popupCdSubject = new Subject<string>();\r\n  public popupCdState = this.popupCdSubject.asObservable();\r\n  constructor(\r\n    private apiComService: ShCtlApiService,\r\n  ) { }\r\n\r\n  //æ±ç¨ãã¹ã¿\r\n  private masterCache: any[] = [];\r\n\r\n  /**\r\n   * æ±ç¨ãã¹ã¿åå¾\r\n   */\r\n  public async fetchAll(url: string): Promise<any> {\r\n    return this.apiComService.get<any[]>(url);\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããã¹ã¿ã®ã­ã£ãã·ã¥ãã¦ãããã¼ã¿ãåå¾\r\n   * @param key ãã¹ã¿ã®åå\r\n   */\r\n  public getMasterData(key: string): any[] {\r\n    let cache = this.masterCache.filter(item => {\r\n      return item.masterName == key\r\n    })\r\n    return cache.length > 0 ? cache[0].masterCache : [];\r\n  }\r\n\r\n  /**\r\n   * ãã¹ã¿ãã¼ã¿ãã­ã£ãã·ã¥ãã\r\n   * @param key ãã¹ã¿ã®åå\r\n   * @param masterData ãã¹ã¿ãã¼ã¿\r\n   */\r\n  public setMasterData(key: string, masterData: any[]) {\r\n    if (this.masterCache.length > 0) {\r\n      for (let item of this.masterCache) {\r\n        if (item.masterName == key) {\r\n          item.masterCache = masterData\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.masterCache = this.masterCache.concat([{ masterName: key, masterCache: masterData }]);\r\n  }\r\n}\r\n","export const NoChangeFlg = {\r\n    ON: `ON`,\r\n    OFF: `OFF`\r\n} as const;\r\n\r\nexport type NoChangeFlg = typeof NoChangeFlg[keyof typeof NoChangeFlg];","import { Injectable } from \"@angular/core\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { NoChangeFlg } from '../types/NoChangeFlg'\r\n\r\ntype Param = {\r\n  bindColumnArray: { [key: string]: string }[];\r\n  record: any;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: `root`,\r\n})\r\nexport class BindCtlService {\r\n\r\n  private readonly NO_CHANGE_FLG_SUFFIX = ShCtlConst.NO_CHANGE.FLG_SUFFIX;\r\n\r\n  constructor() {}\r\n\r\n  public setNoChangeFlg(param: Param) {\r\n    if (this.isParamEmpty(param)) return;\r\n    const info = this.generateBindInputInfo(param);\r\n    info.forEach((data) => {\r\n      const targetInput = document.querySelector(\r\n        `input[name=${data.ctlName}_${this.NO_CHANGE_FLG_SUFFIX}],textarea[name=${data.ctlName}_${this.NO_CHANGE_FLG_SUFFIX}]`\r\n      ) as HTMLInputElement;\r\n      if(!targetInput) return;\r\n      targetInput.value = NoChangeFlg.ON;\r\n      targetInput.dispatchEvent(new Event(`change`));\r\n    });\r\n  }\r\n\r\n  public setBindValue(param: Param) {\r\n    if (this.isParamEmpty(param)) return;\r\n    const info = this.generateBindInputInfo(param);\r\n    info.forEach((data) => {\r\n        const targetInput = document.querySelector(\r\n          `input[name=${data.ctlName}],textarea[name=${data.ctlName}]`\r\n        ) as HTMLInputElement;\r\n        if(!targetInput) return;\r\n        targetInput.value = data.value;\r\n        targetInput.dispatchEvent(new Event(`change`));\r\n      });\r\n  }\r\n\r\n  private generateBindInputInfo(\r\n    param: Param\r\n  ): { ctlName: string; value: string }[] {\r\n    return param.bindColumnArray.map((data) => {\r\n      const column = Number(Object.values(data)[0]);\r\n      return {\r\n        ctlName: Object.keys(data)[0],\r\n        value: isNaN(Number(column)) ? `` : Object.values(param.record)[column - 1] as string,\r\n      };\r\n    });\r\n  }\r\n\r\n  private isParamEmpty(param: Param) {\r\n    if (!param.bindColumnArray || param.bindColumnArray.length == 0)\r\n      return true;\r\n    if (!param.record) return true;\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LockScreenService {\r\n  private isConnecting: boolean = false;\r\n  private isConnectingSubject = new Subject<boolean>();\r\n  public isConnectingState = this.isConnectingSubject.asObservable();\r\n  public count :number = 0;\r\n\r\n  /**\r\n  * ã³ã³ã¹ãã©ã¯ã¿\r\n  */\r\n  constructor() { }\r\n\r\n  /**\r\n  * ç»é¢ãã­ãã¯ãã(ã¦ã¼ã¶ã¼ãæä½åºæ¥ãªãããã«ãã)\r\n  */\r\n  public lockScreen() {\r\n      this.count += 1;\r\n      if (this.count === 1) {\r\n        this.isConnecting = true;\r\n        this.isConnectingSubject.next(this.isConnecting);\r\n      }\r\n  }\r\n\r\n  /**\r\n  * ç»é¢ã®ã­ãã¯ãè§£é¤ãã(ã¦ã¼ã¶ã¼ãæä½åºæ¥ãç¶æã«ãã)\r\n  */\r\n  public unlock() {\r\n    this.count -= 1;\r\n    if (this.count === 0) {\r\n        this.isConnecting = false;\r\n        this.isConnectingSubject.next(this.isConnecting);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { MatDialog } from '@angular/material'\r\nimport { SHFormPopup } from '../../utilities/ShFormPopup';\r\nimport { SmplPopupService } from '../../services/smpl-popup.service';\r\nimport { BindCtlService } from '../../services/bind-ctl.service';\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: 'sh-ctl-jig-code',\r\n  templateUrl: './sh-ctl-jig-code.component.html',\r\n  styleUrls: ['./sh-ctl-jig-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlJigCodeComponent extends SHFormPopup implements OnChanges, OnInit {\r\n\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlJigCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * 3æ¡å¥åæã«æ®ããè£å®ãã\r\n   * @param jigCode äºæ¥­æã³ã¼ã\r\n   */\r\n  public toText(jigCode: string) {\r\n    // ãã©ã³ã¯ãªã\r\n    if (SHCtlCommon.isBlank(jigCode)) return \"\";\r\n    // 6æ¡ã¯å¦çããªã\r\n    if (jigCode.trim().length == 6) return jigCode;\r\n\r\n    let result = null;\r\n\r\n    if (jigCode.trim().length == 3) {\r\n      let firstString = parseInt((Number(jigCode.substr(0, 1)) * 9).toString(), 10);    // ä¸æå­ç®\r\n      let secondString = parseInt((Number(jigCode.substr(1, 1)) * 8).toString(), 10);    // å¼æå­ç®\r\n      let thirdString = parseInt((Number(jigCode.substr(2, 1)) * 7).toString(), 10);   // åæå­ç®\r\n      const strNo = firstString + secondString + thirdString;\r\n      const lastStrting = strNo.toString().substr(strNo.toString().length - 1, 1);  // å³ããä¸æå­ç®åå¾\r\n      // one + two + three + '00' + lastNo\r\n      result = `${jigCode}00${lastStrting}`;\r\n    }\r\n    else {\r\n      result = \"\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Inject, Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\n\r\ninterface Data {\r\n    dataTitle: string\r\n    value: any,\r\n    uniqueColumns: any\r\n    hiddenColumns: any,\r\n}\r\n\r\n@Component({\r\n    selector: 'sh-ctl-popup-multi-dialog',\r\n    templateUrl: 'sh-ctl-popup-multi-dialog.component.html',\r\n    styleUrls: ['sh-ctl-popup-multi-dialog.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlPopupDialogMultiComponent implements OnInit, AfterViewChecked {\r\n    public displayedColumns: string[] = [];\r\n    public name: string = \"\";\r\n    public uniqueStr = \"\";\r\n    public dataTitle: string;\r\n    public codes: any;\r\n    public unchangeableCodes: any;\r\n    public codesHeader: any;\r\n    public selection = new SelectionModel<any>(true, []);\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<any>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data,\r\n    ) { }\r\n\r\n    /**\r\n     * å¤ããã¤ã³ããããæã«å¼ã°ãã\r\n     */\r\n    ngOnInit() {\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n    * å¤ã®åæå\r\n    */\r\n    private init() {\r\n        this.dataTitle = this.data.dataTitle;\r\n        if (this.data.value)\r\n            this.data.value.forEach(row => this.selection.select(row));\r\n        let cols = ['select'];\r\n        this.getHashKeys().forEach((name, idx) => {\r\n            if (!this.data.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n        });\r\n        this.displayedColumns = cols;\r\n        this.uniqueStr = SHCtlCommon.getUniqueStr();\r\n    }\r\n\r\n    /**\r\n    * ãã¼ãã«ã®ãããã¼ãç·¨é\r\n    */\r\n    ngAfterViewChecked() {\r\n        let headerElement = document.getElementsByTagName('th')\r\n        let countBlank = 0;\r\n        if (!this.codesHeader) return;\r\n        for (let i = 0; i < headerElement.length; i++) {\r\n            if (this.codesHeader[i] != \"\") {\r\n                for (let e = 1; e <= countBlank; e++) {\r\n                    headerElement[i - e].style.display = 'none';\r\n                }\r\n                countBlank = 0;\r\n            } else if (this.codesHeader[i] === \"\") {\r\n                countBlank += 1;\r\n                headerElement[i - countBlank].colSpan = countBlank + 1;\r\n                headerElement[i - countBlank].style.textAlign = 'center';\r\n                if (i === headerElement.length - 1) {\r\n                    for (let j = 0; j < countBlank; j++) {\r\n                        headerElement[i - j].style.display = 'none';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãã§ãã¯ããã¯ã¹é¸æ\r\n     */\r\n    public itemSelect(row: any) {\r\n        if (!this.isItemSelected(row))\r\n            this.selection.select(row);\r\n    }\r\n\r\n    /**\r\n     * è¡é¸æã«ãããã§ãã¯ããã¯ã¹å¤ã®æä½\r\n     */\r\n    public itemToggle(row: any) {\r\n        if (!this.isItemSelected(row))\r\n            this.selection.select(row);\r\n        else {\r\n            let keys = Object.keys(row);  \r\n            let item = this.selection.selected.find(_ => { \r\n                let isSame = true;\r\n                keys.forEach((key, idx) => {\r\n                    if (this.data.uniqueColumns.find(__ => __ == (idx + 1))) {\r\n                        if (_[key] != row[key]) {\r\n                            isSame = false;ãreturn;\r\n                        }\r\n                    }\r\n                });\r\n                return isSame;\r\n            });\r\n            this.selection.deselect(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * é ç®ãé¸æãã¦ãããã©ãã\r\n     */\r\n    public isItemSelected(row:any): boolean {\r\n        if (!this.selection.selected) return false;\r\n        let keys = Object.keys(row);  \r\n        let item = this.selection.selected.find(_ => { \r\n            let isSame = true;\r\n            keys.forEach((key, idx) => {\r\n                if (this.data.uniqueColumns.find(__ => __ == (idx + 1))) {\r\n                    if (_[key] != row[key]) {\r\n                        isSame = false; return;\r\n                    }\r\n                }\r\n            });\r\n            return isSame;\r\n        });\r\n        return item ? true : false;\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã\r\n     */\r\n    public closeDialog() {\r\n        //ãã¤ã¢ã­ã°ãéããæã«æ½å¥å¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããããé¸æããããã¼ã¿ãè¦ªã«è¿ã\r\n     * @param item \r\n     */\r\n    public returnDialog() {\r\n        //ãã¤ã¢ã­ã°ãéããæã«é¸æå¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close(this.selection.selected);\r\n    }\r\n\r\n    /**\r\n     * å¨ã¦ã®é ç®ãé¸æãã¦ãããã©ãã\r\n     */\r\n    public isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.unchangeableCodes && this.unchangeableCodes.length ? this.unchangeableCodes.length : 0;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    /**\r\n     * å¨é¸æã»å¨è§£é¤å¦ç\r\n     */\r\n    public masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.unchangeableCodes.forEach(row => this.itemSelect(row));\r\n    }\r\n\r\n    /**\r\n     * ãã§ãã¯ããã¯ã¹ã©ãã«\r\n     */\r\n    public checkboxLabel(row?: any): string {\r\n        if (!row) {\r\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n\r\n    /**\r\n     * ãã¼ã¿ã®keyãè¿ã\r\n     */\r\n    public getHashKeys() {\r\n        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {\r\n            return []; \r\n        } else {\r\n            return Object.keys(this.unchangeableCodes[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããåã§ã®ææ§æ¤ç´¢\r\n     * ã¹ãã¼ã¹åºåãã§1ã­ã¼ã¯ã¼ãã¨ãã\r\n     * @param event inputã¤ãã³ã\r\n     */\r\n    public filter(event) {\r\n        const filterString: string = event.target.value;\r\n        let fileterStrArray = filterString.replace(/ã/g, \" \").split(\" \");\r\n        fileterStrArray = fileterStrArray.filter((value) => {\r\n            return value;\r\n        });\r\n        let resultArray: any[];\r\n        resultArray = this.unchangeableCodes.concat();\r\n        for (let i = 0; i < fileterStrArray.length; i++) {\r\n            let obj = this;\r\n            resultArray = resultArray.filter(function (value: any) {\r\n                let values = Object.values(value)\r\n                for (let j = 0; j < values.length; j++) {\r\n                    if (obj.data.hiddenColumns.find(_ => _ == (j + 1))) continue;\r\n                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        this.codes = resultArray;\r\n    }\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from \"../../utilities/ShFormPopup\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { SHCtlPopupDialogComponent } from \"../sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { ShCtlConst } from \"../../constShCtl\";\r\nimport { BindCtlService } from \"../../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-jyu-code\",\r\n  templateUrl: \"./sh-ctl-jyu-code.component.html\",\r\n  styleUrls: [\"./sh-ctl-jyu-code.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlJyuCodeComponent\r\n  extends SHFormPopup\r\n  implements OnInit, OnChanges {\r\n  @Input() enabledHalfKanaInput: boolean = true;\r\n  public obj = \".SHCtlJyuCode\";\r\n\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlJyuCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n   /**\r\n   * ã³ã³ãã¼ãã³ãã«å¤ããã¤ã³ããããå¾ã§å¼ã³åºããã\r\n   * ãã­ããã£ã®åæå\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    event.target.value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n    if (!this.enabledHalfKanaInput) {\r\n      SHCtlCommon.replaceFullWidth(event);\r\n    }\r\n    event.target.value = event.target.value.replace(\r\n      /[\"ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ï¼¾ï¿¥ï¼ ãï¼ï¼ãããã»\"]/g,\r\n      \"\"\r\n    );\r\n    if (\r\n      event.target.value.length >= 6 &&\r\n      event.inputType != \"deleteContentBackward\"\r\n    ) {\r\n      if (\r\n        isNaN(parseInt(event.target.value)) &&\r\n        event.target.value.length != 7\r\n      ) {\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    let flg = false;\r\n    if (this.noChangeFlg == `OFF`) {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.fetchCodes(this.apiUrl).then((value) => {\r\n          this.valueChange.emit(value);\r\n          event.target.value = this.toText(event.target.value);\r\n          setTimeout(() => {\r\n            this.onAfterChange(event);\r\n          }, 0);\r\n        });\r\n      } else {\r\n        this.codes = Object(\r\n          this.SmplPopupService.getMasterData(this.apiUrl)\r\n        ).data;\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        // this.noChangeFlg == `OFF`;\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        event.target.value = this.toText(event.target.value);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    let extendWidth;\r\n    if (this.codes) {\r\n      if (\r\n        !this.popupWidth &&\r\n        this.codes.length != 0 &&\r\n        Object.values(this.codes[0]).length >= 4\r\n      ) {\r\n        this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n      }\r\n\r\n      let rawCodes;\r\n      let rawCodesArray = [];\r\n      for (let i = 0; this.codes.length > i; i++) {\r\n        rawCodes = this.codes[i].contactCode;\r\n        rawCodesArray.push(rawCodes);\r\n        let code = Object.values(this.codes[i])\r\n          [this.bindColumnKey - 1].toString()\r\n          .substr(2);\r\n        this.codes[i].contactCode = code;\r\n      }\r\n      this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n        height: ShCtlConst.DIALOG_HEIGHT,\r\n        width: extendWidth,\r\n        data: {\r\n          dataTitle: this.dataTitle,\r\n          codes: this.codes,\r\n          codesHeader: this.codesHeader,\r\n          hiddenColumns: this.hiddenColumns,\r\n        },\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((result) => {\r\n        if (result) {\r\n          this.setValueName(result);\r\n          this.bindCtlService.setNoChangeFlg({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.bindCtlService.setBindValue({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.noChangeFlg = `ON`;\r\n          this.valueChange.emit(this.extractBindValue(result));\r\n          this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    let record: any;\r\n    val = this.toText(val);\r\n    if (val.length == 6) {\r\n      record = this.codes.find((element) =>\r\n        this.toText(Object.values(element)[this.bindColumnKey - 1]).includes(\r\n          val\r\n        )\r\n      );\r\n    }\r\n    if (record != null) {\r\n      const name = Object.values(record)[this.bindColumnValue - 1] as string;\r\n      if (name && val.length == 6) {\r\n        this.setValueName(record);\r\n        this.noChangeFlg = \"ON\";\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        val = Object.values(record)[this.bindColumnKey - 1];\r\n        const inputElement: HTMLInputElement = this.ownValueInputElm;\r\n        if (inputElement) {\r\n          setTimeout(() => {\r\n            inputElement.value = this.toText(val);\r\n          }, 0);\r\n        }\r\n      }\r\n    } else {\r\n      val = ``;\r\n    }\r\n\r\n    return val;\r\n  }\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    if(value.length < 6) {\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter((element) =>\r\n        //this.hasMatchRecords(element, value)\r\n        (Object.values(element)[this.bindColumnKey - 1] as string).includes(\r\n          value\r\n        )\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue()\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    \r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if (!event.isComposing) {\r\n      event.target.value = this.toHankaku(\r\n        this.hiraganaToKatagana(event.target.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åé ­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    if (inputTargetValue.length === 8) {\r\n      return inputTargetValue.substr(2);\r\n    }\r\n    return inputTargetValue;\r\n  }\r\n\r\n  /**\r\n   * ã²ãããªãã«ã¿ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public hiraganaToKatagana(inputValue) {\r\n    return inputValue.replace(/[\\u3041-\\u3096]/g, function (match) {\r\n      var chr = match.charCodeAt(0) + 0x60;\r\n      return String.fromCharCode(chr);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¥åæå­ãåè§ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public toHankaku(inputValue) {\r\n    let half = \"0123456789\";\r\n    half += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    half += \"abcdefghijklmnopqrstuvwxyz\";\r\n    half += \"ï½¡ï½¤ï½¢\\\\ï½£;:ï½¥-+|_@., \";\r\n    half += \"ï½±ï½²ï½³ï½´ï½µï½¶ï½·ï½¸ï½¹ï½ºï½»ï½¼ï½½ï½¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½¦ï¾ï½§ï½¨ï½©ï½ªï½«ï½¯ï½¬ï½­ï½®ï½°\";\r\n    let halfArr = new Array(\r\n      \"ï½³ï¾\",\r\n      \"ï½¶ï¾\",\r\n      \"ï½·ï¾\",\r\n      \"ï½¸ï¾\",\r\n      \"ï½¹ï¾\",\r\n      \"ï½ºï¾\",\r\n      \"ï½»ï¾\",\r\n      \"ï½¼ï¾\",\r\n      \"ï½½ï¾\",\r\n      \"ï½¾ï¾\",\r\n      \"ï½¿ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\"\r\n    );\r\n\r\n    let full = \"ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼\";\r\n    full += \"ï¼¡ï¼¢ï¼£ï¼¤ï¼¥ï¼¦ï¼§ï¼¨ï¼©ï¼ªï¼«ï¼¬ï¼­ï¼®ï¼¯ï¼°ï¼±ï¼²ï¼³ï¼´ï¼µï¼¶ï¼·ï¼¸ï¼¹ï¼º\";\r\n    full += \"ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½\";\r\n    full += \"ãããï¿¥ãï¼ï¼ã»ï¼ï¼ï½ï¼¿ï¼ ï¼ï¼ã\";\r\n    full +=\r\n      \"ã¢ã¤ã¦ã¨ãªã«ã­ã¯ã±ã³ãµã·ã¹ã»ã½ã¿ããããããããããããããããã ã¡ã¢ã¤ã¦ã¨ã©ãªã«ã¬ã­ã¯ã²ã³ã¡ã£ã¥ã§ã©ãã£ã¥ã§ã¼\";\r\n    let fullArr = new Array(\r\n      \"ã´\",\r\n      \"ã¬\",\r\n      \"ã®\",\r\n      \"ã°\",\r\n      \"ã²\",\r\n      \"ã´\",\r\n      \"ã¶\",\r\n      \"ã¸\",\r\n      \"ãº\",\r\n      \"ã¼\",\r\n      \"ã¾\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\"\r\n    );\r\n\r\n    let str = \"\";\r\n    //åè§ã«ãç¨\r\n    for (let i = 0; i < halfArr.length; i++) {\r\n      let reg = new RegExp(fullArr[i], \"g\");\r\n      inputValue = inputValue.replace(reg, halfArr[i]);\r\n    }\r\n    for (let i = 0; i < inputValue.length; i++) {\r\n      let oneStr = inputValue.charAt(i);\r\n      let num = full.indexOf(oneStr, 0);\r\n      oneStr = num >= 0 ? half.charAt(num) : oneStr;\r\n      str += oneStr;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-katakana',\r\n  templateUrl: './sh-ctl-katakana.component.html',\r\n  styleUrls: ['./sh-ctl-katakana.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlKatakanaComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlKatakana\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n    if ( !event.isComposing ) {\r\n      if (this.maxByteLength > 0)\r\n        if (event.inputType !== 'insertCompositionText') {\r\n          this.onKeyDown(event);\r\n          SHCtlCommon.sliceLength(event, this.maxByteLength);\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onPaste\r\n   * @param event paste\r\n   */\r\n  public onPaste(event) {\r\n    let obj = this;\r\n    setTimeout(function(e){\r\n      SHCtlCommon.replaceHalfDoubleQuote(event);\r\n      obj.replaceFullWIdth(event);\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event chage\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.replaceFullWIdth(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    this.replaceFullWIdth(event)\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  public onKeyUp(event) {\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalfDoubleQuote(event);\r\n      this.replaceFullWIdth(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyDown\r\n   */\r\n  public onKeyDown(event) {\r\n    super.onKeyDown(event);\r\n  }\r\n\r\n /**\r\n  * é¤å»å¤æ\r\n  * @param event\r\n  */\r\n  public replaceFullWIdth(event) {\r\n    event.target.value = event.target.value.replace(/[ã-ãã¡-ã¶\\u30e0-\\u9fcfï½-ï½ï¼¡-ï¼ºï¼-ï¼ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½ï¿¥ï¼¾ï¼âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ ãï¼ï¼ãããã»ï¿¥ã¼ã]/g, \"\");\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, Input, SimpleChanges, AfterViewChecked } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl';\r\nimport { ShCtlConst } from \"../../constShCtl\";\r\n\r\n@Component({\r\n  selector: 'sh-ctl-number',\r\n  templateUrl: './sh-ctl-number.component.html',\r\n  styleUrls: ['./sh-ctl-number.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlNumberComponent extends SHFormControl<string> implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() public min: number = 0;\r\n  @Input() public max: number = 99999999999;\r\n  @Input() public decimaldigit: number = 0;\r\n  @Input() public rounding: string = \"round\";\r\n  public stringValue: any;\r\n  public firstFlag: boolean = true;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlNumber\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * ngOnChangesã¤ãã³ã\r\n   * å¤å¤æ´æã«ãã©ã¼ããããæ´å½¢\r\n   * @param event input\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        if (changes.value.currentValue === '' || changes.value.currentValue === undefined || changes.value.currentValue === String(/[^\\x01-\\x7E\\xA1-\\xDF]+$/g)) {\r\n          this.value = '';\r\n          return;\r\n        }\r\n        if (parseFloat(changes.value.currentValue) < this.min) {\r\n          this.value = String(this.min);\r\n        }\r\n        if (parseFloat(changes.value.currentValue) > this.max) {\r\n          this.value = String(this.max);\r\n        }\r\n        this.stringValue = this.toText(changes.value.currentValue);\r\n        if (this.rounding === \"round\") {\r\n          this.value = changes.value.currentValue;\r\n        }\r\n        if (String(changes.value.currentValue).indexOf(',') === -1) {\r\n          this.value = this.setMinMax(this.value);\r\n          this.value = this.toText(this.value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ngAfterViewCheckedã¤ãã³ã\r\n   * è¡¨ç¤ºç»é¢ã¨ä¿®æ­£ç»é¢ã§ã«ã³ãç·¨é\r\n   */\r\n  ngAfterViewChecked() {\r\n    if(!this.firstFlag) return;\r\n\r\n    //this.valueãå­å¨ããã¨ãã«ãã«ã³ãç·¨éãããªããã°ãªããªãã\r\n    let matInputElement = document.activeElement.classList.contains('mat-input-element');\r\n    if (this.firstFlag && this.value && !matInputElement) {\r\n      this.value = this.toText(this.value);\r\n    }\r\n\r\n    //this.valueãå­å¨ããã¨ãã«ãfirstFlagã«falseãä»£å¥ããªãã¨ãã«ã³ãç·¨éããããªããªã\r\n    if(this.value) {\r\n      this.firstFlag = false;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSign(event, [\",\", \"\\.\", \"\\-\"]);\r\n    //2æå­ç®ä»¥éã®ã-ãã®å¥åãåãä»ããªã\r\n    if (event.target.value.length > 1)\r\n      event.target.value = event.target.value.slice(0, 1) + event.target.value.slice(1).replace(/[\\-]/g, \"\");\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    this.checkNumbersSigns(event);\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceFUllSpace(event);\r\n      SHCtlCommon.replaceSign(event, [\",\", \"\\.\", \"\\-\"]);\r\n      SHCtlCommon.replaceFullWidth(event);\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n      this.checkNumbersSigns(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãããããå¤ãè¨å·ã«ç½®ãæãã\r\n   * @param event input\r\n   */\r\n  public checkNumbersSigns(event: any) {\r\n    event.target.value = event.target.value.replace(/^[\\.|,]/g, \"\");\r\n    event.target.value = event.target.value.replace(/[\\.]{2,}/g, \".\");\r\n    event.target.value = event.target.value.replace(/[\\,]{2,}/g, \",\");\r\n    event.target.value = event.target.value.replace(/[\\-]{1,}/g, \"-\");\r\n    if ((/\\d.*\\.\\d.*/).test(event.target.value) && event.data === \".\") {\r\n      event.target.value = event.target.value.slice(0, event.target.value.length - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event keydown\r\n   */\r\n  onKeyDown(event) {\r\n    if(event.keyCode == ShCtlConst.ORDINAL.KEYS.KEY_TAB) {\r\n      setTimeout(() => {\r\n        event.target.value = this.toText(event.target.value);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n\r\n    //onChangeçºç«æã«æ°å¤ã§ãªããã°ã¯ãªã¢ãã\r\n    if (isNaN(Number(event.target.value)) === true) {\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n\r\n    //min maxã®å¤ãåæ ããã\r\n    event.target.value = this.setMinMax(event.target.value);\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(Number(this.removeComma(event.target.value)));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event: any) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.removeComma(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event: any) {\r\n    //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n    this.onBeforeBlur(event);\r\n    \r\n    //ã«ã³ãåºåã\r\n    setTimeout(() => {\r\n      event.target.value = this.toText(event.target.value);\r\n    }, 0);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ã«ã³ãä»ãã®å¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue: string): string {\r\n    inputTargetValue = this.removeComma(inputTargetValue)\r\n    if (!inputTargetValue) return null;\r\n    if (isNaN(Number(inputTargetValue))) return null;\r\n    if(this.rounding === \"round\") {\r\n      //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n      let ret =  parseFloat(parseFloat(inputTargetValue).toFixed(this.decimaldigit)).toString();\r\n      return parseFloat(ret).toLocaleString(undefined, {\r\n        minimumFractionDigits: this.decimaldigit,\r\n        maximumFractionDigits: this.decimaldigit\r\n      });\r\n    } else if (this.rounding === \"floor\") {\r\n      //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n      const FLOOR = (value, decimalDigit) => this.decimalAdjust(this.rounding, value, decimalDigit);\r\n      let ret =  FLOOR(parseFloat(inputTargetValue), -this.decimaldigit).toString();\r\n      return parseFloat(ret).toLocaleString(undefined, {\r\n        minimumFractionDigits: this.decimaldigit,\r\n        maximumFractionDigits: this.decimaldigit\r\n      });\r\n    } else if (this.rounding === \"ceil\") {\r\n      //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n      const CEIL = (value, decimalDigit) => this.decimalAdjust(this.rounding, value, decimalDigit);\r\n      let ret =  CEIL(parseFloat(inputTargetValue), -this.decimaldigit).toString();\r\n      return parseFloat(ret).toLocaleString(undefined, {\r\n        minimumFractionDigits: this.decimaldigit,\r\n        maximumFractionDigits: this.decimaldigit\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * min maxãåæ ããå¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public setMinMax(inputTargetValue: string) {\r\n    if (!inputTargetValue) return \"\";\r\n    if (isNaN(Number(inputTargetValue))) return \"\";\r\n    if (parseFloat(inputTargetValue) < this.min) {\r\n      inputTargetValue = this.min.toString();\r\n    }\r\n    if (parseFloat(inputTargetValue) > this.max) {\r\n      inputTargetValue = this.max.toString();\r\n    }\r\n    if(this.rounding === \"round\") {\r\n      let w = Math.pow(10 , this.decimaldigit);\r\n      inputTargetValue = (Math.round(+inputTargetValue * w + 1e-10)/w).toString();\r\n      return inputTargetValue;\r\n    } else if (this.rounding === \"floor\" || this.rounding === \"ceil\") {\r\n      return inputTargetValue;\r\n    } \r\n  }\r\n\r\n  /**\r\n   * roundingãfloorãceilã®æã«åãæ¨ã¦åãä¸ãå¦çãè¡ã\r\n   * @param type floor or ceil \r\n   * @param value value\r\n   * @param decimalDigit decimalDigit\r\n   */\r\n  public decimalAdjust(type, value, decimalDigit) {\r\n    if (typeof decimalDigit === 'undefined' || +decimalDigit === 0) {\r\n      return Math[type](value);\r\n    }\r\n    value = +value;\r\n    decimalDigit = +decimalDigit;\r\n    if (isNaN(value) || !(typeof decimalDigit === 'number' && decimalDigit % 1 === 0)) {\r\n      return NaN;\r\n    }\r\n    value = value.toString().split('e');\r\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - decimalDigit) : -decimalDigit)));\r\n    value = value.toString().split('e');\r\n    value = +(value[0] + 'e' + (value[1] ? (+value[1] + decimalDigit) : decimalDigit));\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * ã«ã³ããå¤ããå¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public removeComma(inputTargetValue: string) {\r\n    inputTargetValue = new String(inputTargetValue).replace(/,/g, \"\");\r\n    return inputTargetValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, AfterContentChecked, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-sesyu-code',\r\n  templateUrl: './sh-ctl-sesyu-code.component.html',\r\n  styleUrls: ['./sh-ctl-sesyu-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlSesyuCodeComponent extends SHFormControl<string> implements OnInit, AfterContentChecked, OnChanges {\r\n  public obj = \".SHCtlSesyuCode\";\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlSesyuCode\";\r\n    this.maxlength = 11;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.stringValue = this.toText(this.value);\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes.value) return\r\n    if (changes.value.currentValue) {\r\n      this.value = this.toText(changes.value.currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n\r\n    event.target.value = event.target.value.slice(0, this.maxlength);\r\n\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * åé ­é¶å\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    let result = null;\r\n\r\n    if (inputTargetValue.length == 0) {\r\n      result = \"\";\r\n    }\r\n    else if (inputTargetValue.trim().length <= 9) {\r\n      result = ((\"00000000\" + inputTargetValue).slice(-9)) + \"-\" + \"00\";\r\n    }\r\n    else if (inputTargetValue.trim().length <= 11) {\r\n      result = ((\"00000000\" + inputTargetValue.substr(0, 9)).slice(-9)) + \"-\" + ((\"00\" + inputTargetValue.substr(9)).slice(-2));\r\n    }\r\n    else {\r\n      result = inputTargetValue;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ãã¤ãã³é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(/-/g, \"\");\r\n  }\r\n\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Input,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from \"../../utilities/ShFormPopup\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { SHCtlPopupDialogComponent } from \"../sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { ShCtlConst } from \"../../constShCtl\";\r\nimport { BindCtlService } from \"../../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\nimport { distinct, takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-tan-code\",\r\n  templateUrl: \"./sh-ctl-tan-code.component.html\",\r\n  styleUrls: [\"./sh-ctl-tan-code.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlTanCodeComponent\r\n  extends SHFormPopup\r\n  implements OnInit, OnChanges {\r\n  public obj = \".SHCtlTanCode\";\r\n  @Input() enabledHalfKanaInput: boolean = true;\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService,\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlTanCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãã«å¤ããã¤ã³ããããå¾ã§å¼ã³åºããã\r\n   * ãã­ããã£ã®åæå\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    event.target.value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n    if (!this.enabledHalfKanaInput) {\r\n      SHCtlCommon.replaceFullWidth(event);\r\n    }\r\n    event.target.value = event.target.value.replace(\r\n      /[\"ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ï¼¾ï¿¥ï¼ ãï¼ï¼ãããã»\"]/g,\r\n      \"\"\r\n    );\r\n    if (\r\n      event.target.value.length >= 6 &&\r\n      event.inputType != \"deleteContentBackward\"\r\n    ) {\r\n      if (\r\n        isNaN(parseInt(event.target.value)) &&\r\n        event.target.value.length != 7\r\n      ) {\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    let flg = false;\r\n    if (this.noChangeFlg == `OFF`) {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.fetchCodes(this.apiUrl).then((value) => {\r\n          this.valueChange.emit(value);\r\n          event.target.value = this.toText(event.target.value);\r\n          setTimeout(() => {\r\n            this.onAfterChange(event);\r\n          }, 0);\r\n        });\r\n      } else {\r\n        this.codes = Object(\r\n          this.SmplPopupService.getMasterData(this.apiUrl)\r\n        ).data;\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        // this.noChangeFlg == `OFF`;\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        event.target.value = this.toText(event.target.value);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    let extendWidth;\r\n    if (this.codes) {\r\n      if (\r\n        !this.popupWidth &&\r\n        this.codes.length != 0 &&\r\n        Object.values(this.codes[0]).length >= 4\r\n      ) {\r\n        this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n      }\r\n\r\n      let rawCodes;\r\n      let rawCodesArray = [];\r\n      for (let i = 0; this.codes.length > i; i++) {\r\n        rawCodes = this.codes[i].contactCode;\r\n        rawCodesArray.push(rawCodes);\r\n        let code = Object.values(this.codes[i])\r\n          [this.bindColumnKey - 1].toString()\r\n          .substr(2);\r\n        this.codes[i].contactCode = code;\r\n      }\r\n      this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n        height: ShCtlConst.DIALOG_HEIGHT,\r\n        width: extendWidth,\r\n        data: {\r\n          dataTitle: this.dataTitle,\r\n          codes: this.codes,\r\n          codesHeader: this.codesHeader,\r\n          hiddenColumns: this.hiddenColumns,\r\n        },\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((result) => {\r\n        if (result) {\r\n          this.setValueName(result);\r\n          this.bindCtlService.setNoChangeFlg({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.bindCtlService.setBindValue({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.noChangeFlg = `ON`;\r\n          this.valueChange.emit(this.extractBindValue(result));\r\n          this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    let record: any;\r\n    val = this.toText(val);\r\n    if (val.length == 6) {\r\n      record = this.codes.find((element) =>\r\n        this.toText(Object.values(element)[this.bindColumnKey - 1]).includes(\r\n          val\r\n        )\r\n      );\r\n    }\r\n    if (record != null) {\r\n      const name = Object.values(record)[this.bindColumnValue - 1] as string;\r\n      if (name && val.length == 6) {\r\n        this.setValueName(record);\r\n        this.noChangeFlg = \"ON\";\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        val = Object.values(record)[this.bindColumnKey - 1];\r\n        const inputElement: HTMLInputElement = this.ownValueInputElm;\r\n        if (inputElement) {\r\n          setTimeout(() => {\r\n            inputElement.value = this.toText(val);\r\n          }, 0);\r\n        }\r\n      }\r\n    } else {\r\n      val = ``;\r\n    }\r\n\r\n    return val;\r\n  }\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    if(value.length < 6) {\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter((element) =>\r\n        //this.hasMatchRecords(element, value)\r\n        (Object.values(element)[this.bindColumnKey - 1] as string).includes(\r\n          value\r\n        )\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue()\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if (!event.isComposing) {\r\n      event.target.value = this.toHankaku(\r\n        this.hiraganaToKatagana(event.target.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åé ­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    if (inputTargetValue.length === 8) {\r\n      return inputTargetValue.substr(2);\r\n    }\r\n    return inputTargetValue;\r\n  }\r\n\r\n  /**\r\n   * ã²ãããªãã«ã¿ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public hiraganaToKatagana(inputValue) {\r\n    return inputValue.replace(/[\\u3041-\\u3096]/g, function (match) {\r\n      var chr = match.charCodeAt(0) + 0x60;\r\n      return String.fromCharCode(chr);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¥åæå­ãåè§ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public toHankaku(inputValue) {\r\n    let half = \"0123456789\";\r\n    half += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    half += \"abcdefghijklmnopqrstuvwxyz\";\r\n    half += \"ï½¡ï½¤ï½¢\\\\ï½£;:ï½¥-+|_@., \";\r\n    half += \"ï½±ï½²ï½³ï½´ï½µï½¶ï½·ï½¸ï½¹ï½ºï½»ï½¼ï½½ï½¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½¦ï¾ï½§ï½¨ï½©ï½ªï½«ï½¯ï½¬ï½­ï½®ï½°\";\r\n    let halfArr = new Array(\r\n      \"ï½³ï¾\",\r\n      \"ï½¶ï¾\",\r\n      \"ï½·ï¾\",\r\n      \"ï½¸ï¾\",\r\n      \"ï½¹ï¾\",\r\n      \"ï½ºï¾\",\r\n      \"ï½»ï¾\",\r\n      \"ï½¼ï¾\",\r\n      \"ï½½ï¾\",\r\n      \"ï½¾ï¾\",\r\n      \"ï½¿ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\"\r\n    );\r\n\r\n    let full = \"ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼\";\r\n    full += \"ï¼¡ï¼¢ï¼£ï¼¤ï¼¥ï¼¦ï¼§ï¼¨ï¼©ï¼ªï¼«ï¼¬ï¼­ï¼®ï¼¯ï¼°ï¼±ï¼²ï¼³ï¼´ï¼µï¼¶ï¼·ï¼¸ï¼¹ï¼º\";\r\n    full += \"ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½\";\r\n    full += \"ãããï¿¥ãï¼ï¼ã»ï¼ï¼ï½ï¼¿ï¼ ï¼ï¼ã\";\r\n    full +=\r\n      \"ã¢ã¤ã¦ã¨ãªã«ã­ã¯ã±ã³ãµã·ã¹ã»ã½ã¿ããããããããããããããããã ã¡ã¢ã¤ã¦ã¨ã©ãªã«ã¬ã­ã¯ã²ã³ã¡ã£ã¥ã§ã©ãã£ã¥ã§ã¼\";\r\n    let fullArr = new Array(\r\n      \"ã´\",\r\n      \"ã¬\",\r\n      \"ã®\",\r\n      \"ã°\",\r\n      \"ã²\",\r\n      \"ã´\",\r\n      \"ã¶\",\r\n      \"ã¸\",\r\n      \"ãº\",\r\n      \"ã¼\",\r\n      \"ã¾\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\"\r\n    );\r\n\r\n    let str = \"\";\r\n    //åè§ã«ãç¨\r\n    for (let i = 0; i < halfArr.length; i++) {\r\n      let reg = new RegExp(fullArr[i], \"g\");\r\n      inputValue = inputValue.replace(reg, halfArr[i]);\r\n    }\r\n    for (let i = 0; i < inputValue.length; i++) {\r\n      let oneStr = inputValue.charAt(i);\r\n      let num = full.indexOf(oneStr, 0);\r\n      oneStr = num >= 0 ? half.charAt(num) : oneStr;\r\n      str += oneStr;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-tel-no',\r\n  templateUrl: './sh-ctl-tel-no.component.html',\r\n  styleUrls: ['./sh-ctl-tel-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTelNoComponent extends SHFormControl<string> implements OnInit {\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlTelNo\";\r\n    this.maxlength = 15;\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.stringValue = this.value;\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-time',\r\n  templateUrl: './sh-ctl-time.component.html',\r\n  styleUrls: ['./sh-ctl-time.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTimeComponent extends SHFormControl<string> implements OnInit {\r\n  public obj: string = \".ShCtlTime\";\r\n  public adjust: number = 1;\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"ç¡å¹ãªæ¥ä»ã§ã\";\r\n  public stringValue: any;\r\n  public isFirst: boolean = true;\r\n  @Input() public format: number = SHCtlCommon.Const.timeFormat.HHMM;\r\n\r\n  //ç´åã®å¤ä¿æ\r\n  private timeStrage: string = null;\r\n\r\n  constructor(  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlTime\";\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      var date = this.value.split(':');\r\n      switch(this.format){\r\n        case SHCtlCommon.Const.timeFormat.HH:\r\n          this.stringValue = `${date[0]}`\r\n          break;\r\n        case SHCtlCommon.Const.timeFormat.HHMM:\r\n          this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : \"00\")}`\r\n          break;\r\n        case SHCtlCommon.Const.timeFormat.HH:\r\n          this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : \"00\")}:${(date.length > 2 ? date[2] : \"00\")}`\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    this.timecalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    let val = event.target.value\r\n    if (val) {\r\n      //HHå½¢å¼ã®å ´å\r\n      if (val.length == 2)\r\n        val += \":00:00\";\r\n      //HHMMå½¢å¼ã®å ´å\r\n      if (val.length == 5)\r\n        val += \":00\";\r\n    }\r\n\r\n    if (this.timeStrage != val) {\r\n      this.onBeforeChange(event);\r\n      this.valueChange.emit(val);\r\n    }\r\n    this.timeStrage = val;\r\n    setTimeout(() => {this.onAfterBlur(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keypress\r\n   */\r\n  public onKeypress(event) {\r\n    this.timecalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ã­ã¼ã¤ãã³ãç³»\r\n   * /ã­ã¼ãæ¼ããã¨ã§ç¾å¨æå»ãã»ãã\r\n   * @param event keypress\r\n   */\r\n  private timecalculation(event) {\r\n    if (event.key === SHCtlCommon.Const.keyCodes.signs[191]) {\r\n      event.target.value = this.setCurrentTime();\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ç¾å¨æå»ã®è¨­å®\r\n   * @param event keypress\r\n   */\r\n  private setCurrentTime() {\r\n    let newDate = new Date();\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = SHCtlCommon.padding(newDate.getHours(), 2); // HH\r\n    nullLastString = SHCtlCommon.padding(newDate.getMinutes(), 2) // HH:MM\r\n    let stringValue = String(nullFirstString + \":\" + nullLastString);\r\n    return stringValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-toku-code',\r\n  templateUrl: './sh-ctl-toku-code.component.html',\r\n  styleUrls: ['./sh-ctl-toku-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTokuCodeComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlTokuCode\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event: any) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * åé ­é¶å\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[a-zA-Z]/g, \"\");\r\n    if (inputTargetValue.length == 0) {\r\n      return \"\";\r\n    }\r\n    else if (inputTargetValue.length > 9) {\r\n      return inputTargetValue;\r\n    }\r\n    let result = ((\"00000000\" + inputTargetValue).slice(-9));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * é¶é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[a-zA-Z]/g, \"\");\r\n    return inputTargetValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-wide-char',\r\n  templateUrl: './sh-ctl-wide-char.component.html',\r\n  styleUrls: ['./sh-ctl-wide-char.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlWideCharComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n  private allowkeys = [`ArrowLeft`, `ArrowRight`, `ArrowDown`, `ArrowUp`];\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlWideChar\";\r\n  }\r\n  private isAllowkeys(key: string) {\r\n    return this.allowkeys.includes(key);\r\n  }\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.maxByteLength % 2 != 0)\r\n      this.maxByteLength = this.maxByteLength - 1;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n\r\n    if (event.inputType !== 'insertCompositionText') {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.onKeyUp(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    const input = event.target as HTMLInputElement;\r\n    const cursor = input.selectionStart;\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      if(event.shiftKey || event.key === \"Shift\") return;\r\n      input.setSelectionRange(cursor, cursor);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyDown(event) {\r\n    \r\n    if (this.maxByteLength > 0)\r\n      super.onKeyDown(event);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-wide-char-ml',\r\n  templateUrl: './sh-ctl-wide-char-ml.component.html',\r\n  styleUrls: ['./sh-ctl-wide-char-ml.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlWideCharMLComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n  private allowkeys = [`ArrowLeft`, `ArrowRight`, `ArrowDown`, `ArrowUp`];\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlWideCharML\";\r\n  }\r\n  private isAllowkeys(key: string) {\r\n    return this.allowkeys.includes(key);\r\n  }\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.maxByteLength % 2 != 0)\r\n      this.maxByteLength = this.maxByteLength - 1;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n\r\n    if (event.inputType !== 'insertCompositionText') {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.onKeyUp(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (event.target.value == undefined) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return;\r\n    };\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    const input = event.target as HTMLInputElement;\r\n    const cursor = input.selectionStart;\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      if(event.shiftKey || event.key === \"Shift\") return;\r\n      input.setSelectionRange(cursor, cursor);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyDown(event) {\r\n    if (this.maxByteLength > 0)\r\n      super.onKeyDown(event);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  AfterViewInit\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {\r\n  MomentDateAdapter,\r\n  MAT_MOMENT_DATE_ADAPTER_OPTIONS\r\n} from \"@angular/material-moment-adapter\";\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n  NativeDateAdapter\r\n} from \"@angular/material/core\";\r\nimport { MatDatepicker } from \"@angular/material/datepicker\";\r\nimport * as _moment from \"moment\";\r\nimport { Moment } from \"moment\";\r\n\r\nconst moment = _moment;\r\n\r\ntype yearAndMonth = {\r\n  year: number;\r\n  month: number;\r\n};\r\n\r\n@Component({\r\n  selector: \"sh-ctl-year-month\",\r\n  templateUrl: \"./sh-ctl-year-month.component.html\",\r\n  styleUrls: [\"./sh-ctl-year-month.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlYearMonthComponent extends SHFormControl<string>\r\n  implements OnInit, OnChanges, AfterViewInit {\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"æ¥ä»ã«èª¤ããããã¾ãã\";\r\n  public adjust: any;\r\n  public stringValue: any;\r\n  public cache: yearAndMonth = { year: null, month: null };\r\n  public date = new FormControl(moment());\r\n  @Input() public max = \"9999-12\";\r\n  @Input() public min = \"1000-12\";\r\n  constructor(private el: ElementRef) {\r\n    super();\r\n    this.ctlName = \"SHCtlYearMonth\";\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes.value) {\r\n      return;\r\n    }\r\n    if (!changes.value.currentValue) {\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (changes.value.currentValue.length >= 7) {\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (changes.value.currentValue) {\r\n      this.value = this.toText(changes.value.currentValue);\r\n    }\r\n  }\r\n\r\n  public getYearAndManth(date: any) {\r\n    if (!date) return;\r\n    const val = new Date(date).toLocaleDateString().split('/')\r\n    const year = val[0];\r\n    const month = val[1];\r\n    return `${year}${month}`;\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null && this.isDisabled) {\r\n      this.changeFormat(this.value.replace(\"-\", \"\"));\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    if(!this.isDisabled) {\r\n      let element = <HTMLElement>this.el.nativeElement.querySelector('input');\r\n      element.setAttribute(\"max\", this.max);\r\n      element.setAttribute(\"min\", this.min);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onOpened\r\n   */\r\n  public onOpened() {\r\n    let el = document.querySelector(\"mat-datepicker-content\");\r\n    el.addEventListener(\"focusin\", () => {\r\n      this.isfocused = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * onClosed\r\n   */\r\n  public onClosed() {\r\n    let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n    setTimeout(function(){inputValue.dispatchEvent(new Event('focus'));},0);  \r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    this.yearAndMonthCalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keypress\r\n   */\r\n  public onKeypress(event) {\r\n    this.yearAndMonthCalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n   \r\n    this.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * å¹´æè¨ç®\r\n   * @param event \r\n   */\r\n  private yearAndMonthCalculation(event) {\r\n    let key = this.isKeysAllowedToMe(event);\r\n    if (key === 0) {\r\n      this.setCurrentDate(event);\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªã¿ã¤ãã«è¨±å®¹ããã¦ããã­ã¼\r\n   * @param event keypress\r\n   */\r\n  private isKeysAllowedToMe(event: any) {\r\n    if (event.key === SHCtlCommon.Const.keyCodes.signs[191]) {\r\n      return 0;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * æ¬æ¥æ¥ä»ã®è¨­å®\r\n   * @param event keypress\r\n   */\r\n  public setCurrentDate(event) {\r\n    let newDate = new Date();\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = SHCtlCommon.padding(newDate.getFullYear(), 4); // YYYY\r\n    nullLastString = SHCtlCommon.padding(newDate.getMonth() + 1, 2); // MM\r\n    event.target.value = String(nullFirstString + \"-\" + nullLastString);\r\n  }\r\n\r\n  /**\r\n   * æ¥é ­èªä»ä¸\r\n   * @param inputTargetValue num.substr(0, 2)\r\n   */\r\n  public convYear(inputTargetValue) {\r\n    if (inputTargetValue >= \"00\" && inputTargetValue <= 49) {\r\n      return \"20\" + inputTargetValue;\r\n    } else {\r\n      return \"19\" + inputTargetValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * YYYY/MMå¦ç\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    let num = inputTargetValue.toString().replace(/\\//g, \"\");\r\n    if (num.trim().length === 0) {\r\n      return \"\";\r\n    }\r\n    // 4æ¡è¥¿æ¦\r\n    if (num.length === 3 || num.length === 4) {\r\n      // // æ¥é ­èªåå¾\r\n      return SHCtlCommon.padding(num, 4) + \"-01\";\r\n    } else if (num.length === 5 || num.length === 6) {\r\n      // æ¥é ­èªåå¾\r\n      let year = num.substr(0, 4) + \"-\" + (\"00\" + num.substr(4)).slice(-2);\r\n      return year;\r\n    } else {\r\n      return inputTargetValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ç¶æå­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(\"-\", \"\");\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeFormat(value) {\r\n    if (value != null && value != undefined && value.length === 6) {\r\n      let nullFirstString = null;\r\n      let nullLastString = null;\r\n      nullFirstString = value.slice(0, 4);\r\n      nullLastString = value.slice(4, 6);\r\n      this.stringValue = String(nullFirstString + \"å¹´\" + nullLastString + \"æ\");\r\n      return this.stringValue;\r\n    } else {\r\n      this.stringValue = '';\r\n      return this.stringValue;\r\n    }\r\n\r\n  }\r\n}","import { Component, OnInit, OnChanges, SimpleChanges, AfterContentChecked } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-zip-no',\r\n  templateUrl: './sh-ctl-zip-no.component.html',\r\n  styleUrls: ['./sh-ctl-zip-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlZipNoComponent extends SHFormControl<string> implements OnChanges, OnInit, AfterContentChecked {\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"3æ¡ã7æ¡ã®ã¿æå¹ã§ãã\";\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlZipNo\";\r\n    this.maxlength = 7;\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if(changes.value.currentValue) {\r\n        if (changes.value.currentValue != changes.value.previousValue\r\n          && changes.value.currentValue.length == this.maxlength) {\r\n          this.value = this.withHyphen(changes.value.currentValue)\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.changeFormat(this.value);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    if (!event.target.value) {\r\n      setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n      return;\r\n    }\r\n    event.target.value = this.withoutHyphen(event.target.value)\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (!event.target.value) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return;\r\n    }\r\n\r\n    event.target.value = this.withHyphen(event.target.value)\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //å¥åæ¡æ°ãééã£ã¦ããå ´åã«ãèªã³ã³ãã¼ãã³ãã«ãã©ã¼ã«ã¹ãæ»ã\r\n    if (event.target.value.length != 0 && event.target.value.length != 3 && event.target.value.length != 7) {      \r\n      event.target.value = \"\";\r\n      let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n      setTimeout(() => {inputValue.focus();}, 10);\r\n    }\r\n\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n  \r\n  /**\r\n   * ãã¤ãã³ä»ä¸ç·¨é\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public withHyphen(inputTargetValue): string {\r\n    inputTargetValue = inputTargetValue.replace(/\\ |\\-/g, \"\");\r\n\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    inputTargetValue = inputTargetValue.replace(/[!\"#$%&'()\\*\\+\\.,\\/:;<=>?@\\[\\\\\\]^_`{|}~a-zA-Z]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    if (isNaN(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    let zipcd = inputTargetValue.toString();\r\n    if (zipcd.match(/^\\d{3}-?\\d{4}$/)) {\r\n      zipcd = zipcd.substr(0, 3) + \"-\" + zipcd.substr(3)\r\n    }\r\n    return zipcd;\r\n\r\n  }\r\n\r\n  /**\r\n   * ãã¤ãã³é¤å»ç·¨é\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public withoutHyphen(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(/-/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeFormat(value) {\r\n    if (!value) {\r\n      this.stringValue = \"\";\r\n      return;\r\n    }\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = value.slice(0, 3);\r\n    nullLastString = value.slice(-4);\r\n    this.stringValue = String(nullFirstString + \"-\" + nullLastString);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShCtlApiService } from './sh-ctl-api.service';\r\nimport { SmplKbnStore } from '../entities/SmplKbnStore';\r\nimport { SmplKbnCodeType } from '../entities/SmplKbnCodeType';\r\n\r\n/**\r\n * åºåãã¹ã¿ã®æå ±ãåå¾\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmplKbnCodeService {\r\n\r\n  constructor(\r\n    private apiComService: ShCtlApiService,\r\n  ) { }\r\n\r\n  //åºåãã¹ã¿\r\n  private masterCache: SmplKbnStore[] = [];\r\n\r\n  /**\r\n   * åºåãã¹ã¿åå¾\r\n   */\r\n  public async fetchAll(url: string): Promise<SmplKbnCodeType[]> {\r\n    return this.apiComService.get<SmplKbnCodeType[]>(url);\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããã¹ã¿ã®ã­ã£ãã·ã¥ãã¦ãããã¼ã¿ãåå¾\r\n   * @param key ãã¹ã¿ã®åå\r\n   */\r\n  public getMasterData(key: string): SmplKbnCodeType[] {\r\n    let cache = this.masterCache.filter(item => {\r\n      return item.masterName == key\r\n    })\r\n    return cache.length > 0 ? cache[0].masterCache : [];\r\n  }\r\n\r\n  /**\r\n   * ãã¹ã¿ãã¼ã¿ãã­ã£ãã·ã¥ãã\r\n   * @param key ãã¹ã¿ã®åå\r\n   * @param masterData ãã¹ã¿ãã¼ã¿\r\n   */\r\n  public setMasterData(key: string, masterData: SmplKbnCodeType[]) {\r\n    if (this.masterCache.length > 0) {\r\n      for (let item of this.masterCache) {\r\n        if (item.masterName == key) {\r\n          item.masterCache = masterData\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.masterCache = this.masterCache.concat([{ masterName: key, masterCache: masterData }]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { SmplKbnCodeType } from \"../../entities/SmplKbnCodeType\";\r\nimport { SmplKbnCodeService } from \"../../services/smpl-kbn-code.service\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-kbn-radio\",\r\n  templateUrl: \"./sh-ctl-kbn-radio.component.html\",\r\n  styleUrls: [\"./sh-ctl-kbn-radio.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlKbnRadioComponent extends SHFormControl<string> implements OnInit, OnChanges {\r\n  @Input() public dataKbnName: string = \"\";\r\n  @Input() public radioContent: any = \"\";\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  @Input() public displayLabel: string = \"\";\r\n  @Output() public throwError = new EventEmitter();\r\n\r\n  public name: string = \"\";\r\n  public kbnCodes: SmplKbnCodeType[];\r\n\r\n  constructor(private SmplKbnRadioService: SmplKbnCodeService) {\r\n    super();\r\n    this.ctlName = \"SHCtlKbnRadio\";\r\n  }\r\n \r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (!this.items) {\r\n      if (this.SmplKbnRadioService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplKbnRadioService.fetchAll(this.apiUrl).then(response => {\r\n          this.kbnCodes = response;\r\n          this.SmplKbnRadioService.setMasterData(this.apiUrl, response);\r\n        });\r\n      } else {\r\n        if (this.SmplKbnRadioService.getMasterData(this.apiUrl).length > 0)\r\n          this.kbnCodes = this.SmplKbnRadioService.getMasterData(this.apiUrl);\r\n      }\r\n    } else {\r\n      this.kbnCodes = this.items;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ngOnChanges\r\n   */\r\n  public ngOnChanges(change: SimpleChanges) {\r\n    if(change.items && change.items.currentValue) {\r\n      this.kbnCodes = change.items.currentValue;\r\n    }\r\n    if (change.value) {\r\n      if (change.value.currentValue) {\r\n        this.value = change.value.currentValue.toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event: any) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeRadioContent(item) {\r\n    this.radioContent = item;\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { SmplKbnCodeType } from \"../../entities/SmplKbnCodeType\";\r\nimport { SmplKbnCodeService } from \"../../services/smpl-kbn-code.service\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-kbn-select\",\r\n  templateUrl: \"./sh-ctl-kbn-select.component.html\",\r\n  styleUrls: [\"./sh-ctl-kbn-select.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlKbnSelectComponent extends SHFormControl<string> implements OnInit {\r\n  @Input() public dataKbnName: string = \"\";\r\n  @Input() public selectContent: any = \"\";\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  @Input() public hiddenClearButton: boolean = false;\r\n  @Output() public throwError = new EventEmitter();\r\n\r\n  public name: string = \"\";\r\n  public event: any;\r\n  public kbnCodes: SmplKbnCodeType[];\r\n  public uniqueStr = \"\";\r\n\r\n  constructor(\r\n    private SmplKbnSelectService: SmplKbnCodeService,\r\n    ) {\r\n    super();\r\n    this.ctlName = \"SHCtlKbnSelect\";\r\n  }\r\n\r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (!this.items) {\r\n      if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplKbnSelectService.fetchAll(this.apiUrl).then(response => {\r\n          this.kbnCodes = response;\r\n          this.SmplKbnSelectService.setMasterData(this.apiUrl, response);\r\n        });\r\n      } else {\r\n        if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)\r\n          this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);\r\n      }\r\n      if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)\r\n        this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);\r\n    } else {\r\n      this.kbnCodes = this.items;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *itemsã®å¤æ´æ¤ç¥\r\n   *ä¸ä½ã³ã³ãã¼ãã³ãããitemsã«å¤ãæ³¨å¥ããã¦ãããæ¤ç¥ãå¤æ´ãã\r\n   */\r\n  ngOnChanges(change: SimpleChanges) {\r\n    if (change.items) {\r\n      if (change.items.currentValue) {\r\n          this.kbnCodes = change.items.currentValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange() {\r\n    this.onBeforeChange(event);\r\n    \r\n    this.valueChange.emit(this.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeSelectContent(item) {\r\n    this.selectContent = item;\r\n  }\r\n\r\n  /**\r\n   * å¤ã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = null;\r\n    this.onChange();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from '../../utilities/ShFormPopup';\r\nimport { BindCtlService } from '../../services/bind-ctl.service';\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: 'sh-ctl-popup',\r\n  templateUrl: './sh-ctl-popup.component.html',\r\n  styleUrls: ['./sh-ctl-popup.component.css', '../../../style.common.css']\r\n})\r\nexport class ShCtlPopupComponent extends SHFormPopup implements OnInit, OnChanges {\r\n\r\n  constructor(\r\n    protected SmplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(SmplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlPopup\";\r\n    \r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl';\r\nimport { SHCtlPopupDialogMultiComponent } from '../sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component';\r\nimport { ShCtlConst } from '../../constShCtl';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-popup-multi',\r\n  templateUrl: './sh-ctl-popup-multi.component.html',\r\n  styleUrls: ['./sh-ctl-popup-multi.component.css', '../../../style.common.css']\r\n})\r\nexport class ShCtlPopupMultiComponent extends SHFormControl<any> implements OnInit {\r\n    //ãã¼ã¿ã¿ã¤ãã«å\r\n    @Input() public dataTitle: string = \"\";\r\n    //API URL\r\n    @Input() public apiUrl: string = \"/api/\";\r\n    //ãã¼ã¿ã­ã£ãã·ã¥ON/OFFæ©è½ãã©ã°\r\n    @Input() public dataCache: boolean = false;\r\n    //ã­ã¼ã¨ãªãåçªå·(èµ·åæã®ãã§ãã¯ãå¥ããããã®ã­ã¼å¤å®åºæºã«ãªãã¾ãã)\r\n    @Input() public uniqueColumns:number[] = [1];\r\n    //ãããã¢ããä¸éè¡¨ç¤ºã¨ãªãåçªå·\r\n    @Input() public hiddenColumns:number[] = [];\r\n     // ãã¤ã¢ã­ã°ã®å¹ãæå®\r\n     @Input() public popupWidth: string;\r\n     public extendWidth = ShCtlConst.DIALOG_WIDTH;\r\n    //Dialogã®çµæãåãåã\r\n    public dialogRef: MatDialogRef<SHCtlPopupDialogMultiComponent,any> = null;\r\n\r\n    public codes = [];\r\n    public codesHeader = [];\r\n\r\n    constructor(\r\n      protected SmplPopupService: SmplPopupService,\r\n      protected dialog: MatDialog,\r\n    ) {\r\n      super();\r\n      this.ctlName = \"SHCtlPopupMulti\";\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n     */\r\n    public openDialog() {\r\n      if (this.codes) {\r\n        if (!this.popupWidth && this.codes.length != 0 && Object.values(this.codes[0]).length >= 4) {\r\n          this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n        }\r\n        this.dialogRef = this.dialog.open(SHCtlPopupDialogMultiComponent, {\r\n          height: ShCtlConst.DIALOG_HEIGHT,\r\n          width: this.extendWidth,\r\n          data: { \r\n              dataTitle: this.dataTitle,\r\n              value: this.value,\r\n              uniqueColumns: this.uniqueColumns,\r\n              hiddenColumns: this.hiddenColumns,\r\n          }\r\n        });\r\n        this.dialogRef.afterClosed().subscribe(result => {\r\n          if (result != undefined)\r\n            this.valueChange.emit(result);\r\n        });\r\n      }  \r\n    }\r\n    \r\n    /**\r\n     *ãã­ããã£ã®åæå\r\n     *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n     */\r\n    public ngOnInit() {\r\n      this.onInit();\r\n      if(this.popupWidth) {\r\n        this.extendWidth = this.popupWidth\r\n      }  \r\n      // //ã¦ãã¼ã¯ãªæå­å\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length >= 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then(response => {\r\n          this.codes = response.data;\r\n          if (response.header == null) {\r\n            return\r\n          }\r\n          this.codesHeader = Object.values(response.header);\r\n          this.dataTitle = response.title;\r\n        });\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * ãã¹ã¿æå ±ããã³ã¼ããåå¾\r\n     */\r\n    public getCodes() {\r\n      this.openDialog();\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then(response => {\r\n          this.codes = response.data;\r\n          this.codesHeader = Object.values(response.header);\r\n          this.dataTitle = response.title;\r\n         \r\n          if (this.dataCache) {\r\n            this.SmplPopupService.setMasterData(this.apiUrl, response);\r\n          }\r\n\r\n          if (this.dialogRef.componentInstance) {\r\n              this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n              this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n              this.dialogRef.componentInstance.codes = this.codes;\r\n              if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n                this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n              }\r\n              let cols = ['select'];\r\n              this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n                  if (!this.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n              });\r\n              this.dialogRef.componentInstance.displayedColumns = cols;\r\n            }\r\n        });\r\n        \r\n      } else {\r\n        this.codes = Object(this.SmplPopupService.getMasterData(this.apiUrl)).data;\r\n        this.codesHeader = Object.values(Object(this.SmplPopupService.getMasterData(this.apiUrl)).header);\r\n        if (this.dialogRef.componentInstance) {\r\n          this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n          this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n          this.dialogRef.componentInstance.codes = this.codes;\r\n          if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n          }\r\n          let cols = ['select'];\r\n          this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n              if (!this.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n          });\r\n          this.dialogRef.componentInstance.displayedColumns = cols;    \r\n        }\r\n      }\r\n    }\r\n  \r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ValidationErrorService } from 'sh-http-client';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-validated-error',\r\n  templateUrl: './sh-ctl-validated-error.component.html',\r\n  styleUrls: ['./sh-ctl-validated-error.component.css']\r\n})\r\nexport class ShCtlValidatedErrorComponent implements OnInit, OnDestroy {\r\n  @Input() message: string;\r\n  @Input() isError: boolean = false;\r\n  @Input() errors: string[];\r\n  private subscription: Subscription;\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor(\r\n    private validationErrorService: ValidationErrorService\r\n  ) { }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãåæå\r\n   */\r\n  public ngOnInit() {\r\n    this.subscription = this.validationErrorService.validationErrorState\r\n      .subscribe(response => {\r\n        if (response.show) {\r\n          this.isError = true;\r\n          this.errors = [];\r\n          Object.keys(response.meesages).forEach(controlName => {\r\n            this.errors = [...this.errors, ...response.meesages[controlName]];\r\n          });\r\n        } else {\r\n          this.isError = false;\r\n          this.errors = [];\r\n        }\r\n      });\r\n  }\r\n  public ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-half-number',\r\n  templateUrl: './sh-ctl-half-number.component.html',\r\n  styleUrls: ['./sh-ctl-half-number.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlHalfNumberComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlHalfNumber\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceFUllSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n      SHCtlCommon.replaceFullWidth(event);\r\n      SHCtlCommon.replaceHalfWidth(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n public onChange(event) {\r\n  this.onBeforeChange(event);\r\n  \r\n  this.valueChange.emit(event.target.value.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\"));\r\n\r\n  setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-check',\r\n  templateUrl: './sh-ctl-check.component.html',\r\n  styleUrls: ['./sh-ctl-check.component.css', '../../../style.common.css']\r\n})\r\n\r\nexport class SHCtlCheckComponent extends SHFormControl<string> implements OnInit, OnChanges {\r\n\r\n  //ã©ãã«å\r\n  @Input() public checkedLabel: string = \"\";  \r\n  //ã©ãã«ä½ç½®(ãã§ãã¯ããã¯ã¹ã®åã)\r\n  @Input() public beforeAlign: boolean = false;\r\n  //ãã§ãã¯ããã¯ã¹ã®ãã§ãã¯æã®å¤\r\n  @Input() public checkedValue: string = \"1\";\r\n  //ãã§ãã¯ããã¯ã¹ã®æªãã§ãã¯æã®å¤\r\n  @Input() public uncheckedValue: string = \"0\";\r\n\r\n  constructor(  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlCheck\";\r\n  }\r\n\r\n  public setLabelPosition() {\r\n    return this.beforeAlign ? 'before' : 'after';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * ngOnChangesã¤ãã³ã\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        if (changes.value.currentValue === '' || changes.value.currentValue === undefined || changes.value.currentValue === String(/[^\\x01-\\x7E\\xA1-\\xDF]+$/g)) {\r\n          this.value = '';\r\n          return;\r\n        }\r\n        this.value = changes.value.currentValue == this.checkedValue ? \"checked\" : \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.checked ? this.checkedValue :  this.uncheckedValue);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LockScreenService } from '../../services/lock-screen.service';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-lock-screen',\r\n  templateUrl: './sh-ctl-lock-screen.component.html',\r\n  styleUrls: ['./sh-ctl-lock-screen.component.css']\r\n})\r\nexport class SHCtlLockScreenComponent implements OnInit {\r\n  public isConnecting: boolean = false;\r\n\r\n  /**\r\n  * ã³ã³ã¹ãã©ã¯ã¿\r\n  */\r\n  constructor(\r\n    private lockScreen: LockScreenService\r\n  ) { }\r\n\r\n  /**\r\n  * ã³ã³ãã¼ãã³ãåæå\r\n  */\r\n  public ngOnInit() {\r\n    this.lockScreen.isConnectingState.subscribe(\r\n      isConnecting => {\r\n        this.isConnecting = isConnecting;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n//Dateåã®ãã¼ã¿ãsh-ctl-dateã§æ±ãå½¢å¼ã®ãªãã¸ã§ã¯ãã«å¤æ\r\n@Pipe({\r\n  name: 'ngDateValue'\r\n})\r\nexport class NgDateValuePipe implements PipeTransform {\r\n  transform(value: Date): any {\r\n    if (value != null) {\r\n      return {\r\n        year: value.getFullYear(),\r\n        month: value.getMonth() + 1,\r\n        day: value.getDate()\r\n      };\r\n    }\r\n    return null;\r\n    \r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ShFlexRow]'\r\n})\r\nexport class ShFlexRowDirective implements OnInit {\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    ) { }\r\n\r\n  ngOnInit(){\r\n    this.init();\r\n  }\r\n  private init(){\r\n    this.el.nativeElement.style.flexFlow = \"row wrap\";\r\n    this.el.nativeElement.style.display = \"flex\";\r\n    this.el.nativeElement.style.boxSizing = \"border-box\";\r\n    this.el.nativeElement.style.margin = \"0px -1rem -1rem 0px\";\r\n  }\r\n}","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ShFlex]'\r\n})\r\nexport class ShFlexDirective implements OnInit {\r\n  /**\r\n   * æå¤§\r\n   */\r\n  @Input() colLg: number = 16.6\r\n  private ctlLgFlex: string = `1 1 ${this.colLg}%`;\r\n  private ctlLgMaxWidth: string = `${this.colLg}%`;\r\n  /**\r\n   * ipad ~ p\r\n   */\r\n  @Input() colMd: number = 33.3\r\n  private ctlMdFlex: string = `1 1 ${this.colMd}%`;\r\n  private ctlMdMaxWidth: string = `${this.colMd}%`;\r\n  /**\r\n   * mobile\r\n   */\r\n  @Input() colSm: number = 100\r\n  private ctlSmFlex: string = `1 1 ${this.colSm}%`;\r\n  private ctlSmMaxWidth: string = `${this.colSm}%`;\r\n  //ã¡ãã£ã¢ã¯ã¨ãªé¾å¤\r\n  private mediaSm: string = \"(max-width: 768px)\"\r\n  private mediaMd: string = \"(max-width: 1024px)\";\r\n  //ãã®ä»è¨­å®ãã¦ããããã¹ã¿ã¤ã«\r\n  private ctlWidth: string = \"100%\";\r\n  private ctlBoxSizing: string = \"border-box\";\r\n  private ctlPadding: string = \"0px 1rem 1rem 0px\";\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    //ä¸ããä»»æã®å¤ãè¨­å®ããå ´åããã§å¤ãåè¨­å®ãã¦ãããªãã¨\r\n    //æå³ããæåã«ãªããªãã®ã§æ¶ããªã\r\n    this.initParam();\r\n    this.initStyle();\r\n    window.addEventListener('resize', () => {\r\n      this.initStyle()\r\n    })\r\n  }\r\n  private initParam() {\r\n    this.ctlLgFlex = `1 1 ${this.colLg}%`;\r\n    this.ctlLgMaxWidth = `${this.colLg}%`;\r\n    this.ctlMdFlex = `1 1 ${this.colMd}%`;\r\n    this.ctlMdMaxWidth = `${this.colMd}%`;\r\n    this.ctlSmFlex = `1 1 ${this.colSm}%`;\r\n    this.ctlSmMaxWidth = `${this.colSm}%`;\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n  }\r\n  private initStyle() {\r\n    const sm: MediaQueryList = window.matchMedia(this.mediaSm)\r\n    const md: MediaQueryList = window.matchMedia(this.mediaMd)\r\n    if (sm.matches) {\r\n      this.smStyleInit()\r\n    } else if (md.matches) {\r\n      this.mdStyleInit()\r\n    } else {\r\n      this.defaultStyleInit()\r\n    }\r\n  }\r\n  private smStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlSmFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlSmMaxWidth;\r\n  }\r\n  private mdStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlMdFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlMdMaxWidth;\r\n  }\r\n  private defaultStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlLgFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlLgMaxWidth;\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, Input, AfterViewInit, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[readonly]'\r\n})\r\nexport class ShReadOnlyDirective implements AfterViewInit, OnChanges {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input('readonly') isReadOnly: boolean = true;\r\n\r\n  ngAfterViewInit() {\r\n    this.addAttribute();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.addAttribute();\r\n  }\r\n\r\n  addAttribute() {\r\n    let qs = this.el.nativeElement.querySelectorAll('input,textarea,select');\r\n    for (var e of qs) {\r\n      e.readOnly = this.isReadOnly;\r\n    }\r\n\r\n    qs = this.el.nativeElement.querySelectorAll('button,mat-icon');\r\n    if (this.isReadOnly) {\r\n      for (var e of qs) {\r\n        e.style.display = \"none\";\r\n      }\r\n    }\r\n    else {\r\n      for (var e of qs) {\r\n        e.style.display = \"inline\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[state]'\r\n})\r\nexport class ShCtlStateDirective implements OnChanges {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input('state') state: string = \"\";\r\n  @Input() onlyField: boolean = false;\r\n\r\n  ngAfterViewInit() {\r\n    this.addShCtlStateClass();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.addShCtlStateClass();\r\n  }\r\n\r\n  addShCtlStateClass() {\r\n    let qs = this.el.nativeElement.querySelectorAll('mat-form-field');\r\n    for (var e of qs) {\r\n      let classList = (e) ? e.className.split(' ') : [];\r\n      classList.forEach(className => {\r\n        if (className.startsWith(\"sh-ctl-state-\"))\r\n          e.classList.remove(className);\r\n      });\r\n      e.classList.add(\"sh-ctl-state-\" + this.state);\r\n    }\r\n\r\n    if (this.onlyField) {\r\n      let qsOnlyField = this.el.nativeElement.querySelectorAll('.only-field');\r\n      for (var e of qsOnlyField) {\r\n        let classList = (e) ? e.className.split(' ') : [];\r\n        classList.forEach(className => {\r\n          if(className.startsWith(\"only-field-\")){\r\n            e.classList.remove(className);\r\n          }\r\n        });\r\n        e.classList.add(\"only-field-\" + this.state);\r\n      }\r\n    }\r\n\r\n    qs = this.el.nativeElement.querySelectorAll('span,label');\r\n    for (var e of qs) {\r\n      let classList = (e) ? e.className.split(' ') : [];\r\n      classList.forEach(className => {\r\n        if (className.startsWith(\"sh-ctl-state-\"))\r\n          e.classList.remove(className);\r\n      });\r\n      e.classList.add(\"sh-ctl-state-\" + this.state + \"-message\");\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\n//Angular Material\r\nimport {\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatCheckboxModule,\r\n  MatProgressSpinnerModule,\r\n} from '@angular/material'\r\n\r\nimport { SHCtlAllCharComponent } from './components/sh-ctl-all-char/sh-ctl-all-char.component';\r\nimport { SHCtlAllCharMLComponent } from './components/sh-ctl-all-char-ml/sh-ctl-all-char-ml.component';\r\nimport { SHCtlBunjNoComponent } from './components/sh-ctl-bunj-no/sh-ctl-bunj-no.component';\r\nimport { SHCtlDateComponent } from './components/sh-ctl-date/sh-ctl-date.component';\r\nimport { SHCtlHalfCharComponent } from './components/sh-ctl-half-char/sh-ctl-half-char.component';\r\nimport { SHCtlJigCodeComponent } from './components/sh-ctl-jig-code/sh-ctl-jig-code.component';\r\nimport { SHCtlPopupDialogComponent } from './components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component';\r\nimport { SHCtlPopupDialogMultiComponent } from './components/sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component';\r\n\r\nimport { SHCtlJyuCodeComponent } from './components/sh-ctl-jyu-code/sh-ctl-jyu-code.component';\r\nimport { SHCtlKatakanaComponent } from './components/sh-ctl-katakana/sh-ctl-katakana.component';\r\nimport { SHCtlNumberComponent } from './components/sh-ctl-number/sh-ctl-number.component';\r\nimport { SHCtlSesyuCodeComponent } from './components/sh-ctl-sesyu-code/sh-ctl-sesyu-code.component';\r\nimport { SHCtlTanCodeComponent } from './components/sh-ctl-tan-code/sh-ctl-tan-code.component';\r\nimport { SHCtlTelNoComponent } from './components/sh-ctl-tel-no/sh-ctl-tel-no.component';\r\nimport { SHCtlTimeComponent } from './components/sh-ctl-time/sh-ctl-time.component';\r\nimport { SHCtlTokuCodeComponent } from './components/sh-ctl-toku-code/sh-ctl-toku-code.component';\r\nimport { SHCtlWideCharComponent } from './components/sh-ctl-wide-char/sh-ctl-wide-char.component';\r\nimport { SHCtlWideCharMLComponent } from './components/sh-ctl-wide-char-ml/sh-ctl-wide-char-ml.component';\r\nimport { SHCtlYearMonthComponent } from './components/sh-ctl-year-month/sh-ctl-year-month.component';\r\nimport { SHCtlZipNoComponent } from './components/sh-ctl-zip-no/sh-ctl-zip-no.component';\r\nimport { SHCtlKbnRadioComponent } from './components/sh-ctl-kbn-radio/sh-ctl-kbn-radio.component';\r\nimport { SHCtlKbnSelectComponent } from './components/sh-ctl-kbn-select/sh-ctl-kbn-select.component';\r\nimport { ShCtlPopupComponent } from './components/sh-ctl-popup/sh-ctl-popup.component';\r\nimport { ShCtlPopupMultiComponent } from './components/sh-ctl-popup-multi/sh-ctl-popup-multi.component';\r\nimport { ShCtlValidatedErrorComponent } from './components/sh-ctl-validated-error/sh-ctl-validated-error.component';\r\nimport { SHCtlHalfNumberComponent }  from './components/sh-ctl-half-number/sh-ctl-half-number.component';\r\nimport { SHCtlCheckComponent }  from './components/sh-ctl-check/sh-ctl-check.component';\r\nimport { SHCtlLockScreenComponent }  from './components/sh-ctl-lock-screen/sh-ctl-lock-screen.component';\r\n\r\nimport { NgDateValuePipe } from './pipes/ng-date-value.pipe';\r\n\r\nimport { ShHttpClient } from 'sh-http-client';\r\nimport { ShFlexRowDirective } from './directives/sh-flex-row.directive';\r\nimport { ShFlexDirective } from './directives/sh-flex.directive';\r\nimport { ShReadOnlyDirective } from './directives/sh-readonly.directive';\r\nimport { ShCtlStateDirective } from './directives/sh-ctl-state.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SHCtlAllCharComponent,\r\n    SHCtlAllCharMLComponent,\r\n    SHCtlBunjNoComponent,\r\n    SHCtlDateComponent,\r\n    SHCtlHalfCharComponent,\r\n    SHCtlJigCodeComponent,\r\n    SHCtlJyuCodeComponent,\r\n    SHCtlKatakanaComponent,\r\n    SHCtlNumberComponent,\r\n    SHCtlSesyuCodeComponent,\r\n    SHCtlTanCodeComponent,\r\n    SHCtlTelNoComponent,\r\n    SHCtlTimeComponent,\r\n    SHCtlTokuCodeComponent,\r\n    SHCtlWideCharComponent,\r\n    SHCtlWideCharMLComponent,\r\n    SHCtlYearMonthComponent,\r\n    SHCtlZipNoComponent,\r\n    SHCtlKbnRadioComponent,\r\n    SHCtlKbnSelectComponent,\r\n    ShCtlPopupComponent,\r\n    ShCtlPopupMultiComponent,\r\n    SHCtlPopupDialogComponent,\r\n    SHCtlPopupDialogMultiComponent,\r\n    ShCtlValidatedErrorComponent,\r\n    SHCtlHalfNumberComponent,\r\n    SHCtlCheckComponent,\r\n    SHCtlLockScreenComponent,\r\n    NgDateValuePipe,\r\n    ShFlexRowDirective,\r\n    ShFlexDirective,\r\n    ShReadOnlyDirective,\r\n    ShCtlStateDirective,\r\n  ],\r\n  entryComponents: [\r\n    SHCtlPopupDialogComponent,\r\n    SHCtlPopupDialogMultiComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    ShHttpClient\r\n  ],\r\n  exports: [\r\n    SHCtlAllCharComponent,\r\n    SHCtlAllCharMLComponent,\r\n    SHCtlBunjNoComponent,\r\n    SHCtlDateComponent,\r\n    SHCtlHalfCharComponent,\r\n    SHCtlJigCodeComponent,\r\n    SHCtlJyuCodeComponent,\r\n    SHCtlKatakanaComponent,\r\n    SHCtlNumberComponent,\r\n    SHCtlSesyuCodeComponent,\r\n    SHCtlTanCodeComponent,\r\n    SHCtlTelNoComponent,\r\n    SHCtlTimeComponent,\r\n    SHCtlTokuCodeComponent,\r\n    SHCtlWideCharComponent,\r\n    SHCtlWideCharMLComponent,\r\n    SHCtlYearMonthComponent,\r\n    SHCtlZipNoComponent,\r\n    SHCtlKbnRadioComponent,\r\n    SHCtlKbnSelectComponent,\r\n    ShCtlPopupComponent,\r\n    ShCtlPopupMultiComponent,\r\n    ShCtlValidatedErrorComponent,\r\n    SHCtlHalfNumberComponent,\r\n    SHCtlCheckComponent,\r\n    SHCtlLockScreenComponent,\r\n    NgDateValuePipe,\r\n    ShFlexRowDirective,\r\n    ShFlexDirective,\r\n    ShReadOnlyDirective,\r\n    ShCtlStateDirective\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class ShCtlCommonModule { }\r\n","import { OnInit, Component, ComponentRef} from \"@angular/core\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { ShHttpClientConst, ShRedirectService } from 'sh-http-client';\r\n\r\n/**\r\n * ã­ã¼å¶å¾¡ã®åæåãªã©\r\n */\r\nexport class ShAppComponent implements OnInit {\r\n\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor(\r\n    private redirectService: ShRedirectService\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãåæå\r\n   */\r\n  ngOnInit() {}\r\n  /**\r\n   * åæå\r\n   */\r\n  private init() {\r\n    this.redirect();\r\n    this.keyValidation();\r\n    this.setToekn();\r\n  }\r\n  private redirect() {\r\n    if(this.redirectService.redirectPath) {\r\n      this.redirectService.redirect();\r\n    }\r\n  }\r\n  private setToekn(){\r\n    const params = new URLSearchParams(location.search);\r\n    const token = params.get('access_token')\r\n    if(token){\r\n      sessionStorage.setItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`, token)\r\n      params.delete(\"access_token\");\r\n      history.pushState(null, null, location.pathname);\r\n    }\r\n  }\r\n  /**\r\n   *@ ã¨ã³ã¿ã¼æã«ãã©ã¼ã«ã¹ãå½ã¦ãããªãå ´åã®æ¡ä»¶\r\n   */\r\n  private isTargetElement(elm: HTMLInputElement) {\r\n    if(elm.type == 'hidden') return false;\r\n    if(elm.style.display == 'none') return false;\r\n    if(elm.style.opacity == '0') return false;\r\n    if(elm.disabled) return false;\r\n    const shctl =  this.getShCtlElement(elm);\r\n    if(this.checkShCtlAttr(shctl.attributes,[\r\n      'hidden'\r\n    ])) return false;\r\n    return true;\r\n  }\r\n\r\n  private checkShCtlAttr(map: NamedNodeMap, targets: string[]) {\r\n    return targets.map((t) => {\r\n      return map.getNamedItem(t) != null\r\n    }).includes(true);\r\n  }\r\n\r\n  private getShCtlElement(elm: HTMLElement): HTMLElement | null {\r\n    let parent = elm.parentElement;\r\n    if(!parent) return null;\r\n    if(parent.tagName.includes('SH-CTL')) {\r\n      return parent;\r\n    } else {\r\n      return this.getShCtlElement(parent);\r\n    }\r\n  }\r\n  /**\r\n   * ã­ã¼ããªãã¼ã·ã§ã³ä»ä¸\r\n   */\r\n  keyValidation() {\r\n    window.document.onkeydown = (event) => {\r\n      if (\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F1 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F2 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F3 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F4 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F5 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F6 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F10 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F11 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F12\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        event.altKey &&\r\n        (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_LEFT ||\r\n          event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_RIGHT)\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_N\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_R\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_D\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_ENTER) {\r\n        let input = <HTMLInputElement>document.activeElement;\r\n        if (input != null) {\r\n          if (input.type != 'textarea') {\r\n            //æ¬¡ã®æä½å¯è½ãªã¿ã°ã«åãæ¿ãã\r\n            const nodeList = window.document.querySelectorAll(\r\n              '.can-moved-with-the-enter-key'\r\n            );\r\n            const filteredInput = Array.from(nodeList).filter((el) => {\r\n              return this.isTargetElement(el as HTMLInputElement)\r\n            })\r\n            let preInput = null;\r\n            for (let i = 0; i < filteredInput.length; i++) {\r\n              let cur_input = <HTMLInputElement>filteredInput[i];\r\n              if (input.name === cur_input.name) {\r\n                if (++i >= filteredInput.length) {\r\n                  i = 0;\r\n                }\r\n                cur_input.blur();\r\n                if (event.shiftKey) {\r\n                  preInput.focus();  \r\n                }\r\n                else {\r\n                  let nextInput = <HTMLInputElement>filteredInput[i];\r\n                  nextInput.focus();  \r\n                }\r\n                return false;\r\n              }\r\n              preInput = <HTMLInputElement>filteredInput[i];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","export class ShFormControlType {\r\n  //è¦ç´ ã³ã³ãã­ã¼ã«å\r\n  public ctlName: string = \"SHFormControl\";\r\n  //è¡¨ç¤ºã¬ã¤ã¢ã¦ãåãæ¿ããã©ã°(true:é²è¦§å°ç¨/false:ç·¨éå¯è½)\r\n  public isDisabled: boolean = false;\r\n  //å¤ãã¤ã³ãå¤æ°\r\n  public value: string = \"\";\r\n  //ã¿ã¤ãã«å\r\n  public title = \"\";\r\n  //ã³ã³ãã­ã¼ã«æå(auto/always/nevwer)\r\n  public floatLabel = \"auto\";\r\n  //é²è¦§å°ç¨ç»é¢ã§ã®ã©ãã«å¹(px)\r\n  public labelWidth = \"150\";\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åæå­æ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  public maxlength: number;\r\n  //inputè¦ç´ ã«å¯¾ããstyleã®æå®(å½¢å¼ï¼{ color: \"red\" })\r\n  public styles: any = {}\r\n  //inputè¦ç´ ã«å¯¾ããclassã®æå®(å½¢å¼ï¼{ \"className\": true } or \"className className2\")\r\n  public classes: any = {}\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  public required: boolean = false;\r\n  //inputè¦ç´ ã«å¯¾ããç¶æã®æå®\r\n  public state: string = \"\";\r\n  //inputè¦ç´ ã«å¯¾ããæè¨ã®æå®\r\n  public message: string[] = [\"\"];\r\n\r\n  //ã³ã³ã¹ãã©ã¯ã¿ã§ctlNameãå¿ãæå®ãã\r\n  constructor(_ctlName: string) {\r\n    this.ctlName = _ctlName; \r\n  }\r\n}"]}