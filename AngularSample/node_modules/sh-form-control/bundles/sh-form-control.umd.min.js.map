{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://sh-form-control/lib/components/sh-ctl-common.ts","ng://sh-form-control/lib/services/max-bytelength.service.ts","ng://sh-form-control/lib/utilities/MaxByteLengthHistory.ts","ng://sh-form-control/lib/utilities/ShFormControl.ts","ng://sh-form-control/lib/components/sh-ctl-all-char/sh-ctl-all-char.component.ts","ng://sh-form-control/lib/components/sh-ctl-all-char-ml/sh-ctl-all-char-ml.component.ts","ng://sh-form-control/lib/components/sh-ctl-bunj-no/sh-ctl-bunj-no.component.ts","ng://sh-form-control/lib/components/sh-ctl-date/adapter/jpDateAdapter.ts","ng://sh-form-control/lib/components/sh-ctl-date/sh-ctl-date.component.ts","ng://sh-form-control/lib/components/sh-ctl-half-char/sh-ctl-half-char.component.ts","ng://sh-form-control/lib/constShCtl.ts","ng://sh-form-control/lib/components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component.ts","ng://sh-form-control/lib/utilities/ShFormPopup.ts","ng://sh-form-control/lib/services/sh-ctl-api.service.ts","ng://sh-form-control/lib/services/smpl-popup.service.ts","ng://sh-form-control/lib/types/NoChangeFlg.ts","ng://sh-form-control/lib/services/bind-ctl.service.ts","ng://sh-form-control/lib/services/lock-screen.service.ts","ng://sh-form-control/lib/components/sh-ctl-jig-code/sh-ctl-jig-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component.ts","ng://sh-form-control/lib/components/sh-ctl-jyu-code/sh-ctl-jyu-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-katakana/sh-ctl-katakana.component.ts","ng://sh-form-control/lib/components/sh-ctl-number/sh-ctl-number.component.ts","ng://sh-form-control/lib/components/sh-ctl-sesyu-code/sh-ctl-sesyu-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-tan-code/sh-ctl-tan-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-tel-no/sh-ctl-tel-no.component.ts","ng://sh-form-control/lib/components/sh-ctl-time/sh-ctl-time.component.ts","ng://sh-form-control/lib/components/sh-ctl-toku-code/sh-ctl-toku-code.component.ts","ng://sh-form-control/lib/components/sh-ctl-wide-char/sh-ctl-wide-char.component.ts","ng://sh-form-control/lib/components/sh-ctl-wide-char-ml/sh-ctl-wide-char-ml.component.ts","ng://sh-form-control/lib/components/sh-ctl-year-month/sh-ctl-year-month.component.ts","ng://sh-form-control/lib/components/sh-ctl-zip-no/sh-ctl-zip-no.component.ts","ng://sh-form-control/lib/services/smpl-kbn-code.service.ts","ng://sh-form-control/lib/components/sh-ctl-kbn-radio/sh-ctl-kbn-radio.component.ts","ng://sh-form-control/lib/components/sh-ctl-kbn-select/sh-ctl-kbn-select.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup/sh-ctl-popup.component.ts","ng://sh-form-control/lib/components/sh-ctl-popup-multi/sh-ctl-popup-multi.component.ts","ng://sh-form-control/lib/components/sh-ctl-validated-error/sh-ctl-validated-error.component.ts","ng://sh-form-control/lib/components/sh-ctl-half-number/sh-ctl-half-number.component.ts","ng://sh-form-control/lib/components/sh-ctl-check/sh-ctl-check.component.ts","ng://sh-form-control/lib/components/sh-ctl-lock-screen/sh-ctl-lock-screen.component.ts","ng://sh-form-control/lib/pipes/ng-date-value.pipe.ts","ng://sh-form-control/lib/directives/sh-flex-row.directive.ts","ng://sh-form-control/lib/directives/sh-flex.directive.ts","ng://sh-form-control/lib/directives/sh-readonly.directive.ts","ng://sh-form-control/lib/directives/sh-ctl-state.directive.ts","ng://sh-form-control/lib/sh-ctl-common.module.ts","ng://sh-form-control/lib/utilities/sh-app.component.ts","ng://sh-form-control/lib/utilities/ShFormControlType.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","m","i","__read","r","ar","error","SHCtlCommon","getDateStr","date","format","replace","getFullYear","toString","getMonth","slice","getDate","isBlank","obj","undefined","padding","num","option","Number","isNaN","join","LineBreak","str","replaceFullWidth","event","target","replaceHalfChar","match","replaceNumeric","replaceSpace","replaceHalfSpaceToFull","replaceFUllSpace","replaceHalfWidth","replaceSign","exclusionValue","RegExp","getRestrictedSign","replaceFullDoubleQuote","replaceHalfDoubleQuote","replaceHalf","inputTargetValue","String","fromCharCode","charCodeAt","replaceHalfKana","kanaMap","ｶﾞ","ｷﾞ","ｸﾞ","ｹﾞ","ｺﾞ","ｻﾞ","ｼﾞ","ｽﾞ","ｾﾞ","ｿﾞ","ﾀﾞ","ﾁﾞ","ﾂﾞ","ﾃﾞ","ﾄﾞ","ﾊﾞ","ﾋﾞ","ﾌﾞ","ﾍﾞ","ﾎﾞ","ﾊﾟ","ﾋﾟ","ﾌﾟ","ﾍﾟ","ﾎﾟ","ｳﾞ","ﾜﾞ","ｦﾞ","ｱ","ｲ","ｳ","ｴ","ｵ","ｶ","ｷ","ｸ","ｹ","ｺ","ｻ","ｼ","ｽ","ｾ","ｿ","ﾀ","ﾁ","ﾂ","ﾃ","ﾄ","ﾅ","ﾆ","ﾇ","ﾈ","ﾉ","ﾊ","ﾋ","ﾌ","ﾍ","ﾎ","ﾏ","ﾐ","ﾑ","ﾒ","ﾓ","ﾔ","ﾕ","ﾖ","ﾗ","ﾘ","ﾙ","ﾚ","ﾛ","ﾜ","ｦ","ﾝ","ｧ","ｨ","ｩ","ｪ","ｫ","ｯ","ｬ","ｭ","ｮ","reg","keys","sliceLength","maxlength","exclude","needsEscape","item","escapeByBackSlash","_this","excludeIndex","signsList","signs","split","map","index","array","indexOf","getUniqueStr","Math","random","convJyuCode6To8","s","trim","parseInt","sJyuCode","strCd","substr","toUpperCase","subNumber","rStr","Const","keyCodes","numerics","min","max","tenKeyNumerics","enter","chars","space","wideChara","okCharas","65","67","86","88","90","186","187","188","189","190","191","192","219","220","221","222","226","111","106","109","107","110","minus","dot","slash","plus","state","none","danger","warning","success","timeFormat","HH","HHMM","HHMMSS","Injectable","args","providedIn","MaxByteLengthService","generateByteInfo","bytes","c","calcMaxLength","maxBytelength","total","isAllowOperation","ctrlKey","isAllowWithCtlKey","key","shiftKey","isAllowWithShiftKey","isAllowCodes","code","isAllowKey","allowKeys","includes","allowCodes","allowWithCtlKey","allowWithShiftKey","MaxByteLengthHistory","startPoint","maxByteLength","enterableBytes","service","cache","changeEnterableBytes","info","entarableByte","getEnterableBytes","getResult","data","bytes_1","len","insertStr","substring","getMaxLength","JSON","stringify","SHFormControl","ctlName","isDisabled","title","floatLabel","labelWidth","styles","classes","required","message","disabled","valueChange","EventEmitter","beforeClick","afterClick","beforeFocus","afterFocus","beforeBlur","afterBlur","beforeChange","afterChange","objClass","strClass","isComp","isfocused","onlyField","onInit","onInput","onKeyDown","ngAfterViewInit","selfInputElm","nativeElement","addEventListener","handleKeydown","bind","handleInput","handleCompositionStart","handleCompositionEnd","maxByteLengthHistory","selectionStart","maxLen","emit","onFocusin","onFocusout","setTimeout","onBlur","clickClearButton","keyCode","document","querySelector","dispatchEvent","Event","clearValue","onChange","onFocus","select","onBeforeClick","onAfterClick","onBeforeFocus","onAfterFocus","onBeforeBlur","onAfterBlur","onBeforeChange","onAfterChange","inputValue","Input","Output","ViewChild","static","SHCtlAllCharComponent","_super","_data","tslib_1.__extends","ngOnInit","isSameData","isComposing","inputType","onClick","Component","selector","template","SHCtlAllCharMLComponent","SHCtlBunjNoComponent","toText","toValue","JpDateAdapter","getDateNames","dateNames","displayFormat","NativeDateAdapter","SHCtlDateComponent","dataAdapter","setLocale","ngOnChanges","changes","currentValue","getfomatedDate","Date","ngAfterContentChecked","stringValue","changeFormat","onOpened","onClosed","onKeypress","setCurrentDate","_a","paddingDate","toLocaleDateString","year","month","day","_b","dateStr","dateArr","providers","provide","DateAdapter","useClass","SHCtlHalfCharComponent","ShCtlConst","STATUS_OK","DIALOG_WIDTH","DIALOG_HEIGHT","DIALOG_MAX_WIDTH","ORDINAL","KEYS","KEY_ENTER","KEY_LEFT","KEY_RIGHT","KEY_D","KEY_N","KEY_R","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F10","KEY_F11","KEY_F12","NO_CHANGE","FLG_SUFFIX","SHCtlPopupDialogComponent","dialogRef","displayedColumns","name","uniqueStr","init","dataTitle","cols","getHashKeys","forEach","idx","hiddenColumns","find","ngAfterViewChecked","headerElement","getElementsByTagName","countBlank","codesHeader","style","display","colSpan","textAlign","j","closeDialog","close","selectCode","unchangeableCodes","filter","resultArray","fileterStrArray","concat","this_1","values","codes","MatDialogRef","Inject","MAT_DIALOG_DATA","SHFormPopup","SmplPopupService","dialog","bindCtlService","lockScreenService","dataKbnName","apiUrl","bindColumnKey","bindColumnValue","hiddenInput","hiddenLabel","hiddenPopupButton","dataCache","extendWidth","initFetchFlg","noChangeFlg","isBusy","defineProperty","popupLabelName","noChangeFlgChange","setInputWidth","width","setLabelWidth","previousValue","fetchCodes","firstChange","isBindInputNull","bindColumnArray","getMasterData","setName","popupWidth","fetchAll","response","header","url","lockScreen","blur","catch","unlock","ok","checkValue","setMasterData","openDialog","tmp","open","height","afterClosed","subscribe","setValueName","setNoChangeFlg","record","setBindValue","resultValues","dispatchOwnValueInputChangeEvent","ownValueInputElm","bindColumnData","bindInput","clearAll","ownLabelInputElm","flg","filterResult","element","alert","getCodes","componentInstance","updateSize","cols_1","cols_2","matchedArray","val","hasMatchRecords","searchs","bindIndex","targetInput","kbnValue","extractBindValue","ShCtlApiService","apiComService","getApplicationData","apiResponseBody","applicationData","get","ret","post","put","delete","ShHttpClientService","popupCdSubject","Subject","popupCdState","asObservable","masterCache","masterName","masterData","tslib_1.__values","_c","NoChangeFlg","BindCtlService","NO_CHANGE_FLG_SUFFIX","param","isParamEmpty","generateBindInputInfo","column","LockScreenService","isConnecting","isConnectingSubject","isConnectingState","count","SHCtlJigCodeComponent","smplPopupService","jigCode","strNo","MatDialog","SHCtlPopupDialogMultiComponent","selection","SelectionModel","row","itemSelect","isItemSelected","itemToggle","keys_1","selected","isSame","uniqueColumns","deselect","returnDialog","isAllSelected","masterToggle","clear","checkboxLabel","isSelected","position","SHCtlJyuCodeComponent","enabledHalfKanaInput","rawCodes","rawCodesArray","contactCode","inputElement_1","onKeyUp","toHankaku","hiraganaToKatagana","chr","half","halfArr","full","fullArr","oneStr","charAt","SHCtlKatakanaComponent","onPaste","replaceFullWIdth","SHCtlNumberComponent","decimaldigit","firstFlag","matInputElement","activeElement","classList","contains","parseFloat","toFixed","checkNumbersSigns","test","checkMinus","setMinMax","removeComma","toLocaleString","minimumFractionDigits","maximumFractionDigits","SHCtlSesyuCodeComponent","SHCtlTanCodeComponent","SHCtlTelNoComponent","SHCtlTimeComponent","adjust","isValidateError","errorMessage","isFirst","timeStrage","timecalculation","setCurrentTime","nullFirstString","nullLastString","newDate","getHours","getMinutes","SHCtlTokuCodeComponent","SHCtlWideCharComponent","SHCtlWideCharMLComponent","moment","_moment","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","SHCtlYearMonthComponent","el","FormControl","chosenYearHandler","normalizedYear","chosenMonthHandler","normalizedMonth","datepicker","setValue","yearAndMonth","getYearAndManth","setAttribute","yearAndMonthCalculation","isKeysAllowedToMe","convYear","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MAT_DATE_FORMATS","useValue","ɵ0","ElementRef","SHCtlZipNoComponent","withHyphen","withoutHyphen","inputValue_1","focus","zipcd","SmplKbnCodeService","SHCtlKbnRadioComponent","SmplKbnRadioService","radioContent","displayLabel","throwError","items","kbnCodes","change","changeRadioContent","SHCtlKbnSelectComponent","SmplKbnSelectService","selectContent","hiddenClearButton","changeSelectContent","ShCtlPopupComponent","ShCtlPopupMultiComponent","ShCtlValidatedErrorComponent","validationErrorService","isError","subscription","validationErrorState","show","errors","meesages","controlName","arguments","__spread","ngOnDestroy","unsubscribe","ValidationErrorService","SHCtlHalfNumberComponent","SHCtlCheckComponent","checkedLabel","beforeAlign","checkedValue","uncheckedValue","setLabelPosition","checked","SHCtlLockScreenComponent","NgDateValuePipe","transform","Pipe","ShFlexRowDirective","flexFlow","boxSizing","margin","Directive","ShFlexDirective","colLg","ctlLgFlex","ctlLgMaxWidth","colMd","ctlMdFlex","ctlMdMaxWidth","colSm","ctlSmFlex","ctlSmMaxWidth","mediaSm","mediaMd","ctlWidth","ctlBoxSizing","ctlPadding","initParam","initStyle","window","sm","matchMedia","md","matches","smStyleInit","mdStyleInit","defaultStyleInit","flex","maxWidth","ShReadOnlyDirective","isReadOnly","addAttribute","qs","querySelectorAll","qs_1","qs_1_1","readOnly","qs_2","qs_2_1","qs_3","qs_3_1","ShCtlStateDirective","addShCtlStateClass","className","startsWith","remove","add","qsOnlyField","qsOnlyField_1","qsOnlyField_1_1","ShCtlCommonModule","NgModule","declarations","entryComponents","imports","FormsModule","CommonModule","MatInputModule","MatFormFieldModule","ReactiveFormsModule","MatDialogModule","MatTableModule","MatButtonModule","MatButtonToggleModule","MatRadioModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatIconModule","MatCheckboxModule","MatProgressSpinnerModule","ShHttpClient","exports","ShAppComponent","redirectService","redirect","keyValidation","setToekn","redirectPath","params","URLSearchParams","location","search","token","sessionStorage","setItem","ShHttpClientConst","AUTHORIZATION_TOKEN","history","pushState","pathname","isTargetElement","elm","type","opacity","shctl","getShCtlElement","checkShCtlAttr","attributes","targets","getNamedItem","parent","parentElement","tagName","onkeydown","altKey","metaKey","input","nodeList","filteredInput","from","preInput","cur_input","ShFormControlType","_ctlName"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, ViewEncapsulation } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SHCtlCommon {\r\n\r\n  public static readonly Const = {\r\n    keyCodes: {\r\n      numerics: { min: 48, max: 57 }, // åè§1 to 0\r\n      tenKeyNumerics: { min: 96, max: 105 }, // ãã³ã­ã¼ã®åè§0 to 9\r\n      enter: 13, // ã¨ã³ã¿ã¼\r\n      chars: { min: 65, max: 90 }, // åè§a to z\r\n      space: 32, // åè§ã¹ãã¼ã¹\r\n      wideChara: 229, // å¨è§\r\n      okCharas: {\r\n        \"65\": \"a\", \"67\": \"c\", \"86\": \"v\", \"88\": \"x\", \"90\": \"z\"\r\n      }, // Ctrlã¨ã®çµã¿åãã\r\n      signs: { // åè§è¨å·\r\n        \"186\": \":\", \"187\": \";\", \"188\": \",\", \"189\": \"-\", \"190\": \".\", \"191\": \"/\",\r\n        \"192\": \"@\", \"219\": \"[\", \"220\": \"\\\\\", \"221\": \"]\", \"222\": \"^\", \"226\": \"_\",\r\n        \"111\": \"/\", \"106\": \"*\", \"109\": \"-\", \"107\": \"+\", \"110\": \".\" // ãã³ã­ã¼ã®å\r\n      },\r\n      minus: [109, 189], // åè§ãã¤ãã¹(ãã¤ãã³)\r\n      dot: [110, 190], // åè§ããã\r\n      slash: [111, 191], // åè§ã¹ã©ãã·ã¥\r\n      plus: [107, 187], // ãã©ã¹\r\n    },\r\n    state: {\r\n      none: 'none',\r\n      danger: 'danger',\r\n      warning: 'warning',\r\n      success: 'success',\r\n    },\r\n    timeFormat: {\r\n      HH: 3600,\r\n      HHMM: 60,\r\n      HHMMSS: 1,\r\n    }\r\n  }\r\n\r\n  private static signs: string = \"[\\\\\\\\!\\\"#$%&'()\\*\\+\\-\\.,\\/:;<=>?@\\[\\]^_`{|}~]\";\r\n  /**\r\n   * æå®ãããã©ã¼ãããã§Dateãstringã«å¤æ\r\n   * @param date \r\n   * @param format \r\n   */\r\n  public static getDateStr(date: Date, format: string): string {\r\n    format = format.replace(/YYYY/g, date.getFullYear().toString());\r\n    format = format.replace(/MM/g, ('0' + (date.getMonth() + 1).toString()).slice(-2).toString());\r\n    format = format.replace(/dd/g, ('0' + date.getDate()).slice(-2).toString())\r\n    return format\r\n  }\r\n  /**\r\n   * ä¸­èº«ãç©ºãã©ããã®å¤å®\r\n   * @param obj \r\n   */\r\n  public static isBlank(obj: any): boolean {\r\n    if (obj === undefined) return true;\r\n    if (obj === null) return true;\r\n    if (typeof (obj) === \"string\" && obj === \"\") return true;\r\n    if (typeof (obj) === \"object\" && (obj.length !== undefined && obj.length <= 0)) return true;\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããå¤ã¾ãã¯0ã§ããã£ã³ã°ãã\r\n   * @param num ããã£ã³ã°å¯¾è±¡å¤\r\n   * @param lengthãå¤ã®é·ã\r\n   * @param option ä½ã§ããã£ã³ã°ãããã\r\n   */\r\n  public static padding(num: any, length: number, option?: any) {\r\n    //æå®ããªããã°0\r\n    option = option || \"0\";\r\n    //æ°å¤åã«å¤æ\r\n    num = Number(num);\r\n    //æ°å¤ã§ãªããã°nullãè¿ã\r\n    if (isNaN(num)) return null;\r\n\r\n    return (Array(length).join(option) + num).slice(-length);\r\n\r\n  }\r\n\r\n  /**\r\n   * æ¹è¡ã®åé¤\r\n   * @param strãæ¹è¡åé¤ãããæå­å\r\n   */\r\n  public static LineBreak(str: string) {\r\n    let tmp = str.replace(/\\r?\\n/g, \"\")\r\n    return tmp;\r\n\r\n  }\r\n\r\n  /*********************************************************\r\n   * æ°:å¥åãã§ãã¯ \r\n   * ********************************************************/\r\n  /**\r\n   * å¨è§å¥åãã§ãã¯\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceFullWidth(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, '');\r\n\r\n  }\r\n\r\n  /**\r\n   * åè§å¥åãã§ãã¯\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceHalfChar(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.match( /[ -~ï½¡-ï¾]+/g)\r\n  }\r\n\r\n  /**\r\n  * æ°å¤å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceNumeric(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/\\d*/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(åè§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceSpace(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ /g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(åè§)â(å¨è§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceHalfSpaceToFull(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ /g, \"ã\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã¹ãã¼ã¹å¥åãã§ãã¯(å¨è§)\r\n   * @param event inputã¤ãã³ã\r\n   */\r\n  public static replaceFUllSpace(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/ã/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n  * ã¢ã«ãã¡ãããå¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceHalfWidth(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(/[a-zA-Z]/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n  * è¨å·å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  * @param exclusionValue å¥åãè¨±å®¹ãããè¨å·ã®éå\r\n  */\r\n  public static replaceSign(event: any, exclusionValue?: string[]) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(new RegExp(SHCtlCommon.getRestrictedSign(exclusionValue), \"g\"), \"\");\r\n\r\n  }\r\n\r\n /**\r\n  * å¨è§ããã«ã¯ã©ã¼ãã¼ã·ã§ã³å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceFullDoubleQuote(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(\"â\", \"ï¼\");\r\n\r\n  }\r\n\r\n /**\r\n  * åè§ããã«ã¯ã©ã¼ãã¼ã·ã§ã³å¥åãã§ãã¯\r\n  * @param event inputã¤ãã³ã\r\n  */\r\n  public static replaceHalfDoubleQuote(event: any) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.replace(\"\\\"\", \"ï¾\");\r\n\r\n  }\r\n\r\n /**\r\n  * ãã©ã¼ãããè¨­å®\r\n  * @param inputTargetValue event.target.value\r\n  */\r\n  public static replaceHalf(event:any) {\r\n    event.target.value = event.target.value.replace(/[A-Za-z0-9-!\"#$%&'()=<>,.?_\\[\\]|{}@`^~\\\\/+;*:}]/g, function (inputTargetValue) {\r\n      return String.fromCharCode(inputTargetValue.charCodeAt(0) + 65248);\r\n    });\r\n    return event.target.value;\r\n  }\r\n\r\n/**\r\n * ãã©ã¼ãããè¨­å®\r\n * @param inputTargetValue event.target.value\r\n */\r\n public static replaceHalfKana(event:any) {\r\n  let kanaMap = {\r\n    'ï½¶ï¾': 'ã¬', 'ï½·ï¾': 'ã®', 'ï½¸ï¾': 'ã°', 'ï½¹ï¾': 'ã²', 'ï½ºï¾': 'ã´',\r\n    'ï½»ï¾': 'ã¶', 'ï½¼ï¾': 'ã¸', 'ï½½ï¾': 'ãº', 'ï½¾ï¾': 'ã¼', 'ï½¿ï¾': 'ã¾',\r\n    'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã',\r\n    'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã',\r\n    'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã', 'ï¾ï¾': 'ã',\r\n    'ï½³ï¾': 'ã´', 'ï¾ï¾': 'ã·', 'ï½¦ï¾': 'ãº',\r\n    'ï½±': 'ã¢', 'ï½²': 'ã¤', 'ï½³': 'ã¦', 'ï½´': 'ã¨', 'ï½µ': 'ãª',\r\n    'ï½¶': 'ã«', 'ï½·': 'ã­', 'ï½¸': 'ã¯', 'ï½¹': 'ã±', 'ï½º': 'ã³',\r\n    'ï½»': 'ãµ', 'ï½¼': 'ã·', 'ï½½': 'ã¹', 'ï½¾': 'ã»', 'ï½¿': 'ã½',\r\n    'ï¾': 'ã¿', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã',\r\n    'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã',\r\n    'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã',\r\n    'ï¾': 'ã', 'ï¾': 'ã', 'ï¾': 'ã ', 'ï¾': 'ã¡', 'ï¾': 'ã¢',\r\n    'ï¾': 'ã¤', 'ï¾': 'ã¦', 'ï¾': 'ã¨',\r\n    'ï¾': 'ã©', 'ï¾': 'ãª', 'ï¾': 'ã«', 'ï¾': 'ã¬', 'ï¾': 'ã­',\r\n    'ï¾': 'ã¯', 'ï½¦': 'ã²', 'ï¾': 'ã³',\r\n    'ï½§': 'ã¡', 'ï½¨': 'ã£', 'ï½©': 'ã¥', 'ï½ª': 'ã§', 'ï½«': 'ã©',\r\n    'ï½¯': 'ã', 'ï½¬': 'ã£', 'ï½­': 'ã¥', 'ï½®': 'ã§'\r\n  };\r\n\r\n  let reg = new RegExp('[' + Object.keys(kanaMap) + ']', 'g');\r\n\r\n  return event.target.value = event.target.value.replace(reg, match => {\r\n    return kanaMap[match]\r\n  });\r\n\r\n}\r\n\r\n  /**\r\n   * inputå¤ã®å¥åæå­æ°å¶é\r\n   * @param event inputã¤ãã³ã\r\n   * @param maxlength å¥åå¶éæå­æ°\r\n   */\r\n  public static sliceLength(event: any, maxlength: number) {\r\n    if (!event) return;\r\n    event.target.value = event.target.value.slice(0, maxlength);\r\n\r\n  }\r\n\r\n  /**\r\n   * å¥åå¶éè¨å·ã®åå¾\r\n   * @param exclusionValue å¥åå¯è½æå­ã®éå\r\n   */\r\n  private static getRestrictedSign(exclusionValue: string[]): string {\r\n    if (exclusionValue === undefined || exclusionValue.length === 0) return SHCtlCommon.exclude();\r\n    return SHCtlCommon.exclude(exclusionValue);\r\n\r\n  }\r\n\r\n  /**\r\n   * itemãæ¡ä»¶ã«é©ãã¦ãããªãtrueãè¿ã \r\n   * @param item \r\n   */\r\n  public static needsEscape(item) {\r\n    if (item === \".\" || item === \"*\" || item === \"-\" || item === \"+\" || item === \"[\" || item === \"]\") return true;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * itemã®åã«ããã«ããã¯ã¹ã©ãã·ã¥ä»ä¸ãã \r\n   * @param item \r\n   */\r\n  public static escapeByBackSlash(item) {\r\n    const escapedValue = \"\\\\\" + item;\r\n    return escapedValue;\r\n  }\r\n\r\n  /**\r\n   * å¥åä¸å¯å¯¾è±¡ã®è¨å·ããæå®ããæå­åãé¤å¤ãã\r\n   * \"+\" \".\" ãªã©ã¨ã¹ã±ã¼ããå¿è¦ãªæå­ã«ã¯ã\"\\\"ãã¤ãããex\"\\+\" \r\n   * @param exclusionValue å¥åå¯è½æå­ã®éå\r\n   */\r\n  private static exclude(exclusionValue?: string[]): string {\r\n    let excludeIndex = null;\r\n    let signsList = this.signs.split(\"\");\r\n    signsList.map((item, index, array) => {\r\n      if (exclusionValue !== undefined) excludeIndex = exclusionValue.indexOf(item);\r\n      if (excludeIndex !== -1 && excludeIndex !== null) array[index] = \"\";\r\n      if (array[index] !== \"\" && index !== 0 && index !== signsList.length - 1) {\r\n        if (this.needsEscape(item)) array[index] = this.escapeByBackSlash(item);\r\n      }\r\n    })\r\n    return signsList.join(\"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ã«ã¹ã¿ã ã³ã³ãã­ã¼ã«ã³ã³ãã¼ãã³ãåã®è¦ç´ åéè¤ãé¿ããããã®ã¦ãã¼ã¯ã­ã¼\r\n   * ã«ã¹ã¿ã ã³ã³ãã­ã¼ã«1ã¤ã«å¯¾ã1ã¤æã¤\r\n  */\r\n  public static getUniqueStr() {\r\n    return \"uk-\" + Math.random().toString(36).slice(-8);\r\n\r\n  }\r\n\r\n  /**\r\n  * å¾æ¥­å¡ã³ã¼ãã®å¤æ(6æ¡â8æ¡)\r\n  * @param s ã³ã¼ãæå­å\r\n  * @return å¤æå¾ã®ã³ã¼ãæå­å\r\n  */\r\n  public static convJyuCode6To8(s: String): String {\r\n    // ãã©ã³ã¯ãªã\r\n    if (this.isBlank(s)) return '';\r\n    // 6æ¡ä»¥å¤å¦çããªã\r\n    if (s.trim().length != 6 && !isNaN(parseInt(s.toString()))) return s;\r\n\r\n    let sJyuCode = s;\r\n    let result = '00';\r\n\r\n    if (((sJyuCode == '922222') || (sJyuCode == '933333') ||\r\n      (sJyuCode == '944444') || (sJyuCode == '955555') ||\r\n      (sJyuCode == '966666') || (sJyuCode == '977777') ||\r\n      (sJyuCode == '988888')) || ((sJyuCode >= '999000') && (sJyuCode <= '999999'))) {\r\n\r\n      result = '99' + sJyuCode;\r\n    } else {\r\n      let strCd = sJyuCode.substr(0, 1).toUpperCase();\r\n      sJyuCode = sJyuCode.replace(/[c|k|s]/g, '');\r\n      if (strCd == 'C' || strCd == 'S') {\r\n        //å·¦1æå­ã[C]ã[S]ã®ã¨ã\r\n        let subNumber = sJyuCode.substr(2, 2);\r\n        //å·¦ã«æå­ç®ããèªåå«ãï¼æå­ç®ãã\r\n        if (Number(subNumber) >= 0 && Number(subNumber) <= 49) {\r\n          //>= 0 ããã³ã <=49 ã®å ´å\r\n          result = '20' + sJyuCode;\r\n        } else {\r\n          //>= 0 ããã³ã <=49 ã§ãªãå ´å\r\n          result = '19' + sJyuCode;\r\n        }\r\n      } else if (strCd == 'K') {\r\n        //å·¦1æå­ã[C]ã[S]ã®ã¨ãã§ãªã[K]ã®å ´å\r\n        result = '00' + sJyuCode;\r\n      } else {\r\n        //å·¦1æå­ãä¸è¨ä»¥å¤\r\n        let rStr = sJyuCode.substr(-2, 2);\r\n        //å·¦ï¼æå­ã\r\n        if (Number(rStr) >= 0 && Number(rStr) <= 43) {\r\n          //     >= 0 åã³ã<= 43 ã®å ´å\r\n          result = '20' + sJyuCode;\r\n        } else {\r\n          //>= 0 åã³ã<= 43 ã§ãªãå ´å\r\n          result = '19' + sJyuCode;\r\n        }\r\n      }\r\n    }\r\n    // æ´å½¢æå­è¿å´\r\n    return result;\r\n\r\n  }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: `root`,\r\n})\r\nexport class MaxByteLengthService {\r\n  private static readonly allowKeys: string[] = [\"ArrowRight\", \"ArrowLeft\", \"Backspace\", \"ArrowDown\", \"ArrowUp\"];\r\n  private static readonly allowCodes: string[] = [\"Enter\", \"Tab\"];\r\n  private static readonly allowWithCtlKey: string[] = [\"a\", \"Home\", \"End\"];\r\n  private static readonly allowWithShiftKey: string[] = [\"Home\", \"End\"];\r\n  constructor() {}\r\n\r\n  public generateByteInfo(value: string) {\r\n    var length = 0;\r\n    let bytes = [];\r\n    if (!value) return { length, bytes };\r\n    for (var i = 0; i < value.length; i++) {\r\n      var c = value.charCodeAt(i);\r\n      if (\r\n        (c >= 0x0 && c < 0x81) ||\r\n        c === 0xf8f0 ||\r\n        (c >= 0xff61 && c < 0xffa0) ||\r\n        (c >= 0xf8f1 && c < 0xf8f4)\r\n      ) {\r\n        length += 1;\r\n        bytes.push(1);\r\n      } else {\r\n        length += 2;\r\n        bytes.push(2);\r\n      }\r\n    }\r\n    return { length, bytes };\r\n  }\r\n\r\n  public calcMaxLength(bytes: number[], maxBytelength: number, total: number = 0) {\r\n    let i: number;\r\n    for (i = 0; i < bytes.length; i++) {\r\n      total += bytes[i];\r\n      if (total >= maxBytelength) {\r\n        break;\r\n      }\r\n    }\r\n    return (total - maxBytelength) > 0 ? i : i + 1;\r\n  }\r\n  public static isAllowOperation(e: KeyboardEvent) {\r\n    if (e.ctrlKey && MaxByteLengthService.isAllowWithCtlKey(e.key)) return true;\r\n    if (e.shiftKey && MaxByteLengthService.isAllowWithShiftKey(e.key)) return true;\r\n    if (MaxByteLengthService.isAllowCodes(e.code)) return true;\r\n    if(MaxByteLengthService.isAllowKey(e.key)) return true;\r\n    return false;\r\n  }\r\n  public static isAllowKey(key: string) {\r\n    if (MaxByteLengthService.allowKeys.includes(key)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowCodes(code: string) {\r\n    if (MaxByteLengthService.allowCodes.includes(code)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowWithCtlKey(key: string) {\r\n    if (MaxByteLengthService.allowWithCtlKey.includes(key)) return true;\r\n    return false;\r\n  }\r\n  private static isAllowWithShiftKey(key: string) {\r\n    if (MaxByteLengthService.allowWithShiftKey.includes(key)) return true;\r\n    return false;\r\n  }\r\n}\r\n","import { MaxByteLengthService } from \"../services/max-bytelength.service\";\r\n\r\nexport class MaxByteLengthHistory {\r\n  private cache: string;\r\n  private startPoint: number;\r\n  private enterableBytes: number = 0;\r\n  private maxByteLength: number;\r\n  private service: MaxByteLengthService = new MaxByteLengthService();\r\n  constructor(value: string, startPoint: number, maxByteLength: number) {\r\n    this.cache = value;\r\n    this.startPoint = value.length == 1 && startPoint == 1 ? 0 : startPoint;\r\n    this.maxByteLength = maxByteLength;\r\n  }\r\n  public static isAllowOperation(e: KeyboardEvent) {\r\n    return MaxByteLengthService.isAllowOperation(e);\r\n  }\r\n  /**\r\n   *@ enterableBytesãæ¸ãæãã¾ã\r\n   */\r\n  public changeEnterableBytes(value: string) {\r\n    const info = this.service.generateByteInfo(value);\r\n    const entarableByte = this.maxByteLength - info.length;\r\n    this.enterableBytes = entarableByte >= 0 ? entarableByte : 0;\r\n  }\r\n  /**\r\n   *@ æ®ãã®å¥åå¯è½byteæ°ãè¿ã\r\n   */\r\n  public getEnterableBytes() {\r\n    return this.enterableBytes;\r\n  }\r\n  /**\r\n   *@ inputã«ã»ããããå¤ãè¿ã \r\n   */\r\n  public getResult(data: string, value: string) {\r\n    if (!value) return \"\";\r\n    // // è¨±å®¹ãã¤ãæ°ãã¾ã ããæ\r\n    if (this.enterableBytes) return value;\r\n    if (this.startPoint === 0) {\r\n      const { bytes } = this.service.generateByteInfo(value);\r\n      const maxByteLength = this.service.calcMaxLength(\r\n        bytes,\r\n        this.maxByteLength\r\n      );\r\n      return value.substr(0, maxByteLength);\r\n    }\r\n    const { bytes } = this.service.generateByteInfo(data);\r\n    const { length } = this.service.generateByteInfo(this.cache);\r\n    const len = this.service.calcMaxLength(bytes, this.maxByteLength, length);\r\n    const insertStr = data.substr(0, len);\r\n    const h = this.cache.substr(0, this.startPoint);\r\n    const f = this.cache.substring(this.startPoint);\r\n    return h + insertStr + f;\r\n  }\r\n  /**\r\n   *ã¢ã«ãã¡ããããæ°å­ã®å¥åæã«æ¨æºã®maxlengthã«è¨­å®ããããã®å¤ãè¿ã\r\n   */\r\n  public getMaxLength(value) {\r\n    const { bytes } = this.service.generateByteInfo(value);\r\n    return this.service.calcMaxLength(\r\n        bytes,\r\n        this.maxByteLength\r\n      );\r\n  }\r\n  /**\r\n   *ãããã°ç¨\r\n   */\r\n  public toString() {\r\n    return JSON.stringify({\r\n      cache: this.cache,\r\n      startPoint: this.startPoint,\r\n      enterableBytes: this.enterableBytes,\r\n      maxByteLength: this.maxByteLength,\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from '../components/sh-ctl-common';\r\nimport { MaxByteLengthHistory } from \"./MaxByteLengthHistory\";\r\n\r\nexport class SHFormControl<T> {\r\n  //è¦ç´ ã³ã³ãã­ã¼ã«å\r\n  @Input() public ctlName: string = \"SHFormControl\";\r\n  //è¡¨ç¤ºã¬ã¤ã¢ã¦ãåãæ¿ããã©ã°(true:é²è¦§å°ç¨/false:ç·¨éå¯è½)\r\n  @Input() public isDisabled: boolean = false;\r\n  //å¤ãã¤ã³ãå¤æ°\r\n  @Input() public value: T = null;\r\n  //ã¿ã¤ãã«å\r\n  @Input() public title = \" \";\r\n  //ã³ã³ãã­ã¼ã«æå(auto/always/nevwer)\r\n  @Input() public floatLabel = \"auto\";\r\n  //é²è¦§å°ç¨ç»é¢ã§ã®ã©ãã«å¹(px)\r\n  @Input() public labelWidth = \"150\";\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åæå­æ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  @Input() public maxlength: number;\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åbyteæ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  @Input() public maxByteLength: number;\r\n  //inputè¦ç´ ã«å¯¾ããstyleã®æå®(å½¢å¼ï¼{ color: \"red\" })\r\n  @Input() public styles: any = {};\r\n  //inputè¦ç´ ã«å¯¾ããclassã®æå®(å½¢å¼ï¼{ \"className\": true } or \"className className2\")\r\n  @Input() public classes: any = {};\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  @Input() public required: boolean = false;\r\n  //inputè¦ç´ ã«å¯¾ããç¶æã®æå®\r\n  @Input() public state: string = \"\";\r\n  //inputè¦ç´ ã«å¯¾ããæè¨ã®æå®\r\n  @Input() public message: string[] = [\"\"];\r\n  //radio,selectã«å¯¾ããééä¿¡ç¨ãã¼ã¿ã®åãæ¸¡ã\r\n  @Input() public items: any[];\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  @Input() public disabled: boolean = false;\r\n\r\n  //å¤ãã¤ã³ãçµæã®è¿å´ãæã\r\n  @Output() public valueChange = new EventEmitter();\r\n\r\n  //BeforeClickã¤ãã³ãè¿å´\r\n  @Output() public beforeClick = new EventEmitter();\r\n  //AfterClickã¤ãã³ãè¿å´\r\n  @Output() public afterClick = new EventEmitter();\r\n  //BeforeFocusã¤ãã³ãè¿å´\r\n  @Output() public beforeFocus = new EventEmitter();\r\n  //AfterFocusã¤ãã³ãè¿å´\r\n  @Output() public afterFocus = new EventEmitter();\r\n  //BeforeBlurã¤ãã³ãè¿å´\r\n  @Output() public beforeBlur = new EventEmitter();\r\n  //AfterBlurã¤ãã³ãè¿å´\r\n  @Output() public afterBlur = new EventEmitter();\r\n  //BeforeChangeã¤ãã³ãè¿å´\r\n  @Output() public beforeChange = new EventEmitter();\r\n  //AfterChangeã¤ãã³ãè¿å´\r\n  @Output() public afterChange = new EventEmitter();\r\n  @ViewChild(`inputElm`, { static: false }) selfInputElm: ElementRef<HTMLInputElement>;\r\n\r\n  public objClass: object = {};\r\n  public strClass: string = \"\";\r\n  public isComp = false;\r\n  public array: any[] = [];\r\n  public maxByteLengthHistory: MaxByteLengthHistory;\r\n  \r\n  //forcusã®ä¿æå¤æ°\r\n  public isfocused: boolean = false;\r\n\r\n  @Input() public onlyField: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  public onInit() {\r\n    //ã¯ã©ã¹ã®æå®æ¹æ³ã«ãã£ã¦åå²ãã\r\n    if (typeof this.classes === \"string\") {\r\n      this.strClass = this.classes;\r\n      this.objClass = null;\r\n    } else {\r\n      this.strClass = \"\";\r\n      this.objClass = this.classes;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {}\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event keydown\r\n   */\r\n  public onKeyDown(event) {}\r\n\r\n  \r\n  ngAfterViewInit() {\r\n    if (!this.maxByteLength) return;\r\n    if (this.selfInputElm) {\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"keydown\",\r\n        this.handleKeydown.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"input\",\r\n        this.handleInput.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"compositionstart\",\r\n        this.handleCompositionStart.bind(this)\r\n      );\r\n      this.selfInputElm.nativeElement.addEventListener(\r\n        \"compositionend\",\r\n        this.handleCompositionEnd.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   *maxByteLengthã®å¶å¾¡\r\n   */\r\n  protected handleKeydown(e) {\r\n    if (!this.maxByteLength) return;\r\n    const value = e.target.value;\r\n    if (\r\n      value &&\r\n      !this.maxByteLengthHistory &&\r\n      !MaxByteLengthHistory.isAllowOperation(e)\r\n    ) {\r\n      this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   *@ ãã¨ä½byteè¨±å®¹ã§ããããæ´æ°\r\n   */\r\n  protected handleInput(e) {\r\n    if (!this.maxByteLength) return;\r\n    this.maxlength = undefined;\r\n    if(!this.maxByteLengthHistory && e.target.value) {\r\n      this.maxByteLengthHistory = this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        e.target.value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }\r\n    if (this.maxByteLengthHistory) {\r\n      this.maxByteLengthHistory.changeEnterableBytes(e.target.value);\r\n      if (!this.maxByteLengthHistory.getEnterableBytes() && !this.isComp) {\r\n        const maxLen = this.maxByteLengthHistory.getMaxLength(e.target.value);\r\n        this.maxlength = maxLen;\r\n        if(e.target.value.length > maxLen) {\r\n          e.target.value = e.target.value.substr(0, maxLen)\r\n          this.valueChange.emit(e.target.value)\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  protected handleCompositionStart(e) {\r\n    if (!this.maxByteLength) return;\r\n    this.isComp = true;\r\n    this.maxlength = undefined;\r\n    if(e.target.value) {\r\n      this.maxByteLengthHistory = this.maxByteLengthHistory = new MaxByteLengthHistory(\r\n        e.target.value,\r\n        this.selfInputElm.nativeElement.selectionStart,\r\n        this.maxByteLength\r\n      );\r\n    }else {\r\n      this.isComp = false;\r\n    }\r\n  }\r\n  protected handleCompositionEnd(e) {\r\n    if (!this.maxByteLength) return;\r\n    const result = this.maxByteLengthHistory.getResult(\r\n      e.data,\r\n      e.target.value.replace(/\\n/g, '##')\r\n    ).replace(/##/g, '\\n');\r\n    e.target.value = result;\r\n    this.valueChange.emit(result);\r\n    this.maxByteLengthHistory = null;\r\n    this.isComp = false;\r\n  }\r\n  /**\r\n   * onFocusin\r\n   * @param event focusin\r\n   */\r\n  public onFocusin(event) {\r\n    this.isfocused = true;\r\n  }\r\n\r\n  /**\r\n   * onFocusout\r\n   * @param event focusout\r\n   */\r\n  public onFocusout(event) {\r\n    this.isfocused = false;\r\n    setTimeout(() => {\r\n      if (!this.isfocused) this.onBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * clickClearButton\r\n   * @param event keydown\r\n   */\r\n  public clickClearButton(event) {\r\n    if (event.keyCode == SHCtlCommon.Const.keyCodes.enter ||\r\n      event.keyCode == SHCtlCommon.Const.keyCodes.space )\r\n    {\r\n      //ã¨ã³ã¿ã¼ã­ã¼ã§å¥ã³ã³ãã­ã¼ã«ã«ãã©ã¼ã«ã¹ãç§»åããªãããã«ãã©ã¼ã«ã¹ãå½ã¦ç´ã\r\n      setTimeout(() => {\r\n        let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n        inputValue.dispatchEvent(new Event('focus'));          \r\n      }, 0);\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    event.target.select();\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {}\r\n\r\n  /**\r\n   * onBeforeClick\r\n   * @param event\r\n   */\r\n  public onBeforeClick(event) {\r\n    this.beforeClick.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterClick\r\n   * @param event\r\n   */\r\n  public onAfterClick(event) {\r\n    this.afterClick.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeFocus\r\n   * @param event\r\n   */\r\n  public onBeforeFocus(event) {\r\n    this.beforeFocus.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterFocus\r\n   * @param event\r\n   */\r\n  public onAfterFocus(event) {\r\n    this.afterFocus.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeBlur\r\n   * @param event\r\n   */\r\n  public onBeforeBlur(event) {\r\n    this.beforeBlur.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterBlur\r\n   * @param event\r\n   */\r\n  public onAfterBlur(event) {\r\n    this.afterBlur.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onBeforeChange\r\n   * @param event\r\n   */\r\n  public onBeforeChange(event) {\r\n    this.beforeChange.emit(event);\r\n  }\r\n\r\n  /**\r\n   * onAfterChange\r\n   * @param event\r\n   */\r\n  public onAfterChange(event) {\r\n    this.afterChange.emit(event);\r\n  }\r\n\r\n  /**\r\n   * å¤ã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = null;\r\n    let inputValue = <HTMLInputElement>(\r\n      document.querySelector(\r\n        `textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`\r\n      )\r\n    );\r\n    //ã¿ã¤ãã³ã°ãéãããªãã¨changeã¤ãã³ãåã®event.target.valueãåã®å¤ã«ãªã\r\n    setTimeout(function(){\r\n      inputValue.dispatchEvent(new Event('change'));\r\n      inputValue.dispatchEvent(new Event('focus'));\r\n    },10);   \r\n\r\n  }\r\n}\r\n","import { Component, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-all-char\",\r\n  templateUrl: \"./sh-ctl-all-char.component.html\",\r\n  styleUrls: [\"./sh-ctl-all-char.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlAllCharComponent\r\n  extends SHFormControl<string>\r\n  implements OnInit {\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data = \"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlAllChar\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = this._data == event.data;\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if (event.isComposing && (!event.isComposing || !isSameData)) return;\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    SHCtlCommon.replaceFullDoubleQuote(event);\r\n    SHCtlCommon.replaceHalfDoubleQuote(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterChange(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = SHCtlCommon.LineBreak(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    event.target.value = SHCtlCommon.LineBreak(event.target.value);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-all-char-ml\",\r\n  templateUrl: \"./sh-ctl-all-char-ml.component.html\",\r\n  styleUrls: [\"./sh-ctl-all-char-ml.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlAllCharMLComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlAllCharML\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    SHCtlCommon.replaceFullDoubleQuote(event);\r\n    SHCtlCommon.replaceHalfDoubleQuote(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (this.value == undefined) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return false;\r\n    }\r\n    this.value = String(this.value);\r\n    this.value = this.value.trim();\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-bunj-no',\r\n  templateUrl: './sh-ctl-bunj-no.component.html',\r\n  styleUrls: ['./sh-ctl-bunj-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlBunjNoComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlBunjNo\";\r\n    this.maxlength = 9;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value)\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ã¼ã­ããã£ã³ã°\r\n   * @param inputValue inputã®å¤\r\n   */\r\n  public toText(inputValue: string): string {\r\n    // ãã©ã³ã¯ãªã\r\n    if (SHCtlCommon.isBlank(inputValue)) return \"\";\r\n    if (inputValue.length > 9) return inputValue;\r\n    inputValue = inputValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    const result: string = (('00000000' + inputValue).slice(-9));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ã¼ã­ãµãã¬ã¹\r\n   * @param inputValue inputã®å¤\r\n   */\r\n  public toValue(inputValue: string): string {\r\n    if (!inputValue) return \"\";\r\n    return inputValue.replace(/^0*/, \"\");\r\n  }\r\n\r\n}\r\n","import { NativeDateAdapter } from '@angular/material';\r\nimport { SHCtlCommon } from '../../sh-ctl-common';\r\n\r\n/**\r\n * DatePickerã®è¨­å®\r\n */\r\nexport class JpDateAdapter extends NativeDateAdapter {\r\n  /**\r\n   * æ¥ä»è¨­å®\r\n   */\r\n  getDateNames(): string[] {\r\n    const dateNames: string[] = [];\r\n    for (let i = 0; i < 31; i++) {\r\n      dateNames[i] = (i + 1).toString();\r\n    }\r\n    return dateNames;\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããè¨­å®\r\n   * @param date å¥åãããæ¥ä»\r\n   * @param displayFormat ä½¿ç¨ããªããinterfaceã§æå®ãããããå®ç¾©ããæ¶ããªããã¨\r\n   */\r\n  format(date: Date, displayFormat: Object): string{\r\n      if(!date) return '';\r\n      const dateStr = SHCtlCommon.getDateStr(date, 'YYYY-MM-dd');\r\n      return dateStr;\r\n  }\r\n}","import { Component, OnChanges, SimpleChanges, OnInit } from \"@angular/core\";\r\nimport { DateAdapter, NativeDateAdapter } from \"@angular/material\";\r\nimport { JpDateAdapter } from \"./adapter/jpDateAdapter\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-date\",\r\n  templateUrl: \"./sh-ctl-date.component.html\",\r\n  styleUrls: [\"./sh-ctl-date.component.css\", \"../../../style.common.css\"],\r\n  providers: [{ provide: DateAdapter, useClass: JpDateAdapter }]\r\n})\r\nexport class SHCtlDateComponent extends SHFormControl<Date> implements OnInit, OnChanges {\r\n  public stringValue: any;\r\n\r\n  constructor(dataAdapter: DateAdapter<NativeDateAdapter>) {\r\n    super();\r\n    this.ctlName = \"SHCtlDate\";\r\n    dataAdapter.setLocale(\"ja\");\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        const result = this.getfomatedDate(changes.value.currentValue.replace(/\\-/g, '/'));\r\n        this.value = new Date(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null && this.isDisabled) {\r\n      this.stringValue = this.changeFormat(this.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onOpened\r\n   */\r\n  public onOpened() {\r\n    let el = document.querySelector(\"mat-datepicker-content\");\r\n    el.addEventListener(\"focusin\", () => {\r\n      this.isfocused = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * onClosed\r\n   */\r\n  public onClosed() {\r\n    let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n    setTimeout(function(){inputValue.dispatchEvent(new Event('focus'));},0);  \r\n  }\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keyPress\r\n   */\r\n  public onKeypress(event) {\r\n    this.setCurrentDate(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(this.getfomatedDate(event.target.value));\r\n\r\n    setTimeout(() => {\r\n      this.onAfterChange(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * æ¬æ¥æ¥ä»ã®è¨­å®\r\n   */\r\n  public setCurrentDate(event) {\r\n    if (event.key === \"/\") {\r\n      this.value = new Date();\r\n      event.target.value = this.getfomatedDate(this.value).split('/').join('-');\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ä»ãã¼ã¿ã®ãã©ã¼ãããå¤æ´ãè¡ã\r\n   * @param date æ¥ä»ãã¼ã¿\r\n   * @return æ¥ä»æå­å\r\n   */\r\n  private getfomatedDate(date) {\r\n    if (!date) return \"\";\r\n    const toString = Object.prototype.toString;\r\n    if (toString.call(date) == \"[object Date]\") {\r\n      const { year, month, day } = this.paddingDate(date.toLocaleDateString());\r\n      return `${year}/${month}/${day}`;\r\n    } \r\n    else {\r\n      const { year, month, day } = this.paddingDate(date);\r\n      if (date.match(/-/))\r\n        return `${year}/${month}/${day}`;\r\n      else\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ä»æå­åã®å¹´ææ¥åå²ãªãã¸ã§ã¯ããè¿å´ãã\r\n   * @param dateStr æ¥ä»æå­å\r\n   * @return åå²ãªãã¸ã§ã¯ã(year, month, day)\r\n   */\r\n  public paddingDate(dateStr: string) {\r\n    if (!dateStr) return;\r\n    const dateArr = dateStr.split(/[-/]/)\r\n    let year = (Array(4).join(\"0\") + dateArr[0]).slice(-4);\r\n    const month = (Array(2).join('0') + dateArr[1]).slice(-2);\r\n    const day = (Array(2).join('0') + dateArr[2]).slice(-2);\r\n    return { year, month, day }\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value \r\n   */\r\n  public changeFormat(value: Date) {\r\n    if (!value) {\r\n      this.stringValue = \"\";\r\n      return;\r\n    }\r\n    const dataStr = value.toLocaleDateString();\r\n    const result = dataStr.replace('/', \"å¹´\").replace('/', 'æ') + 'æ¥';\r\n    return result;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-half-char',\r\n  templateUrl: './sh-ctl-half-char.component.html',\r\n  styleUrls: ['./sh-ctl-half-char.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlHalfCharComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlHalfChar\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    \r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = !event.target.value ? \"\" : event.target.value; \r\n    event.target.value = event.target.value.replace(/^[^\\x01-\\x7E\\uFF61-\\uFF9F]+$/g, '');\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n}\r\n","export const ShCtlConst = {\r\n  STATUS_OK: 200,\r\n  DIALOG_WIDTH: \"650px\",\r\n  DIALOG_HEIGHT: \"750px\",\r\n  DIALOG_MAX_WIDTH: \"1000px\",\r\n  ORDINAL: {\r\n    KEYS: {\r\n      KEY_ENTER: 13,\r\n      KEY_LEFT: 37,\r\n      KEY_RIGHT: 39,\r\n      KEY_D: 68,\r\n      KEY_N: 78,\r\n      KEY_R: 82,\r\n      KEY_F1: 112,\r\n      KEY_F2: 113,\r\n      KEY_F3: 114,\r\n      KEY_F4: 115,\r\n      KEY_F5: 116,\r\n      KEY_F6: 117,\r\n      KEY_F10: 121,\r\n      KEY_F11: 122,\r\n      KEY_F12: 123\r\n    },\r\n  },\r\n  NO_CHANGE: {\r\n    FLG_SUFFIX: `NO_CHANGE_FLG_SUFFIX`,\r\n  }\r\n};","import { Inject, Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\n\r\ninterface Data {\r\n    dataTitle: string\r\n    hiddenColumns: any\r\n}\r\n@Component({\r\n    selector: 'sh-ctl-popup-dialog',\r\n    templateUrl: 'sh-ctl-popup-dialog.component.html',\r\n    styleUrls: ['sh-ctl-popup-dialog.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlPopupDialogComponent implements OnInit, AfterViewChecked {\r\n    public displayedColumns: string[] = [];\r\n    public name: string = \"\";\r\n    public uniqueStr = \"\";\r\n    public dataTitle: string;\r\n    public codes: any;\r\n    public unchangeableCodes: any;\r\n    public codesHeader: any;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<SHCtlPopupDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: Data,\r\n    ) { }\r\n\r\n    /**\r\n     * å¤ããã¤ã³ããããæã«å¼ã°ãã\r\n     */\r\n    ngOnInit() {\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n    * å¤ã®åæå\r\n    */\r\n    private init() {\r\n        this.dataTitle = this.data.dataTitle;\r\n        let cols = [];\r\n        this.getHashKeys().forEach((name, idx) => {\r\n            if (!this.data.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n        });\r\n        this.displayedColumns = cols;\r\n        this.uniqueStr = SHCtlCommon.getUniqueStr();\r\n    }\r\n\r\n    /**\r\n    * ãã¼ãã«ã®ãããã¼ãç·¨é\r\n    */\r\n    ngAfterViewChecked() {\r\n        let headerElement = document.getElementsByTagName('th')\r\n        let countBlank = 0;\r\n        if (!this.codesHeader) return;\r\n        for (let i = 0; i < headerElement.length; i++) {\r\n            if (this.codesHeader[i] != \"\") {\r\n                for (let e = 1; e <= countBlank; e++) {\r\n                    headerElement[i - e].style.display = 'none';\r\n                }\r\n                countBlank = 0;\r\n            } else if (this.codesHeader[i] === \"\") {\r\n                countBlank += 1;\r\n                headerElement[i - countBlank].colSpan = countBlank + 1;\r\n                headerElement[i - countBlank].style.textAlign = 'center';\r\n                if (i === headerElement.length - 1) {\r\n                    for (let j = 0; j < countBlank; j++) {\r\n                        headerElement[i - j].style.display = 'none';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã\r\n     */\r\n    public closeDialog() {\r\n        this.dialogRef.close()\r\n\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããããé¸æããããã¼ã¿ãè¦ªã«è¿ã\r\n     * @param item äºæ¥­æã³ã¼ãä¸è¦§ããé¸æããã1ã¤\r\n     */\r\n    public selectCode(item: any) {\r\n        //ãã¤ã¢ã­ã°ãéããæã«å¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close(item)\r\n\r\n    }\r\n\r\n    /**\r\n     * ãã¼ã¿ã®keyãè¿ã\r\n     */\r\n    public getHashKeys() {\r\n        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {\r\n            return []; \r\n        } else {\r\n            return Object.keys(this.unchangeableCodes[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããåã§ã®ææ§æ¤ç´¢\r\n     * ã¹ãã¼ã¹åºåãã§1ã­ã¼ã¯ã¼ãã¨ãã\r\n     * @param event inputã¤ãã³ã\r\n     */\r\n    public filter(event) {\r\n        if (!this.unchangeableCodes) return;\r\n        const filterString: string = event.target.value;\r\n        let fileterStrArray = filterString.replace(/ã/g, \" \").split(\" \");\r\n        fileterStrArray = fileterStrArray.filter((value) => {\r\n            return value;\r\n        });\r\n        let resultArray: any[];\r\n        resultArray = this.unchangeableCodes.concat();\r\n        for (let i = 0; i < fileterStrArray.length; i++) {\r\n            let obj = this;\r\n            resultArray = resultArray.filter(function (value: any) {\r\n                let values = Object.values(value)\r\n                for (let j = 0; j < values.length; j++) {\r\n                    if (obj.data.hiddenColumns.find(_ => _ == (j + 1))) continue;\r\n                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        this.codes = resultArray;\r\n    }\r\n}","import { Input, SimpleChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../components/sh-ctl-common\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { SmplPopupService } from \"../services/smpl-popup.service\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material\";\r\nimport { SHFormControl } from \"./ShFormControl\";\r\nimport { SHCtlPopupDialogComponent } from \"../components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { BindCtlService } from \"../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../services/lock-screen.service\";\r\nimport { NoChangeFlg } from \"../types/NoChangeFlg\";\r\n\r\n\r\nexport class SHFormPopup extends SHFormControl<any> {\r\n  //ãã¼ã¿ã¿ã¤ãã«å\r\n  @Input() public dataTitle: string = \"\";\r\n  //ãã¼ã¿åºåå\r\n  @Input() public dataKbnName: string = \"\";\r\n  //API URL\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  //å¥åã³ã³ãã­ã¼ã«ã«ç´ã¥ãåçªå·\r\n  @Input() public bindColumnKey: number = 1;\r\n  //ã©ãã«ã³ã³ãã­ã¼ã«ã«ç´ã¥ãåçªå·\r\n  @Input() public bindColumnValue: number = 2;\r\n  //å¥åã³ã³ãã­ã¼ã«å\r\n  @Input() public ctlName;\r\n  //ã©ãã«ã³ã³ãã­ã¼ã«å\r\n  @Input() public popupLabelName;\r\n  //ä»ã®ã³ã³ãã­ã¼ã«ã¨ã®å¤é£æºãè¨­å®ãã\r\n  @Input() public bindColumnArray: any;\r\n  //å¥åã³ã³ãã­ã¼ã«ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenInput: boolean = false;\r\n  //ã©ãã«ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenLabel: boolean = false;\r\n  //è«ç¼é¡ã¢ã¤ã³ã³ãéè¡¨ç¤ºã«ããã¢ã¼ããã©ã°\r\n  @Input() public hiddenPopupButton: boolean = false;\r\n  //ãã¼ã¿ã­ã£ãã·ã¥ON/OFFæ©è½ãã©ã°\r\n  @Input() public dataCache: boolean = false;\r\n  //ãããã¢ããä¸éè¡¨ç¤ºã¨ãªãåçªå·\r\n  @Input() public hiddenColumns: number[] = [];\r\n  // ãã¤ã¢ã­ã°ã®å¹ãæå®\r\n  @Input() public popupWidth: string;\r\n\r\n  public name: string = \"\";\r\n  public event: any;\r\n  public codes = [];\r\n  public codesHeader = [];\r\n\r\n  public extendWidth = ShCtlConst.DIALOG_WIDTH;\r\n\r\n  //Dialogã®çµæãåãåã\r\n  public dialogRef: MatDialogRef<SHCtlPopupDialogComponent, any> = null;\r\n  // ååéä¿¡ç¨ãã©ã°\r\n  public initFetchFlg: boolean = false;\r\n  // bindColumnArrayãå©ç¨ãå¤ãè¨­å®ãããå ´åã«ãã§ã³ã¸ãæ­¢ãã\r\n  get noChangeFlgCtlName(): string {\r\n    return `${this.ctlName}_${ShCtlConst.NO_CHANGE.FLG_SUFFIX}`;\r\n  }\r\n  // inputã®åç§\r\n  get ownValueInputElm(): HTMLInputElement | null {\r\n    return (\r\n      <HTMLInputElement>(\r\n        document.querySelector(\r\n          `textarea[name=${this.ctlName}], input[name=${this.ctlName}]`\r\n        )\r\n      ) || null\r\n    );\r\n  }\r\n  get ownLabelInputElm(): HTMLInputElement | null {\r\n    return <HTMLInputElement>(\r\n      (document.querySelector(\r\n        `textarea[name=${this.popupLabelName}], input[name=${this.popupLabelName}]`\r\n      ) || null)\r\n    );\r\n  }\r\n\r\n  // bindColumnArrayãå©ç¨ãå¤ãè¨­å®ãããå ´åã«ãã§ã³ã¸ãæ­¢ãã\r\n  public noChangeFlg: NoChangeFlg = `OFF`;\r\n  // éä¿¡ä¸­ãã©ãã\r\n  public isBusy = false;\r\n  constructor(\r\n    protected SmplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlPopup\";\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public noChangeFlgChange(event) {\r\n    this.noChangeFlg = event.target.value;\r\n    setTimeout(() => {\r\n      this.noChangeFlg = `OFF`;\r\n    }, 1000);\r\n  }\r\n  /**\r\n   * å¥åã³ã³ãã­ã¼ã«ã®å¹ãæå®\r\n   */\r\n  public setInputWidth() {\r\n    return this.hiddenLabel ? { width: \"100%\" } : { width: \"33.3%\" };\r\n  }\r\n\r\n  /**\r\n   * ã©ãã«ã³ã³ãã­ã¼ã«ã®å¹ãæå®\r\n   */\r\n  public setLabelWidth() {\r\n    return this.hiddenInput ? { width: \"100%\" } : { width: \"66.6%\" };\r\n  }\r\n\r\n  /**\r\n   * ãã¼ã¿ãã¤ã³ããããå¤ãåè¨­å®ããéã«å¤ãæ¤è¨¼ã\r\n   * è¦ªã³ã³ãã¼ãã³ãã«æ¸¡ã\r\n   * @param changes ç¾å¨ã®å¤ã¨ç´åã®å¤ãåå¾åºæ¥ã\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value && !changes.value.currentValue) {\r\n      this.name = \"\";\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (this.noChangeFlg == \"OFF\") {\r\n      if (changes.value && changes.value.currentValue) {\r\n        if (changes.value.currentValue != changes.value.previousValue) {\r\n          this.fetchCodes(this.apiUrl);\r\n          return;\r\n        }\r\n      }\r\n      if (changes.value && changes.value.firstChange) {\r\n        this.initFetchFlg = true;\r\n      }\r\n\r\n      if (this.initFetchFlg) {\r\n        if (!this.value || !changes.value.currentValue) return;\r\n        this.fetchCodes(this.apiUrl);\r\n        this.initFetchFlg = false;\r\n      }\r\n      if (\r\n        changes.apiUrl &&\r\n        changes.apiUrl.previousValue != changes.apiUrl.currentValue &&\r\n        !this.isBindInputNull(this.bindColumnArray)\r\n      ) {\r\n        if (\r\n          this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)\r\n            .length == 0\r\n        ) {\r\n          if (\r\n            changes.value &&\r\n            changes.value.currentValue == changes.value.previousValue\r\n          )\r\n            return;\r\n          this.fetchCodes(changes.apiUrl.currentValue);\r\n        } else {\r\n          this.codes = Object(\r\n            this.SmplPopupService.getMasterData(changes.apiUrl.currentValue)\r\n          ).data;\r\n          this.value = this.setName(this.value);\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setTimeout(() => {\r\n        this.noChangeFlg = `OFF`;\r\n      }, 1000);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n    // //ã¦ãã¼ã¯ãªæå­å\r\n    if (this.isDisabled) {\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length <= 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then((response) => {\r\n          this.codes = response.data;\r\n          this.codesHeader = Object.values(response.header);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *api éä¿¡ ãã¹ã¿ããåå¾\r\n   */\r\n  public async fetchCodes(url: string, value?: string) {\r\n    if (this.isBusy) return;\r\n    this.isBusy = true;\r\n    this.lockScreenService.lockScreen();\r\n    (document.activeElement as HTMLElement).blur();\r\n    return Promise.resolve(this.SmplPopupService.fetchAll(url)).catch(_ => {this.lockScreenService.unlock()}).then(\r\n      (response) => {\r\n        this.codes = response.data;\r\n        this.codesHeader = Object.values(response.header);\r\n        this.dataTitle = response.title;\r\n        const ok = this.checkValue(value || this.value);\r\n        let result = \"\";\r\n        if (ok) {\r\n          if (value || this.value) {\r\n            result = this.setName(value || this.value);\r\n          }\r\n          if (this.dataCache) {\r\n            this.SmplPopupService.setMasterData(url, response);\r\n          }\r\n        }\r\n        this.isBusy = false;\r\n\r\n        return new Promise((resolve) => {\r\n          resolve(result);\r\n          this.lockScreenService.unlock();\r\n        });\r\n      }\r\n    )\r\n\r\n  }\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    // valueã®å¤ãä¸æå¯¾æ¯ããã¤ã¢ã­ã°ãéããéã«æ¯è¼ãã¾ã\r\n    const tmp = this.value;\r\n    if (\r\n      !this.popupWidth &&\r\n      this.codes.length != 0 &&\r\n      Object.values(this.codes[0]).length >= 4\r\n    ) {\r\n      this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n    }\r\n    this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n      height: ShCtlConst.DIALOG_HEIGHT,\r\n      width: this.extendWidth,\r\n      data: {\r\n        dataTitle: this.dataTitle,\r\n        codes: this.codes,\r\n        codesHeader: this.codesHeader,\r\n        hiddenColumns: this.hiddenColumns,\r\n      },\r\n    });\r\n    this.dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.setValueName(result);\r\n        //this.allocateToInputValue(result);\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record: result,\r\n        });\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record: result,\r\n        });\r\n        this.noChangeFlg = `ON`;\r\n        //changeã¤ãã³ãçµç±ã§emitããã¨ç¡æ¡ä»¶ã§afterChangeã¤ãã³ããå¼ã°ããã®ã§\r\n        //å¤ãæ¯è¼ãå¤æ´ããªããã°ãã®ã¿ã¤ãã³ã°ã§emitãã\r\n        const resultValues = Object.values(result);\r\n        if (resultValues && resultValues.includes(tmp)) {\r\n          this.valueChange.emit(this.value);\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          this.dispatchOwnValueInputChangeEvent();\r\n        }, 0);\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   *@ èªèº«ã®valueã«ç´ã¥ãinputã®ãã§ã³ã¸ã¤ãã³ããçºç«\r\n   */\r\n  private dispatchOwnValueInputChangeEvent() {\r\n    if (this.ownValueInputElm) {\r\n      this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n    }\r\n  }\r\n  /**\r\n   *@ bindåã®inputãnullãã©ãã\r\n   */\r\n  public isBindInputNull(bindColumnArray: { [key: string]: string }[]) {\r\n    if (!bindColumnArray || bindColumnArray.length == 0) return true;\r\n    return bindColumnArray\r\n      .map((bindColumnData) => {\r\n        return document.querySelector(\r\n          `input[name=${Object.keys(bindColumnData)[0]}]`\r\n        ) as HTMLInputElement;\r\n      })\r\n      .map((bindInput) => {\r\n        if (!bindInput) return false;\r\n        return !!bindInput.value;\r\n      })\r\n      .includes(false);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterClick(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n  public clearAll() {\r\n    this.value = \"\";\r\n    this.name = \"\";\r\n    if (this.ownLabelInputElm) {\r\n      this.ownLabelInputElm.value = \"\";\r\n    }\r\n    this.valueChange.emit(\"\");\r\n  }\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    if (!event.target.value) {\r\n      this.clearAll();\r\n    }\r\n    let flg = false;\r\n    if (this.noChangeFlg == \"OFF\") {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.noChangeFlg = \"ON\";\r\n        this.fetchCodes(this.apiUrl, this.toText(event.target.value)).then(\r\n          (value) => {\r\n            this.valueChange.emit(value);\r\n            event.target.value = this.toText(event.target.value);\r\n            setTimeout(() => {\r\n              this.onAfterChange(event);\r\n            }, 0);\r\n          }\r\n        );\r\n      } else {\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n  /**\r\n   *æå¥åã®å¤ããã®æ¤ç´¢çµæãè¤æ°ãã£ãå ´åã¯ã¢ã©ã¼ããåºã\r\n   */\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter(\r\n        (element) =>\r\n          //this.hasMatchRecords(element, value)\r\n          Object.values(element)[this.bindColumnKey - 1] == value\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue();\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * ãã¹ã¿æå ±ããã³ã¼ããåå¾\r\n   */\r\n  public getCodes() {\r\n    this.openDialog();\r\n    if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0) {\r\n      this.SmplPopupService.fetchAll(this.apiUrl).then((response) => {\r\n        this.codes = response.data;\r\n        this.codesHeader = Object.values(response.header);\r\n        this.dataTitle = response.title;\r\n        if (this.dataCache)\r\n          this.SmplPopupService.setMasterData(this.apiUrl, response);\r\n        if (!this.dialogRef) return;\r\n        if (this.dialogRef.componentInstance) {\r\n          this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n          this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n          this.dialogRef.componentInstance.codes = this.codes;\r\n          this.dialogRef.componentInstance.dataTitle = this.dataTitle;\r\n          if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n          }\r\n          this.dialogRef.updateSize(this.extendWidth, ShCtlConst.DIALOG_HEIGHT);\r\n          let cols = [];\r\n          this.dialogRef.componentInstance\r\n            .getHashKeys()\r\n            .forEach((name, idx) => {\r\n              if (!this.hiddenColumns.find((_) => _ == idx + 1))\r\n                cols.push(name);\r\n            });\r\n          this.dialogRef.componentInstance.displayedColumns = cols;\r\n        }\r\n      });\r\n    } else {\r\n      this.codes = Object(\r\n        this.SmplPopupService.getMasterData(this.apiUrl)\r\n      ).data;\r\n      this.codesHeader = Object.values(\r\n        Object(this.SmplPopupService.getMasterData(this.apiUrl)).header\r\n      );\r\n      if (this.dialogRef.componentInstance) {\r\n        this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n        this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n        this.dialogRef.componentInstance.codes = this.codes;\r\n        this.dialogRef.componentInstance.dataTitle = this.dataTitle;\r\n        if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n          this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n        }\r\n        this.dialogRef.updateSize(this.extendWidth, ShCtlConst.DIALOG_HEIGHT);\r\n        let cols = [];\r\n        this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n          if (!this.hiddenColumns.find((_) => _ == idx + 1)) cols.push(name);\r\n        });\r\n        this.dialogRef.componentInstance.displayedColumns = cols;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªã³ã³ãã­ã¼ã«ã®input value ã«å¤ãæ¸¡ã\r\n   * @param matchedArray\r\n   */\r\n  public setValueName(matchedArray) {\r\n    if (Object.values(matchedArray)[this.bindColumnKey - 1]) {\r\n      const val = Object.values(matchedArray)[\r\n        this.bindColumnKey - 1\r\n      ].toString();\r\n      this.value = val;\r\n    } else {\r\n      this.value = \"\";\r\n    }\r\n    if (Object.values(matchedArray)[this.bindColumnValue - 1]) {\r\n      this.name = Object.values(matchedArray)[\r\n        this.bindColumnValue - 1\r\n      ].toString();\r\n    } else {\r\n      this.name = \"\";\r\n    }\r\n  }\r\n  /**\r\n   *è¦ªå­é¢ä¿ã«ãªã£ã¦ããinputãããå ´åã«æ¤ç´¢å¯¾è±¡ãè¦ªã¾ã§åºãã\r\n   */\r\n  private hasMatchRecords(element: any, val: any): boolean {\r\n    // æ¤ç´¢çµæä¸è¡åã®æ¯è¼ãã¹ãåã®å¤\r\n    let searchs = [];\r\n    // ç¾å¨ã®æ¯è¼ãã¹ãå¤\r\n    let values = [val];\r\n    searchs.push(Object.values(element)[this.bindColumnKey - 1]);\r\n    if (this.bindColumnArray && this.bindColumnArray.length != 0) {\r\n      this.bindColumnArray.forEach((data) => {\r\n        let bindIndex = (Object.values(data)[0] as number) - 1;\r\n        searchs.push(Object.values(element)[bindIndex]);\r\n        let targetInput = document.querySelector(\r\n          `input[name=${Object.keys(data)[0]}]`\r\n        ) as HTMLInputElement;\r\n        if (targetInput) {\r\n          if (targetInput.value) {\r\n            values.push(targetInput.value);\r\n          } else {\r\n            searchs = searchs.filter(\r\n              (val) => val != Object.values(element)[bindIndex]\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n    const result = searchs.map((val) => values.includes(val));\r\n    return !result.includes(false);\r\n  }\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    const record = this.codes\r\n      ? this.codes.find(\r\n          (element) => Object.values(element)[this.bindColumnKey - 1] == val\r\n        )\r\n      : null;\r\n    if (record) {\r\n      let kbnValue = Object.values(record)[this.bindColumnValue - 1];\r\n      this.name = kbnValue ? kbnValue.toString() : \"\";\r\n      this.bindCtlService.setBindValue({\r\n        bindColumnArray: this.bindColumnArray,\r\n        record,\r\n      });\r\n    } else {\r\n      val = \"\";\r\n      this.clearAll();\r\n    }\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * å¥åã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = \"\";\r\n    this.name = \"\";\r\n    if (this.ctlName) {\r\n      this.ownValueInputElm.value = \"\";\r\n      //ã¿ã¤ãã³ã°ãéãããªãã¨changeã¤ãã³ãåã®event.target.valueãåã®å¤ã«ãªã\r\n      setTimeout(() => {\r\n        this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        this.ownValueInputElm.dispatchEvent(new Event(\"focus\"));\r\n      }, 0);\r\n    }\r\n    if (this.popupLabelName) {\r\n      this.ownLabelInputElm.value = \"\";\r\n    }\r\n  }\r\n  /**\r\n   * ãµãã¯ã©ã¹ã§ãªã¼ãã¼ã©ã¤ããã¦ä½¿ãã®ã§æ¶ããªã\r\n   */\r\n  public toText(s: string) {\r\n    return s;\r\n  }\r\n  public extractBindValue(result: any) {\r\n    if (!result) return;\r\n    return Object.values(result)[this.bindColumnKey - 1];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShHttpClientService, ApiResponseBody } from 'sh-http-client';\r\nimport { ShCtlConst } from '../constShCtl';\r\n\r\n/**\r\n * ShCtlãApiéä¿¡ã¯ã©ã¹\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShCtlApiService {\r\n\r\n  constructor(\r\n    private apiComService: ShHttpClientService,\r\n  ) { }\r\n\r\n  /**\r\n  * APIè¿å´çµæã«å¿ãã¦å¦çåå²ãè¡ããApplicationDataã®ã¿ãè¿å´ãã\r\n  * @param apiResponse APIè¿å´çµæ\r\n  * @return APIè¿å´çµæã®ApplicationData\r\n  */\r\n  private getApplicationData<T>(apiResponseBody: ApiResponseBody<T>): T {\r\n    //ããªãã¼ã·ã§ã³å¦ç\r\n    //ã¢ã©ã¼ãå¦ç\r\n    //ã·ã¹ãã ã«è¿ãéã¯å¦çã«å¿è¦ãªãã¼ã¿ã ãã«ãã\r\n    return apiResponseBody.applicationData;\r\n\r\n  }\r\n\r\n  /**\r\n  * GET\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async get<T>(url: string): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.get<T>(url, false)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * POST\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async post<T>(url: string, data: any): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.post<T>(url, data)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * PUT\r\n  * @param url ApiUrl\r\n  * @param data ãã¼ã¿\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async put<T>(url: string, data: any): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.put<T>(url, data)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n\r\n  /**\r\n  * DELETE\r\n  * @param url ApiUrl\r\n  * @return APIè¿å´çµæ\r\n  */\r\n  public async delete<T>(url: string): Promise<T> {\r\n    let ret: T = null;\r\n    await this.apiComService.delete<T>(url)\r\n      .then(response => {\r\n        ret = this.getApplicationData(response);\r\n      });\r\n    return ret;\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShCtlApiService } from './sh-ctl-api.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * åºåãã¹ã¿ã®æå ±ãåå¾\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmplPopupService {\r\n  private popupCdSubject = new Subject<string>();\r\n  public popupCdState = this.popupCdSubject.asObservable();\r\n  constructor(\r\n    private apiComService: ShCtlApiService,\r\n  ) { }\r\n\r\n  //æ±ç¨ãã¹ã¿\r\n  private masterCache: any[] = [];\r\n\r\n  /**\r\n   * æ±ç¨ãã¹ã¿åå¾\r\n   */\r\n  public async fetchAll(url: string): Promise<any> {\r\n    return this.apiComService.get<any[]>(url);\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããã¹ã¿ã®ã­ã£ãã·ã¥ãã¦ãããã¼ã¿ãåå¾\r\n   * @param key ãã¹ã¿ã®åå\r\n   */\r\n  public getMasterData(key: string): any[] {\r\n    let cache = this.masterCache.filter(item => {\r\n      return item.masterName == key\r\n    })\r\n    return cache.length > 0 ? cache[0].masterCache : [];\r\n  }\r\n\r\n  /**\r\n   * ãã¹ã¿ãã¼ã¿ãã­ã£ãã·ã¥ãã\r\n   * @param key ãã¹ã¿ã®åå\r\n   * @param masterData ãã¹ã¿ãã¼ã¿\r\n   */\r\n  public setMasterData(key: string, masterData: any[]) {\r\n    if (this.masterCache.length > 0) {\r\n      for (let item of this.masterCache) {\r\n        if (item.masterName == key) {\r\n          item.masterCache = masterData\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.masterCache = this.masterCache.concat([{ masterName: key, masterCache: masterData }]);\r\n  }\r\n}\r\n","export const NoChangeFlg = {\r\n    ON: `ON`,\r\n    OFF: `OFF`\r\n} as const;\r\n\r\nexport type NoChangeFlg = typeof NoChangeFlg[keyof typeof NoChangeFlg];","import { Injectable } from \"@angular/core\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { NoChangeFlg } from '../types/NoChangeFlg'\r\n\r\ntype Param = {\r\n  bindColumnArray: { [key: string]: string }[];\r\n  record: any;\r\n};\r\n\r\n@Injectable({\r\n  providedIn: `root`,\r\n})\r\nexport class BindCtlService {\r\n\r\n  private readonly NO_CHANGE_FLG_SUFFIX = ShCtlConst.NO_CHANGE.FLG_SUFFIX;\r\n\r\n  constructor() {}\r\n\r\n  public setNoChangeFlg(param: Param) {\r\n    if (this.isParamEmpty(param)) return;\r\n    const info = this.generateBindInputInfo(param);\r\n    info.forEach((data) => {\r\n      const targetInput = document.querySelector(\r\n        `input[name=${data.ctlName}_${this.NO_CHANGE_FLG_SUFFIX}],textarea[name=${data.ctlName}_${this.NO_CHANGE_FLG_SUFFIX}]`\r\n      ) as HTMLInputElement;\r\n      if(!targetInput) return;\r\n      targetInput.value = NoChangeFlg.ON;\r\n      targetInput.dispatchEvent(new Event(`change`));\r\n    });\r\n  }\r\n\r\n  public setBindValue(param: Param) {\r\n    if (this.isParamEmpty(param)) return;\r\n    const info = this.generateBindInputInfo(param);\r\n    info.forEach((data) => {\r\n        const targetInput = document.querySelector(\r\n          `input[name=${data.ctlName}],textarea[name=${data.ctlName}]`\r\n        ) as HTMLInputElement;\r\n        if(!targetInput) return;\r\n        targetInput.value = data.value;\r\n        targetInput.dispatchEvent(new Event(`change`));\r\n      });\r\n  }\r\n\r\n  private generateBindInputInfo(\r\n    param: Param\r\n  ): { ctlName: string; value: string }[] {\r\n    return param.bindColumnArray.map((data) => {\r\n      const column = Number(Object.values(data)[0]);\r\n      return {\r\n        ctlName: Object.keys(data)[0],\r\n        value: isNaN(Number(column)) ? `` : Object.values(param.record)[column - 1] as string,\r\n      };\r\n    });\r\n  }\r\n\r\n  private isParamEmpty(param: Param) {\r\n    if (!param.bindColumnArray || param.bindColumnArray.length == 0)\r\n      return true;\r\n    if (!param.record) return true;\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LockScreenService {\r\n  private isConnecting: boolean = false;\r\n  private isConnectingSubject = new Subject<boolean>();\r\n  public isConnectingState = this.isConnectingSubject.asObservable();\r\n  public count :number = 0;\r\n\r\n  /**\r\n  * ã³ã³ã¹ãã©ã¯ã¿\r\n  */\r\n  constructor() { }\r\n\r\n  /**\r\n  * ç»é¢ãã­ãã¯ãã(ã¦ã¼ã¶ã¼ãæä½åºæ¥ãªãããã«ãã)\r\n  */\r\n  public lockScreen() {\r\n      this.count += 1;\r\n      if (this.count === 1) {\r\n        this.isConnecting = true;\r\n        this.isConnectingSubject.next(this.isConnecting);\r\n      }\r\n  }\r\n\r\n  /**\r\n  * ç»é¢ã®ã­ãã¯ãè§£é¤ãã(ã¦ã¼ã¶ã¼ãæä½åºæ¥ãç¶æã«ãã)\r\n  */\r\n  public unlock() {\r\n    this.count -= 1;\r\n    if (this.count === 0) {\r\n        this.isConnecting = false;\r\n        this.isConnectingSubject.next(this.isConnecting);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { MatDialog } from '@angular/material'\r\nimport { SHFormPopup } from '../../utilities/ShFormPopup';\r\nimport { SmplPopupService } from '../../services/smpl-popup.service';\r\nimport { BindCtlService } from '../../services/bind-ctl.service';\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: 'sh-ctl-jig-code',\r\n  templateUrl: './sh-ctl-jig-code.component.html',\r\n  styleUrls: ['./sh-ctl-jig-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlJigCodeComponent extends SHFormPopup implements OnChanges, OnInit {\r\n\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlJigCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * 3æ¡å¥åæã«æ®ããè£å®ãã\r\n   * @param jigCode äºæ¥­æã³ã¼ã\r\n   */\r\n  public toText(jigCode: string) {\r\n    // ãã©ã³ã¯ãªã\r\n    if (SHCtlCommon.isBlank(jigCode)) return \"\";\r\n    // 6æ¡ã¯å¦çããªã\r\n    if (jigCode.trim().length == 6) return jigCode;\r\n\r\n    let result = null;\r\n\r\n    if (jigCode.trim().length == 3) {\r\n      let firstString = parseInt((Number(jigCode.substr(0, 1)) * 9).toString(), 10);    // ä¸æå­ç®\r\n      let secondString = parseInt((Number(jigCode.substr(1, 1)) * 8).toString(), 10);    // å¼æå­ç®\r\n      let thirdString = parseInt((Number(jigCode.substr(2, 1)) * 7).toString(), 10);   // åæå­ç®\r\n      const strNo = firstString + secondString + thirdString;\r\n      const lastStrting = strNo.toString().substr(strNo.toString().length - 1, 1);  // å³ããä¸æå­ç®åå¾\r\n      // one + two + three + '00' + lastNo\r\n      result = `${jigCode}00${lastStrting}`;\r\n    }\r\n    else {\r\n      result = \"\";\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Inject, Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\n\r\ninterface Data {\r\n    dataTitle: string\r\n    value: any,\r\n    uniqueColumns: any\r\n    hiddenColumns: any,\r\n}\r\n\r\n@Component({\r\n    selector: 'sh-ctl-popup-multi-dialog',\r\n    templateUrl: 'sh-ctl-popup-multi-dialog.component.html',\r\n    styleUrls: ['sh-ctl-popup-multi-dialog.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlPopupDialogMultiComponent implements OnInit, AfterViewChecked {\r\n    public displayedColumns: string[] = [];\r\n    public name: string = \"\";\r\n    public uniqueStr = \"\";\r\n    public dataTitle: string;\r\n    public codes: any;\r\n    public unchangeableCodes: any;\r\n    public codesHeader: any;\r\n    public selection = new SelectionModel<any>(true, []);\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<any>,\r\n        @Inject(MAT_DIALOG_DATA) public data: Data,\r\n    ) { }\r\n\r\n    /**\r\n     * å¤ããã¤ã³ããããæã«å¼ã°ãã\r\n     */\r\n    ngOnInit() {\r\n        this.init()\r\n    }\r\n\r\n    /**\r\n    * å¤ã®åæå\r\n    */\r\n    private init() {\r\n        this.dataTitle = this.data.dataTitle;\r\n        if (this.data.value)\r\n            this.data.value.forEach(row => this.selection.select(row));\r\n        let cols = ['select'];\r\n        this.getHashKeys().forEach((name, idx) => {\r\n            if (!this.data.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n        });\r\n        this.displayedColumns = cols;\r\n        this.uniqueStr = SHCtlCommon.getUniqueStr();\r\n    }\r\n\r\n    /**\r\n    * ãã¼ãã«ã®ãããã¼ãç·¨é\r\n    */\r\n    ngAfterViewChecked() {\r\n        let headerElement = document.getElementsByTagName('th')\r\n        let countBlank = 0;\r\n        if (!this.codesHeader) return;\r\n        for (let i = 0; i < headerElement.length; i++) {\r\n            if (this.codesHeader[i] != \"\") {\r\n                for (let e = 1; e <= countBlank; e++) {\r\n                    headerElement[i - e].style.display = 'none';\r\n                }\r\n                countBlank = 0;\r\n            } else if (this.codesHeader[i] === \"\") {\r\n                countBlank += 1;\r\n                headerElement[i - countBlank].colSpan = countBlank + 1;\r\n                headerElement[i - countBlank].style.textAlign = 'center';\r\n                if (i === headerElement.length - 1) {\r\n                    for (let j = 0; j < countBlank; j++) {\r\n                        headerElement[i - j].style.display = 'none';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãã§ãã¯ããã¯ã¹é¸æ\r\n     */\r\n    public itemSelect(row:any) {\r\n        if (!this.isItemSelected(row))\r\n            this.selection.select(row);\r\n    }\r\n\r\n    /**\r\n     * è¡é¸æã«ãããã§ãã¯ããã¯ã¹å¤ã®æä½\r\n     */\r\n    public itemToggle(row:any) {\r\n        if (!this.isItemSelected(row))\r\n            this.selection.select(row);\r\n        else {\r\n            let keys = Object.keys(row);  \r\n            let item = this.selection.selected.find(_ => { \r\n                let isSame = true;\r\n                keys.forEach((key, idx) => {\r\n                    if (this.data.uniqueColumns.find(__ => __ == (idx + 1))) {\r\n                        if (_[key] != row[key]) {\r\n                            isSame = false;ãreturn;\r\n                        }\r\n                    }\r\n                });\r\n                return isSame;\r\n            });\r\n            this.selection.deselect(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * é ç®ãé¸æãã¦ãããã©ãã\r\n     */\r\n    public isItemSelected(row:any): boolean {\r\n        if (!this.selection.selected) return false;\r\n        let keys = Object.keys(row);  \r\n        let item = this.selection.selected.find(_ => { \r\n            let isSame = true;\r\n            keys.forEach((key, idx) => {\r\n                if (this.data.uniqueColumns.find(__ => __ == (idx + 1))) {\r\n                    if (_[key] != row[key]) {\r\n                        isSame = false; return;\r\n                    }\r\n                }\r\n            });\r\n            return isSame;\r\n        });\r\n        return item ? true : false;\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã\r\n     */\r\n    public closeDialog() {\r\n        //ãã¤ã¢ã­ã°ãéããæã«æ½å¥å¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããããé¸æããããã¼ã¿ãè¦ªã«è¿ã\r\n     * @param item \r\n     */\r\n    public returnDialog() {\r\n        //ãã¤ã¢ã­ã°ãéããæã«é¸æå¤ãè¦ªã«æ¸¡ã\r\n        this.dialogRef.close(this.selection.selected);\r\n    }\r\n\r\n    /**\r\n     * å¨ã¦ã®é ç®ãé¸æãã¦ãããã©ãã\r\n     */\r\n    public isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.unchangeableCodes.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    /**\r\n     * å¨é¸æã»å¨è§£é¤å¦ç\r\n     */\r\n    public masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.unchangeableCodes.forEach(row => this.itemSelect(row));\r\n    }\r\n\r\n    /**\r\n     * ãã§ãã¯ããã¯ã¹ã©ãã«\r\n     */\r\n    public checkboxLabel(row?: any): string {\r\n        if (!row) {\r\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n\r\n    /**\r\n     * ãã¼ã¿ã®keyãè¿ã\r\n     */\r\n    public getHashKeys() {\r\n        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {\r\n            return; \r\n        } else {\r\n            return Object.keys(this.unchangeableCodes[0]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ãããã¢ããåã§ã®ææ§æ¤ç´¢\r\n     * ã¹ãã¼ã¹åºåãã§1ã­ã¼ã¯ã¼ãã¨ãã\r\n     * @param event inputã¤ãã³ã\r\n     */\r\n    public filter(event) {\r\n        const filterString: string = event.target.value;\r\n        let fileterStrArray = filterString.replace(/ã/g, \" \").split(\" \");\r\n        fileterStrArray = fileterStrArray.filter((value) => {\r\n            return value;\r\n        });\r\n        let resultArray: any[];\r\n        resultArray = this.unchangeableCodes.concat();\r\n        for (let i = 0; i < fileterStrArray.length; i++) {\r\n            let obj = this;\r\n            resultArray = resultArray.filter(function (value: any) {\r\n                let values = Object.values(value)\r\n                for (let j = 0; j < values.length; j++) {\r\n                    if (obj.data.hiddenColumns.find(_ => _ == (j + 1))) continue;\r\n                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        this.codes = resultArray;\r\n    }\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from \"../../utilities/ShFormPopup\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { SHCtlPopupDialogComponent } from \"../sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { ShCtlConst } from \"../../constShCtl\";\r\nimport { BindCtlService } from \"../../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-jyu-code\",\r\n  templateUrl: \"./sh-ctl-jyu-code.component.html\",\r\n  styleUrls: [\"./sh-ctl-jyu-code.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlJyuCodeComponent\r\n  extends SHFormPopup\r\n  implements OnInit, OnChanges {\r\n  @Input() enabledHalfKanaInput: boolean = true;\r\n  public obj = \".SHCtlJyuCode\";\r\n\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlJyuCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n   /**\r\n   * ã³ã³ãã¼ãã³ãã«å¤ããã¤ã³ããããå¾ã§å¼ã³åºããã\r\n   * ãã­ããã£ã®åæå\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    event.target.value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n    if (!this.enabledHalfKanaInput) {\r\n      SHCtlCommon.replaceFullWidth(event);\r\n    }\r\n    event.target.value = event.target.value.replace(\r\n      /[\"ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ï¼¾ï¿¥ï¼ ãï¼ï¼ãããã»\"]/g,\r\n      \"\"\r\n    );\r\n    if (\r\n      event.target.value.length >= 6 &&\r\n      event.inputType != \"deleteContentBackward\"\r\n    ) {\r\n      if (\r\n        isNaN(parseInt(event.target.value)) &&\r\n        event.target.value.length != 7\r\n      ) {\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    let flg = false;\r\n    if (this.noChangeFlg == `OFF`) {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.fetchCodes(this.apiUrl).then((value) => {\r\n          this.valueChange.emit(value);\r\n          event.target.value = this.toText(event.target.value);\r\n          setTimeout(() => {\r\n            this.onAfterChange(event);\r\n          }, 0);\r\n        });\r\n      } else {\r\n        this.codes = Object(\r\n          this.SmplPopupService.getMasterData(this.apiUrl)\r\n        ).data;\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        // this.noChangeFlg == `OFF`;\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        event.target.value = this.toText(event.target.value);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    let extendWidth;\r\n    if (this.codes) {\r\n      if (\r\n        !this.popupWidth &&\r\n        this.codes.length != 0 &&\r\n        Object.values(this.codes[0]).length >= 4\r\n      ) {\r\n        this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n      }\r\n\r\n      let rawCodes;\r\n      let rawCodesArray = [];\r\n      for (let i = 0; this.codes.length > i; i++) {\r\n        rawCodes = this.codes[i].contactCode;\r\n        rawCodesArray.push(rawCodes);\r\n        let code = Object.values(this.codes[i])\r\n          [this.bindColumnKey - 1].toString()\r\n          .substr(2);\r\n        this.codes[i].contactCode = code;\r\n      }\r\n      this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n        height: ShCtlConst.DIALOG_HEIGHT,\r\n        width: extendWidth,\r\n        data: {\r\n          dataTitle: this.dataTitle,\r\n          codes: this.codes,\r\n          codesHeader: this.codesHeader,\r\n          hiddenColumns: this.hiddenColumns,\r\n        },\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((result) => {\r\n        if (result) {\r\n          this.setValueName(result);\r\n          this.bindCtlService.setNoChangeFlg({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.bindCtlService.setBindValue({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.noChangeFlg = `ON`;\r\n          this.valueChange.emit(this.extractBindValue(result));\r\n          this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    let record: any;\r\n    val = this.toText(val);\r\n    if (val.length == 6) {\r\n      record = this.codes.find((element) =>\r\n        this.toText(Object.values(element)[this.bindColumnKey - 1]).includes(\r\n          val\r\n        )\r\n      );\r\n    }\r\n    if (record != null) {\r\n      const name = Object.values(record)[this.bindColumnValue - 1] as string;\r\n      if (name && val.length == 6) {\r\n        this.setValueName(record);\r\n        this.noChangeFlg = \"ON\";\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        val = Object.values(record)[this.bindColumnKey - 1];\r\n        const inputElement: HTMLInputElement = this.ownValueInputElm;\r\n        if (inputElement) {\r\n          setTimeout(() => {\r\n            inputElement.value = this.toText(val);\r\n          }, 0);\r\n        }\r\n      }\r\n    } else {\r\n      val = ``;\r\n    }\r\n\r\n    return val;\r\n  }\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    if(value.length < 6) {\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter((element) =>\r\n        //this.hasMatchRecords(element, value)\r\n        (Object.values(element)[this.bindColumnKey - 1] as string).includes(\r\n          value\r\n        )\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue()\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    \r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if (!event.isComposing) {\r\n      event.target.value = this.toHankaku(\r\n        this.hiraganaToKatagana(event.target.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åé ­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    if (inputTargetValue.length === 8) {\r\n      return inputTargetValue.substr(2);\r\n    }\r\n    return inputTargetValue;\r\n  }\r\n\r\n  /**\r\n   * ã²ãããªãã«ã¿ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public hiraganaToKatagana(inputValue) {\r\n    return inputValue.replace(/[\\u3041-\\u3096]/g, function (match) {\r\n      var chr = match.charCodeAt(0) + 0x60;\r\n      return String.fromCharCode(chr);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¥åæå­ãåè§ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public toHankaku(inputValue) {\r\n    let half = \"0123456789\";\r\n    half += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    half += \"abcdefghijklmnopqrstuvwxyz\";\r\n    half += \"ï½¡ï½¤ï½¢\\\\ï½£;:ï½¥-+|_@., \";\r\n    half += \"ï½±ï½²ï½³ï½´ï½µï½¶ï½·ï½¸ï½¹ï½ºï½»ï½¼ï½½ï½¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½¦ï¾ï½§ï½¨ï½©ï½ªï½«ï½¯ï½¬ï½­ï½®ï½°\";\r\n    let halfArr = new Array(\r\n      \"ï½³ï¾\",\r\n      \"ï½¶ï¾\",\r\n      \"ï½·ï¾\",\r\n      \"ï½¸ï¾\",\r\n      \"ï½¹ï¾\",\r\n      \"ï½ºï¾\",\r\n      \"ï½»ï¾\",\r\n      \"ï½¼ï¾\",\r\n      \"ï½½ï¾\",\r\n      \"ï½¾ï¾\",\r\n      \"ï½¿ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\"\r\n    );\r\n\r\n    let full = \"ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼\";\r\n    full += \"ï¼¡ï¼¢ï¼£ï¼¤ï¼¥ï¼¦ï¼§ï¼¨ï¼©ï¼ªï¼«ï¼¬ï¼­ï¼®ï¼¯ï¼°ï¼±ï¼²ï¼³ï¼´ï¼µï¼¶ï¼·ï¼¸ï¼¹ï¼º\";\r\n    full += \"ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½\";\r\n    full += \"ãããï¿¥ãï¼ï¼ã»ï¼ï¼ï½ï¼¿ï¼ ï¼ï¼ã\";\r\n    full +=\r\n      \"ã¢ã¤ã¦ã¨ãªã«ã­ã¯ã±ã³ãµã·ã¹ã»ã½ã¿ããããããããããããããããã ã¡ã¢ã¤ã¦ã¨ã©ãªã«ã¬ã­ã¯ã²ã³ã¡ã£ã¥ã§ã©ãã£ã¥ã§ã¼\";\r\n    let fullArr = new Array(\r\n      \"ã´\",\r\n      \"ã¬\",\r\n      \"ã®\",\r\n      \"ã°\",\r\n      \"ã²\",\r\n      \"ã´\",\r\n      \"ã¶\",\r\n      \"ã¸\",\r\n      \"ãº\",\r\n      \"ã¼\",\r\n      \"ã¾\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\"\r\n    );\r\n\r\n    let str = \"\";\r\n    //åè§ã«ãç¨\r\n    for (let i = 0; i < halfArr.length; i++) {\r\n      let reg = new RegExp(fullArr[i], \"g\");\r\n      inputValue = inputValue.replace(reg, halfArr[i]);\r\n    }\r\n    for (let i = 0; i < inputValue.length; i++) {\r\n      let oneStr = inputValue.charAt(i);\r\n      let num = full.indexOf(oneStr, 0);\r\n      oneStr = num >= 0 ? half.charAt(num) : oneStr;\r\n      str += oneStr;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-katakana',\r\n  templateUrl: './sh-ctl-katakana.component.html',\r\n  styleUrls: ['./sh-ctl-katakana.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlKatakanaComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlKatakana\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n    if ( !event.isComposing ) {\r\n      if (this.maxByteLength > 0)\r\n        if (event.inputType !== 'insertCompositionText') {\r\n          this.onKeyDown(event);\r\n          SHCtlCommon.sliceLength(event, this.maxByteLength);\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onPaste\r\n   * @param event paste\r\n   */\r\n  public onPaste(event) {\r\n    let obj = this;\r\n    setTimeout(function(e){\r\n      SHCtlCommon.replaceHalfDoubleQuote(event);\r\n      obj.replaceFullWIdth(event);\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event chage\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n    this.replaceFullWIdth(event)\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  public onKeyUp(event) {\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalfDoubleQuote(event);\r\n      this.replaceFullWIdth(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyDown\r\n   */\r\n  public onKeyDown(event) {\r\n    super.onKeyDown(event);\r\n  }\r\n\r\n /**\r\n  * é¤å»å¤æ\r\n  * @param event\r\n  */\r\n  public replaceFullWIdth(event) {\r\n    event.target.value = event.target.value.replace(/[ã-ãã¡-ã¶\\u30e0-\\u9fcfï½-ï½ï¼¡-ï¼ºï¼-ï¼ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½ï¿¥ï¼¾ï¼âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ ãï¼ï¼ãããã»ï¿¥ã¼ã]/g, \"\");\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, Input, SimpleChanges, AfterViewChecked } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-number',\r\n  templateUrl: './sh-ctl-number.component.html',\r\n  styleUrls: ['./sh-ctl-number.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlNumberComponent extends SHFormControl<string> implements OnInit, OnChanges, AfterViewChecked {\r\n  @Input() public min: number = 0;\r\n  @Input() public max: number = 99999999999;\r\n  @Input() public decimaldigit: number = 0;\r\n  public stringValue: any;\r\n  public firstFlag: boolean = true;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlNumber\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    let matInputElement = document.activeElement.classList.contains('mat-input-element');\r\n    if(this.value && !matInputElement) {\r\n      this.value = this.toText(this.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ngOnChangesã¤ãã³ã\r\n   * å¤å¤æ´æã«ãã©ã¼ããããæ´å½¢\r\n   * @param event input\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        if (changes.value.currentValue === '' || changes.value.currentValue === undefined || changes.value.currentValue === String(/[^\\x01-\\x7E\\xA1-\\xDF]+$/g)) {\r\n          this.value = '';\r\n          return;\r\n        }\r\n        if (parseFloat(changes.value.currentValue) < this.min) {\r\n          this.value = String(this.min);\r\n        }\r\n        if (parseFloat(changes.value.currentValue) > this.max) {\r\n          this.value = String(this.max);\r\n        }\r\n        this.stringValue = this.toText(changes.value.currentValue);\r\n        this.value = parseFloat(parseFloat(changes.value.currentValue).toFixed(this.decimaldigit)).toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSign(event, [\",\", \"\\.\", \"\\-\"]);\r\n    //2æå­ç®ä»¥éã®ã-ãã®å¥åãåãä»ããªã\r\n    if (event.target.value.length > 1)\r\n      event.target.value = event.target.value.slice(0, 1) + event.target.value.slice(1).replace(/[\\-]/g, \"\");\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    this.checkNumbersSigns(event);\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceFUllSpace(event);\r\n      SHCtlCommon.replaceSign(event, [\",\", \"\\.\", \"\\-\"]);\r\n      SHCtlCommon.replaceFullWidth(event);\r\n      this.checkNumbersSigns(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãããããå¤ãè¨å·ã«ç½®ãæãã\r\n   * @param event input\r\n   */\r\n  public checkNumbersSigns(event: any) {\r\n    event.target.value = event.target.value.replace(/^[\\.|,]/g, \"\");\r\n    event.target.value = event.target.value.replace(/[\\.]{2,}/g, \".\");\r\n    event.target.value = event.target.value.replace(/[\\,]{2,}/g, \",\");\r\n    event.target.value = event.target.value.replace(/[\\-]{1,}/g, \"-\");\r\n    if ((/\\d.*\\.\\d.*/).test(event.target.value) && event.data === \".\") {\r\n      event.target.value = event.target.value.slice(0, event.target.value.length - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¡ä»¶ã«æ²¿ãvalueãè¿ã\r\n   * @param event input\r\n   */\r\n  public checkMinus(event: any) {\r\n    return event.target.value.match(/\\d/g) && event.data === \"-\";\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n\r\n    //onChangeçºç«æã«æ°å¤ã§ãªããã°ã¯ãªã¢ãã\r\n    if (isNaN(Number(event.target.value)) === true) {\r\n      event.target.value = '';\r\n      return;\r\n    }\r\n\r\n    //min maxã®å¤ãåæ ããã\r\n    event.target.value = this.setMinMax(event.target.value);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event: any) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.removeComma(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event: any) {\r\n    //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n    this.onBeforeBlur(event);\r\n    \r\n    //ã«ã³ãåºåã\r\n    setTimeout(() => {\r\n      event.target.value = this.toText(event.target.value);\r\n    }, 100);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ã«ã³ãä»ãã®å¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue: string): string {\r\n    inputTargetValue = this.removeComma(inputTargetValue)\r\n    if (!inputTargetValue) return null;\r\n    if (isNaN(Number(inputTargetValue))) return null;\r\n    //æ¡æ°æå®ã§å¤ãä¸¸ãã\r\n    let ret =  parseFloat(parseFloat(inputTargetValue).toFixed(this.decimaldigit)).toString();\r\n    return parseFloat(ret).toLocaleString(undefined, {\r\n      minimumFractionDigits: this.decimaldigit,\r\n      maximumFractionDigits: this.decimaldigit\r\n    });\r\n  }\r\n\r\n  /**\r\n   * min maxãåæ ããå¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public setMinMax(inputTargetValue: string) {\r\n    if (!inputTargetValue) return \"\";\r\n    if (isNaN(Number(inputTargetValue))) return \"\";\r\n    if (parseFloat(inputTargetValue) < this.min) {\r\n      inputTargetValue = this.min.toString();\r\n    }\r\n    if (parseFloat(inputTargetValue) > this.max) {\r\n      inputTargetValue = this.max.toString();\r\n    }\r\n    inputTargetValue =  parseFloat(parseFloat(inputTargetValue).toFixed(this.decimaldigit)).toString();\r\n    return inputTargetValue;\r\n  }\r\n\r\n  /**\r\n   * ã«ã³ããå¤ããå¤ãè¿ã\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public removeComma(inputTargetValue: string) {\r\n    inputTargetValue = new String(inputTargetValue).replace(/,/g, \"\");\r\n    return inputTargetValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, AfterContentChecked, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-sesyu-code',\r\n  templateUrl: './sh-ctl-sesyu-code.component.html',\r\n  styleUrls: ['./sh-ctl-sesyu-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlSesyuCodeComponent extends SHFormControl<string> implements OnInit, AfterContentChecked, OnChanges {\r\n  public obj = \".SHCtlSesyuCode\";\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlSesyuCode\";\r\n    this.maxlength = 11;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.stringValue = this.toText(this.value);\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes.value) return\r\n    if (changes.value.currentValue) {\r\n      this.value = this.toText(changes.value.currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n\r\n    event.target.value = event.target.value.slice(0, this.maxlength);\r\n\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * åé ­é¶å\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    let result = null;\r\n\r\n    if (inputTargetValue.length == 0) {\r\n      result = \"\";\r\n    }\r\n    else if (inputTargetValue.trim().length <= 9) {\r\n      result = ((\"00000000\" + inputTargetValue).slice(-9)) + \"-\" + \"00\";\r\n    }\r\n    else if (inputTargetValue.trim().length <= 11) {\r\n      result = ((\"00000000\" + inputTargetValue.substr(0, 9)).slice(-9)) + \"-\" + ((\"00\" + inputTargetValue.substr(9)).slice(-2));\r\n    }\r\n    else {\r\n      result = inputTargetValue;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ãã¤ãã³é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(/-/g, \"\");\r\n  }\r\n\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  Input,\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from \"../../utilities/ShFormPopup\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { SHCtlPopupDialogComponent } from \"../sh-ctl-popup-dialog/sh-ctl-popup-dialog.component\";\r\nimport { ShCtlConst } from \"../../constShCtl\";\r\nimport { BindCtlService } from \"../../services/bind-ctl.service\";\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\nimport { distinct, takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"sh-ctl-tan-code\",\r\n  templateUrl: \"./sh-ctl-tan-code.component.html\",\r\n  styleUrls: [\"./sh-ctl-tan-code.component.css\", \"../../../style.common.css\"],\r\n})\r\nexport class SHCtlTanCodeComponent\r\n  extends SHFormPopup\r\n  implements OnInit, OnChanges {\r\n  public obj = \".SHCtlTanCode\";\r\n  @Input() enabledHalfKanaInput: boolean = true;\r\n  constructor(\r\n    protected smplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService,\r\n  ) {\r\n    super(smplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlTanCode\";\r\n    this.maxlength = 6;\r\n  }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãã«å¤ããã¤ã³ããããå¾ã§å¼ã³åºããã\r\n   * ãã­ããã£ã®åæå\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.popupWidth) {\r\n      this.extendWidth = this.popupWidth;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    event.target.value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n    if (!this.enabledHalfKanaInput) {\r\n      SHCtlCommon.replaceFullWidth(event);\r\n    }\r\n    event.target.value = event.target.value.replace(\r\n      /[\"ï¼âï¼ï¼ï¼ï¼âï¼ï¼ï¼ï½ï½âï½ï¼ï¼ï½ï¼ï¼ï¼ï¼¿ï¼ï¼¾ï¿¥ï¼ ãï¼ï¼ãããã»\"]/g,\r\n      \"\"\r\n    );\r\n    if (\r\n      event.target.value.length >= 6 &&\r\n      event.inputType != \"deleteContentBackward\"\r\n    ) {\r\n      if (\r\n        isNaN(parseInt(event.target.value)) &&\r\n        event.target.value.length != 7\r\n      ) {\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n    if (event.inputType !== \"insertCompositionText\") {\r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n    let flg = false;\r\n    if (this.noChangeFlg == `OFF`) {\r\n      flg = true;\r\n      if (\r\n        this.SmplPopupService.getMasterData(this.apiUrl).length == 0 &&\r\n        event.target.value\r\n      ) {\r\n        this.fetchCodes(this.apiUrl).then((value) => {\r\n          this.valueChange.emit(value);\r\n          event.target.value = this.toText(event.target.value);\r\n          setTimeout(() => {\r\n            this.onAfterChange(event);\r\n          }, 0);\r\n        });\r\n      } else {\r\n        this.codes = Object(\r\n          this.SmplPopupService.getMasterData(this.apiUrl)\r\n        ).data;\r\n        event.target.value = this.setName(event.target.value);\r\n        this.valueChange.emit(event.target.value);\r\n        setTimeout(() => {\r\n          this.onAfterChange(event);\r\n        }, 0);\r\n      }\r\n    }\r\n    if (!flg) {\r\n      setTimeout(() => {\r\n        // this.noChangeFlg == `OFF`;\r\n        setTimeout(() => {\r\n          this.noChangeFlg = `OFF`;\r\n        }, 1000);\r\n        this.valueChange.emit(event.target.value);\r\n        this.onAfterChange(event);\r\n        event.target.value = this.toText(event.target.value);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n   */\r\n  public openDialog() {\r\n    let extendWidth;\r\n    if (this.codes) {\r\n      if (\r\n        !this.popupWidth &&\r\n        this.codes.length != 0 &&\r\n        Object.values(this.codes[0]).length >= 4\r\n      ) {\r\n        this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n      }\r\n\r\n      let rawCodes;\r\n      let rawCodesArray = [];\r\n      for (let i = 0; this.codes.length > i; i++) {\r\n        rawCodes = this.codes[i].contactCode;\r\n        rawCodesArray.push(rawCodes);\r\n        let code = Object.values(this.codes[i])\r\n          [this.bindColumnKey - 1].toString()\r\n          .substr(2);\r\n        this.codes[i].contactCode = code;\r\n      }\r\n      this.dialogRef = this.dialog.open(SHCtlPopupDialogComponent, {\r\n        height: ShCtlConst.DIALOG_HEIGHT,\r\n        width: extendWidth,\r\n        data: {\r\n          dataTitle: this.dataTitle,\r\n          codes: this.codes,\r\n          codesHeader: this.codesHeader,\r\n          hiddenColumns: this.hiddenColumns,\r\n        },\r\n      });\r\n\r\n      this.dialogRef.afterClosed().subscribe((result) => {\r\n        if (result) {\r\n          this.setValueName(result);\r\n          this.bindCtlService.setNoChangeFlg({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.bindCtlService.setBindValue({\r\n            bindColumnArray: this.bindColumnArray,\r\n            record: result,\r\n          });\r\n          this.noChangeFlg = `ON`;\r\n          this.valueChange.emit(this.extractBindValue(result));\r\n          this.ownValueInputElm.dispatchEvent(new Event(\"change\"));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * é¸æãããåºåã³ã¼ãã«ç´ã¥ãåºååãè¨­å®\r\n   */\r\n  public setName(val) {\r\n    let record: any;\r\n    val = this.toText(val);\r\n    if (val.length == 6) {\r\n      record = this.codes.find((element) =>\r\n        this.toText(Object.values(element)[this.bindColumnKey - 1]).includes(\r\n          val\r\n        )\r\n      );\r\n    }\r\n    if (record != null) {\r\n      const name = Object.values(record)[this.bindColumnValue - 1] as string;\r\n      if (name && val.length == 6) {\r\n        this.setValueName(record);\r\n        this.noChangeFlg = \"ON\";\r\n        this.bindCtlService.setBindValue({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        this.bindCtlService.setNoChangeFlg({\r\n          bindColumnArray: this.bindColumnArray,\r\n          record,\r\n        });\r\n        val = Object.values(record)[this.bindColumnKey - 1];\r\n        const inputElement: HTMLInputElement = this.ownValueInputElm;\r\n        if (inputElement) {\r\n          setTimeout(() => {\r\n            inputElement.value = this.toText(val);\r\n          }, 0);\r\n        }\r\n      }\r\n    } else {\r\n      val = ``;\r\n    }\r\n\r\n    return val;\r\n  }\r\n  public checkValue(value) {\r\n    if (!value) return false;\r\n    if(value.length < 6) {\r\n      this.clearValue();\r\n      return false;\r\n    }\r\n    //let matchedArray = [];\r\n    if (this.codes[0]) {\r\n      const filterResult = this.codes.filter((element) =>\r\n        //this.hasMatchRecords(element, value)\r\n        (Object.values(element)[this.bindColumnKey - 1] as string).includes(\r\n          value\r\n        )\r\n      );\r\n      if (filterResult.length == 0) {\r\n        this.clearValue();\r\n        return false;\r\n      }\r\n\r\n      if (filterResult.length >= 2) {\r\n        alert(value + \"ã«è¤æ°ã®åè£ãæ¤åºããã¾ãã\");\r\n        this.clearValue()\r\n        this.valueChange.emit(\"\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {\r\n      this.onAfterFocus(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {\r\n      this.onAfterBlur(event);\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if (!event.isComposing) {\r\n      event.target.value = this.toHankaku(\r\n        this.hiraganaToKatagana(event.target.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åé ­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    if (inputTargetValue.length === 8) {\r\n      return inputTargetValue.substr(2);\r\n    }\r\n    return inputTargetValue;\r\n  }\r\n\r\n  /**\r\n   * ã²ãããªãã«ã¿ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public hiraganaToKatagana(inputValue) {\r\n    return inputValue.replace(/[\\u3041-\\u3096]/g, function (match) {\r\n      var chr = match.charCodeAt(0) + 0x60;\r\n      return String.fromCharCode(chr);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * å¥åæå­ãåè§ã«ãã«å¤æ\r\n   * @param inputValue\r\n   */\r\n  public toHankaku(inputValue) {\r\n    let half = \"0123456789\";\r\n    half += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    half += \"abcdefghijklmnopqrstuvwxyz\";\r\n    half += \"ï½¡ï½¤ï½¢\\\\ï½£;:ï½¥-+|_@., \";\r\n    half += \"ï½±ï½²ï½³ï½´ï½µï½¶ï½·ï½¸ï½¹ï½ºï½»ï½¼ï½½ï½¾ï½¿ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï¾ï½¦ï¾ï½§ï½¨ï½©ï½ªï½«ï½¯ï½¬ï½­ï½®ï½°\";\r\n    let halfArr = new Array(\r\n      \"ï½³ï¾\",\r\n      \"ï½¶ï¾\",\r\n      \"ï½·ï¾\",\r\n      \"ï½¸ï¾\",\r\n      \"ï½¹ï¾\",\r\n      \"ï½ºï¾\",\r\n      \"ï½»ï¾\",\r\n      \"ï½¼ï¾\",\r\n      \"ï½½ï¾\",\r\n      \"ï½¾ï¾\",\r\n      \"ï½¿ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\",\r\n      \"ï¾ï¾\"\r\n    );\r\n\r\n    let full = \"ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼ï¼\";\r\n    full += \"ï¼¡ï¼¢ï¼£ï¼¤ï¼¥ï¼¦ï¼§ï¼¨ï¼©ï¼ªï¼«ï¼¬ï¼­ï¼®ï¼¯ï¼°ï¼±ï¼²ï¼³ï¼´ï¼µï¼¶ï¼·ï¼¸ï¼¹ï¼º\";\r\n    full += \"ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½ï½\";\r\n    full += \"ãããï¿¥ãï¼ï¼ã»ï¼ï¼ï½ï¼¿ï¼ ï¼ï¼ã\";\r\n    full +=\r\n      \"ã¢ã¤ã¦ã¨ãªã«ã­ã¯ã±ã³ãµã·ã¹ã»ã½ã¿ããããããããããããããããã ã¡ã¢ã¤ã¦ã¨ã©ãªã«ã¬ã­ã¯ã²ã³ã¡ã£ã¥ã§ã©ãã£ã¥ã§ã¼\";\r\n    let fullArr = new Array(\r\n      \"ã´\",\r\n      \"ã¬\",\r\n      \"ã®\",\r\n      \"ã°\",\r\n      \"ã²\",\r\n      \"ã´\",\r\n      \"ã¶\",\r\n      \"ã¸\",\r\n      \"ãº\",\r\n      \"ã¼\",\r\n      \"ã¾\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\",\r\n      \"ã\"\r\n    );\r\n\r\n    let str = \"\";\r\n    //åè§ã«ãç¨\r\n    for (let i = 0; i < halfArr.length; i++) {\r\n      let reg = new RegExp(fullArr[i], \"g\");\r\n      inputValue = inputValue.replace(reg, halfArr[i]);\r\n    }\r\n    for (let i = 0; i < inputValue.length; i++) {\r\n      let oneStr = inputValue.charAt(i);\r\n      let num = full.indexOf(oneStr, 0);\r\n      oneStr = num >= 0 ? half.charAt(num) : oneStr;\r\n      str += oneStr;\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-tel-no',\r\n  templateUrl: './sh-ctl-tel-no.component.html',\r\n  styleUrls: ['./sh-ctl-tel-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTelNoComponent extends SHFormControl<string> implements OnInit {\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlTelNo\";\r\n    this.maxlength = 15;\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.stringValue = this.value;\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-time',\r\n  templateUrl: './sh-ctl-time.component.html',\r\n  styleUrls: ['./sh-ctl-time.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTimeComponent extends SHFormControl<string> implements OnInit {\r\n  public obj: string = \".ShCtlTime\";\r\n  public adjust: number = 1;\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"ç¡å¹ãªæ¥ä»ã§ã\";\r\n  public stringValue: any;\r\n  public isFirst: boolean = true;\r\n  @Input() public format: number = SHCtlCommon.Const.timeFormat.HHMM;\r\n\r\n  //ç´åã®å¤ä¿æ\r\n  private timeStrage: string = null;\r\n\r\n  constructor(  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlTime\";\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      var date = this.value.split(':');\r\n      switch(this.format){\r\n        case SHCtlCommon.Const.timeFormat.HH:\r\n          this.stringValue = `${date[0]}`\r\n          break;\r\n        case SHCtlCommon.Const.timeFormat.HHMM:\r\n          this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : \"00\")}`\r\n          break;\r\n        case SHCtlCommon.Const.timeFormat.HH:\r\n          this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : \"00\")}:${(date.length > 2 ? date[2] : \"00\")}`\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    this.timecalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    let val = event.target.value\r\n    if (val) {\r\n      //HHå½¢å¼ã®å ´å\r\n      if (val.length == 2)\r\n        val += \":00:00\";\r\n      //HHMMå½¢å¼ã®å ´å\r\n      if (val.length == 5)\r\n        val += \":00\";\r\n    }\r\n\r\n    if (this.timeStrage != val) {\r\n      this.onBeforeChange(event);\r\n      this.valueChange.emit(val);\r\n    }\r\n    this.timeStrage = val;\r\n    setTimeout(() => {this.onAfterBlur(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keypress\r\n   */\r\n  public onKeypress(event) {\r\n    this.timecalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n\r\n  }\r\n\r\n  /**\r\n   * ã­ã¼ã¤ãã³ãç³»\r\n   * /ã­ã¼ãæ¼ããã¨ã§ç¾å¨æå»ãã»ãã\r\n   * @param event keypress\r\n   */\r\n  private timecalculation(event) {\r\n    if (event.key === SHCtlCommon.Const.keyCodes.signs[191]) {\r\n      event.target.value = this.setCurrentTime();\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ç¾å¨æå»ã®è¨­å®\r\n   * @param event keypress\r\n   */\r\n  private setCurrentTime() {\r\n    let newDate = new Date();\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = SHCtlCommon.padding(newDate.getHours(), 2); // HH\r\n    nullLastString = SHCtlCommon.padding(newDate.getMinutes(), 2) // HH:MM\r\n    let stringValue = String(nullFirstString + \":\" + nullLastString);\r\n    return stringValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-toku-code',\r\n  templateUrl: './sh-ctl-toku-code.component.html',\r\n  styleUrls: ['./sh-ctl-toku-code.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlTokuCodeComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlTokuCode\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event: any) {\r\n    this.onBeforeChange(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.value = this.toValue(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    event.target.value = this.toText(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * åé ­é¶å\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[a-zA-Z]/g, \"\");\r\n    if (inputTargetValue.length == 0) {\r\n      return \"\";\r\n    }\r\n    else if (inputTargetValue.length > 9) {\r\n      return inputTargetValue;\r\n    }\r\n    let result = ((\"00000000\" + inputTargetValue).slice(-9));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * é¶é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[a-zA-Z]/g, \"\");\r\n    return inputTargetValue;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-wide-char',\r\n  templateUrl: './sh-ctl-wide-char.component.html',\r\n  styleUrls: ['./sh-ctl-wide-char.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlWideCharComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlWideChar\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.maxByteLength % 2 != 0)\r\n      this.maxByteLength = this.maxByteLength - 1;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n\r\n    if (event.inputType !== 'insertCompositionText') {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.onKeyUp(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalf(event);\r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyDown(event) {\r\n    if (this.maxByteLength > 0)\r\n      super.onKeyDown(event);\r\n    if ( !event.isComposing ) { \r\n      SHCtlCommon.replaceHalf(event);\r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-wide-char-ml',\r\n  templateUrl: './sh-ctl-wide-char-ml.component.html',\r\n  styleUrls: ['./sh-ctl-wide-char-ml.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlWideCharMLComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  //å¥åå¤ææãè£è¶³ããããã®å¤ä¿æ\r\n  private _data =\"\";\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlWideCharML\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (this.maxByteLength % 2 != 0)\r\n      this.maxByteLength = this.maxByteLength - 1;\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    const isSameData = (this._data == event.data);\r\n    this._data = event.data;\r\n    //å¥åå¤æä¸­ã¯æ¸ãæããè¡ããªã\r\n    if(event.isComposing && (!event.isComposing || !isSameData))\r\n      return;\r\n\r\n    if (event.inputType !== 'insertCompositionText') {\r\n      SHCtlCommon.sliceLength(event, this.maxlength);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //emitã®ç´åã«ãå¤ã®ç²¾æ»ãè¡ã\r\n    this.onInput(event);\r\n    this.onKeyUp(event);\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (event.target.value == undefined) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return;\r\n    };\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onKeyUp\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyUp(event) {\r\n    if ( !event.isComposing ) {\r\n      SHCtlCommon.replaceHalf(event);\r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onKeyDown\r\n   * @param event KeyUp\r\n   */\r\n  public onKeyDown(event) {\r\n    if (this.maxByteLength > 0)\r\n      super.onKeyDown(event);\r\n    if ( !event.isComposing ) {\r\n      SHCtlCommon.replaceHalf(event);\r\n      SHCtlCommon.replaceHalfSpaceToFull(event);\r\n      SHCtlCommon.replaceHalfKana(event);\r\n      SHCtlCommon.replaceFullDoubleQuote(event);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  AfterViewInit\r\n} from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SHFormControl } from \"../../utilities/ShFormControl\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {\r\n  MomentDateAdapter,\r\n  MAT_MOMENT_DATE_ADAPTER_OPTIONS\r\n} from \"@angular/material-moment-adapter\";\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MAT_DATE_LOCALE,\r\n  NativeDateAdapter\r\n} from \"@angular/material/core\";\r\nimport { MatDatepicker } from \"@angular/material/datepicker\";\r\nimport * as _moment from \"moment\";\r\nimport { Moment } from \"moment\";\r\n\r\nconst moment = _moment;\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: \"MM/YYYY\"\r\n  },\r\n  display: {\r\n    dateInput: \"MM/YYYY\",\r\n    monthYearLabel: \"MMM YYYY\",\r\n    dateA11yLabel: \"LL\",\r\n    monthYearA11yLabel: \"MMMM YYYY\"\r\n  }\r\n};\r\n\r\ntype yearAndMonth = {\r\n  year: number;\r\n  month: number;\r\n};\r\n\r\n@Component({\r\n  selector: \"sh-ctl-year-month\",\r\n  templateUrl: \"./sh-ctl-year-month.component.html\",\r\n  styleUrls: [\"./sh-ctl-year-month.component.css\", \"../../../style.common.css\"],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useValue: {\r\n        parse: {\r\n          dateInput: \"YYYY-MM\"\r\n        },\r\n        display: {\r\n          dateInput: \"YYYY-MM\",\r\n          monthYearLabel: \"MMM YYYY\",\r\n          dateA11yLabel: \"LL\",\r\n          monthYearA11yLabel: \"MMMM YYYY\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n})\r\nexport class SHCtlYearMonthComponent extends SHFormControl<string>\r\n  implements OnInit, OnChanges, AfterViewInit {\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"æ¥ä»ã«èª¤ããããã¾ãã\";\r\n  public adjust: any;\r\n  public stringValue: any;\r\n  public cache: yearAndMonth = { year: null, month: null };\r\n  public date = new FormControl(moment());\r\n  @Input() public max = \"9999-12\";\r\n  @Input() public min = \"1000-12\";\r\n  constructor(private dataAdapter: DateAdapter<NativeDateAdapter>,\r\n              private el: ElementRef,\r\n              ) {\r\n    super();\r\n    this.ctlName = \"SHCtlYearMonth\";\r\n    dataAdapter.setLocale(\"ja\");\r\n  }\r\n\r\n  /**\r\n   * DatePickerã®yearé¸ææã®ãã³ãã©ã¼\r\n   * @param normalizedYear \r\n   */\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    this.cache.year = normalizedYear.year();\r\n  }\r\n\r\n  /**\r\n   * DatePickerã®monthé¸ææã®ãã³ãã©ã¼\r\n   * @param normalizedMonth \r\n   * @param datepicker \r\n   */\r\n  chosenMonthHandler(\r\n    normalizedMonth: Moment,\r\n    datepicker: MatDatepicker<Moment>\r\n  ) {\r\n    this.cache.month = normalizedMonth.month() + 1;\r\n    datepicker.close();\r\n    this.setValue();\r\n    let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n    setTimeout(function(){inputValue.dispatchEvent(new Event('change'));},10);   \r\n    this.valueChange.emit(this.toValue(this.value));\r\n  }\r\n\r\n  /**\r\n   * DatePickerããåå¾ããå¤ãvalueã¸ã»ãããã\r\n   */\r\n  public setValue() {\r\n    const yearAndMonth =\r\n      this.cache.year.toString() + this.cache.month.toString();\r\n    this.value = this.toText(yearAndMonth);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (!changes.value) {\r\n      return;\r\n    }\r\n    if (!changes.value.currentValue) {\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (changes.value.currentValue.length >= 7) {\r\n      this.value = \"\";\r\n      return;\r\n    }\r\n    if (changes.value.currentValue) {\r\n      this.value = this.toText(changes.value.currentValue);\r\n    }\r\n  }\r\n\r\n  public getYearAndManth(date: any) {\r\n    if (!date) return;\r\n    const val = new Date(date).toLocaleDateString().split('/')\r\n    const year = val[0];\r\n    const month = val[1];\r\n    return `${year}${month}`;\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null && this.isDisabled) {\r\n      this.changeFormat(this.value.replace(\"-\", \"\"));\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n    if(!this.isDisabled) {\r\n      let element = <HTMLElement>this.el.nativeElement.querySelector('input');\r\n      element.setAttribute(\"max\", this.max);\r\n      element.setAttribute(\"min\", this.min);  \r\n    }\r\n  }\r\n\r\n  /**\r\n   * onOpened\r\n   */\r\n  public onOpened() {\r\n    let el = document.querySelector(\"mat-datepicker-content\");\r\n    el.addEventListener(\"focusin\", () => {\r\n      this.isfocused = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * onClosed\r\n   */\r\n  public onClosed() {\r\n    let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n    setTimeout(function(){inputValue.dispatchEvent(new Event('focus'));},0);  \r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    this.yearAndMonthCalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onKeypress\r\n   * @param event keypress\r\n   */\r\n  public onKeypress(event) {\r\n    this.yearAndMonthCalculation(event);\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(this.toValue(event.target.value));\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    this.value = this.toText(event.target.value);\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * å¹´æè¨ç®\r\n   * @param event \r\n   */\r\n  private yearAndMonthCalculation(event) {\r\n    let key = this.isKeysAllowedToMe(event);\r\n    if (key === 0) {\r\n      this.setCurrentDate(event);\r\n      this.onChange(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * èªã¿ã¤ãã«è¨±å®¹ããã¦ããã­ã¼\r\n   * @param event keypress\r\n   */\r\n  private isKeysAllowedToMe(event: any) {\r\n    if (event.key === SHCtlCommon.Const.keyCodes.signs[191]) {\r\n      return 0;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * æ¬æ¥æ¥ä»ã®è¨­å®\r\n   * @param event keypress\r\n   */\r\n  public setCurrentDate(event) {\r\n    let newDate = new Date();\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = SHCtlCommon.padding(newDate.getFullYear(), 4); // YYYY\r\n    nullLastString = SHCtlCommon.padding(newDate.getMonth() + 1, 2); // MM\r\n    event.target.value = String(nullFirstString + \"-\" + nullLastString);\r\n  }\r\n\r\n  /**\r\n   * æ¥é ­èªä»ä¸\r\n   * @param inputTargetValue num.substr(0, 2)\r\n   */\r\n  public convYear(inputTargetValue) {\r\n    if (inputTargetValue >= \"00\" && inputTargetValue <= 49) {\r\n      return \"20\" + inputTargetValue;\r\n    } else {\r\n      return \"19\" + inputTargetValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * YYYY/MMå¦ç\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toText(inputTargetValue) {\r\n    let num = inputTargetValue.toString().replace(/\\//g, \"\");\r\n    if (num.trim().length === 0) {\r\n      return \"\";\r\n    }\r\n    // 4æ¡è¥¿æ¦\r\n    if (num.length === 3 || num.length === 4) {\r\n      // // æ¥é ­èªåå¾\r\n      return SHCtlCommon.padding(num, 4) + \"-01\";\r\n    } else if (num.length === 5 || num.length === 6) {\r\n      // æ¥é ­èªåå¾\r\n      let year = num.substr(0, 4) + \"-\" + (\"00\" + num.substr(4)).slice(-2);\r\n      return year;\r\n    } else {\r\n      return inputTargetValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ¥ç¶æå­é¤å»\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public toValue(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(\"-\", \"\");\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeFormat(value) {\r\n\r\n    if (value != null && value != undefined && value.length === 6) {\r\n      let nullFirstString = null;\r\n      let nullLastString = null;\r\n      nullFirstString = value.slice(0, 4);\r\n      nullLastString = value.slice(4, 6);\r\n      this.stringValue = String(nullFirstString + \"å¹´\" + nullLastString + \"æ\");\r\n      return this.stringValue;\r\n    } else {\r\n      this.stringValue = '';\r\n      return this.stringValue;\r\n    }\r\n\r\n  }\r\n}","import { Component, OnInit, OnChanges, SimpleChanges, AfterContentChecked } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-zip-no',\r\n  templateUrl: './sh-ctl-zip-no.component.html',\r\n  styleUrls: ['./sh-ctl-zip-no.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlZipNoComponent extends SHFormControl<string> implements OnChanges, OnInit, AfterContentChecked {\r\n  public isValidateError: boolean = false;\r\n  public errorMessage: string = \"3æ¡ã7æ¡ã®ã¿æå¹ã§ãã\";\r\n  public stringValue: any;\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlZipNo\";\r\n    this.maxlength = 7;\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if(changes.value.currentValue) {\r\n        if (changes.value.currentValue != changes.value.previousValue\r\n          && changes.value.currentValue.length == this.maxlength) {\r\n          this.value = this.withHyphen(changes.value.currentValue)\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.onInit();\r\n\r\n  }\r\n\r\n  public ngAfterContentChecked() {\r\n    if (this.value != null) {\r\n      this.changeFormat(this.value);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFUllSpace(event);\r\n    SHCtlCommon.replaceSign(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    SHCtlCommon.sliceLength(event, this.maxlength);\r\n\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    if (!event.target.value) {\r\n      setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n      return;\r\n    }\r\n    event.target.value = this.withoutHyphen(event.target.value)\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n    return true;\r\n\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    if (!event.target.value) {\r\n      setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n      return;\r\n    }\r\n\r\n    event.target.value = this.withHyphen(event.target.value)\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    //å¥åæ¡æ°ãééã£ã¦ããå ´åã«ãèªã³ã³ãã¼ãã³ãã«ãã©ã¼ã«ã¹ãæ»ã\r\n    if (event.target.value.length != 0 && event.target.value.length != 3 && event.target.value.length != 7) {      \r\n      event.target.value = \"\";\r\n      let inputValue = <HTMLInputElement>document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`);\r\n      setTimeout(() => {inputValue.focus();}, 10);\r\n    }\r\n\r\n    this.valueChange.emit(event.target.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n  \r\n  /**\r\n   * ãã¤ãã³ä»ä¸ç·¨é\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public withHyphen(inputTargetValue): string {\r\n    inputTargetValue = inputTargetValue.replace(/\\ |\\-/g, \"\");\r\n\r\n    if (SHCtlCommon.isBlank(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    inputTargetValue = inputTargetValue.replace(/[!\"#$%&'()\\*\\+\\.,\\/:;<=>?@\\[\\\\\\]^_`{|}~a-zA-Z]/g, \"\");\r\n    inputTargetValue = inputTargetValue.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\");\r\n    if (isNaN(inputTargetValue)) {\r\n      return \"\";\r\n    }\r\n    let zipcd = inputTargetValue.toString();\r\n    if (zipcd.match(/^\\d{3}-?\\d{4}$/)) {\r\n      zipcd = zipcd.substr(0, 3) + \"-\" + zipcd.substr(3)\r\n    }\r\n    return zipcd;\r\n\r\n  }\r\n\r\n  /**\r\n   * ãã¤ãã³é¤å»ç·¨é\r\n   * @param inputTargetValue event.target.value\r\n   */\r\n  public withoutHyphen(inputTargetValue) {\r\n    return new String(inputTargetValue).replace(/-/g, \"\");\r\n\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeFormat(value) {\r\n    if (!value) {\r\n      this.stringValue = \"\";\r\n      return;\r\n    }\r\n    let nullFirstString = null;\r\n    let nullLastString = null;\r\n    nullFirstString = value.slice(0, 3);\r\n    nullLastString = value.slice(-4);\r\n    this.stringValue = String(nullFirstString + \"-\" + nullLastString);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShCtlApiService } from './sh-ctl-api.service';\r\nimport { SmplKbnStore } from '../entities/SmplKbnStore';\r\nimport { SmplKbnCodeType } from '../entities/SmplKbnCodeType';\r\n\r\n/**\r\n * åºåãã¹ã¿ã®æå ±ãåå¾\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmplKbnCodeService {\r\n\r\n  constructor(\r\n    private apiComService: ShCtlApiService,\r\n  ) { }\r\n\r\n  //åºåãã¹ã¿\r\n  private masterCache: SmplKbnStore[] = [];\r\n\r\n  /**\r\n   * åºåãã¹ã¿åå¾\r\n   */\r\n  public async fetchAll(url: string): Promise<SmplKbnCodeType[]> {\r\n    return this.apiComService.get<SmplKbnCodeType[]>(url);\r\n\r\n  }\r\n\r\n  /**\r\n   * æå®ãããã¹ã¿ã®ã­ã£ãã·ã¥ãã¦ãããã¼ã¿ãåå¾\r\n   * @param key ãã¹ã¿ã®åå\r\n   */\r\n  public getMasterData(key: string): SmplKbnCodeType[] {\r\n    let cache = this.masterCache.filter(item => {\r\n      return item.masterName == key\r\n    })\r\n    return cache.length > 0 ? cache[0].masterCache : [];\r\n  }\r\n\r\n  /**\r\n   * ãã¹ã¿ãã¼ã¿ãã­ã£ãã·ã¥ãã\r\n   * @param key ãã¹ã¿ã®åå\r\n   * @param masterData ãã¹ã¿ãã¼ã¿\r\n   */\r\n  public setMasterData(key: string, masterData: SmplKbnCodeType[]) {\r\n    if (this.masterCache.length > 0) {\r\n      for (let item of this.masterCache) {\r\n        if (item.masterName == key) {\r\n          item.masterCache = masterData\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.masterCache = this.masterCache.concat([{ masterName: key, masterCache: masterData }]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { SmplKbnCodeType } from \"../../entities/SmplKbnCodeType\";\r\nimport { SmplKbnCodeService } from \"../../services/smpl-kbn-code.service\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-kbn-radio\",\r\n  templateUrl: \"./sh-ctl-kbn-radio.component.html\",\r\n  styleUrls: [\"./sh-ctl-kbn-radio.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlKbnRadioComponent extends SHFormControl<string> implements OnInit, OnChanges {\r\n  @Input() public dataKbnName: string = \"\";\r\n  @Input() public radioContent: any = \"\";\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  @Input() public displayLabel: string = \"\";\r\n  @Output() public throwError = new EventEmitter();\r\n\r\n  public name: string = \"\";\r\n  public kbnCodes: SmplKbnCodeType[];\r\n\r\n  constructor(private SmplKbnRadioService: SmplKbnCodeService) {\r\n    super();\r\n    this.ctlName = \"SHCtlKbnRadio\";\r\n  }\r\n \r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (!this.items) {\r\n      if (this.SmplKbnRadioService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplKbnRadioService.fetchAll(this.apiUrl).then(response => {\r\n          this.kbnCodes = response;\r\n          this.SmplKbnRadioService.setMasterData(this.apiUrl, response);\r\n        });\r\n      } else {\r\n        if (this.SmplKbnRadioService.getMasterData(this.apiUrl).length > 0)\r\n          this.kbnCodes = this.SmplKbnRadioService.getMasterData(this.apiUrl);\r\n      }\r\n    } else {\r\n      this.kbnCodes = this.items;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ngOnChanges\r\n   */\r\n  public ngOnChanges(change: SimpleChanges) {\r\n    if(change.items && change.items.currentValue) {\r\n      this.kbnCodes = change.items.currentValue;\r\n    }\r\n    if (change.value) {\r\n      if (change.value.currentValue) {\r\n        this.value = change.value.currentValue.toString();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event: any) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeRadioContent(item) {\r\n    this.radioContent = item;\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { SmplKbnCodeType } from \"../../entities/SmplKbnCodeType\";\r\nimport { SmplKbnCodeService } from \"../../services/smpl-kbn-code.service\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: \"sh-ctl-kbn-select\",\r\n  templateUrl: \"./sh-ctl-kbn-select.component.html\",\r\n  styleUrls: [\"./sh-ctl-kbn-select.component.css\", \"../../../style.common.css\"]\r\n})\r\nexport class SHCtlKbnSelectComponent extends SHFormControl<string> implements OnInit {\r\n  @Input() public dataKbnName: string = \"\";\r\n  @Input() public selectContent: any = \"\";\r\n  @Input() public apiUrl: string = \"/api/\";\r\n  @Input() public hiddenClearButton: boolean = false;\r\n  @Output() public throwError = new EventEmitter();\r\n\r\n  public name: string = \"\";\r\n  public event: any;\r\n  public kbnCodes: SmplKbnCodeType[];\r\n  public uniqueStr = \"\";\r\n\r\n  constructor(\r\n    private SmplKbnSelectService: SmplKbnCodeService,\r\n    ) {\r\n    super();\r\n    this.ctlName = \"SHCtlKbnSelect\";\r\n  }\r\n\r\n  /**\r\n   *ãã­ããã£ã®åæå\r\n   *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n   */\r\n  public ngOnInit() {\r\n    this.onInit();\r\n    if (!this.items) {\r\n      if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplKbnSelectService.fetchAll(this.apiUrl).then(response => {\r\n          this.kbnCodes = response;\r\n          this.SmplKbnSelectService.setMasterData(this.apiUrl, response);\r\n        });\r\n      } else {\r\n        if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)\r\n          this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);\r\n      }\r\n      if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)\r\n        this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);\r\n    } else {\r\n      this.kbnCodes = this.items;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *itemsã®å¤æ´æ¤ç¥\r\n   *ä¸ä½ã³ã³ãã¼ãã³ãããitemsã«å¤ãæ³¨å¥ããã¦ãããæ¤ç¥ãå¤æ´ãã\r\n   */\r\n  ngOnChanges(change: SimpleChanges) {\r\n    if (change.items) {\r\n      if (change.items.currentValue) {\r\n          this.kbnCodes = change.items.currentValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange() {\r\n    this.onBeforeChange(event);\r\n    \r\n    this.valueChange.emit(this.value);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n  /**\r\n   * ãã©ã¼ãããç·¨é\r\n   * @param value this.value\r\n   */\r\n  public changeSelectContent(item) {\r\n    this.selectContent = item;\r\n  }\r\n\r\n  /**\r\n   * å¤ã®ã¯ãªã¢\r\n   */\r\n  public clearValue() {\r\n    this.value = null;\r\n    this.onChange();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges } from \"@angular/core\";\r\nimport { SHCtlCommon } from \"../sh-ctl-common\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { SHFormPopup } from '../../utilities/ShFormPopup';\r\nimport { BindCtlService } from '../../services/bind-ctl.service';\r\nimport { LockScreenService } from \"../../services/lock-screen.service\";\r\n\r\n@Component({\r\n  selector: 'sh-ctl-popup',\r\n  templateUrl: './sh-ctl-popup.component.html',\r\n  styleUrls: ['./sh-ctl-popup.component.css', '../../../style.common.css']\r\n})\r\nexport class ShCtlPopupComponent extends SHFormPopup implements OnInit, OnChanges {\r\n\r\n  constructor(\r\n    protected SmplPopupService: SmplPopupService,\r\n    protected dialog: MatDialog,\r\n    protected bindCtlService: BindCtlService,\r\n    protected lockScreenService: LockScreenService\r\n  ) {\r\n    super(SmplPopupService, dialog, bindCtlService, lockScreenService);\r\n    this.ctlName = \"SHCtlPopup\";\r\n    \r\n  }\r\n  \r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event) {\r\n    SHCtlCommon.replaceSpace(event);\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceSign(event);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { SmplPopupService } from \"../../services/smpl-popup.service\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material\";\r\nimport { SHFormControl } from '../../utilities/ShFormControl';\r\nimport { SHCtlPopupDialogMultiComponent } from '../sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component';\r\nimport { ShCtlConst } from '../../constShCtl';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-popup-multi',\r\n  templateUrl: './sh-ctl-popup-multi.component.html',\r\n  styleUrls: ['./sh-ctl-popup-multi.component.css', '../../../style.common.css']\r\n})\r\nexport class ShCtlPopupMultiComponent extends SHFormControl<any> implements OnInit {\r\n    //ãã¼ã¿ã¿ã¤ãã«å\r\n    @Input() public dataTitle: string = \"\";\r\n    //API URL\r\n    @Input() public apiUrl: string = \"/api/\";\r\n    //ãã¼ã¿ã­ã£ãã·ã¥ON/OFFæ©è½ãã©ã°\r\n    @Input() public dataCache: boolean = false;\r\n    //ã­ã¼ã¨ãªãåçªå·(èµ·åæã®ãã§ãã¯ãå¥ããããã®ã­ã¼å¤å®åºæºã«ãªãã¾ãã)\r\n    @Input() public uniqueColumns:number[] = [1];\r\n    //ãããã¢ããä¸éè¡¨ç¤ºã¨ãªãåçªå·\r\n    @Input() public hiddenColumns:number[] = [];\r\n     // ãã¤ã¢ã­ã°ã®å¹ãæå®\r\n     @Input() public popupWidth: string;\r\n     public extendWidth = ShCtlConst.DIALOG_WIDTH;\r\n    //Dialogã®çµæãåãåã\r\n    public dialogRef: MatDialogRef<SHCtlPopupDialogMultiComponent,any> = null;\r\n\r\n    public codes = [];\r\n    public codesHeader = [];\r\n\r\n    constructor(\r\n      protected SmplPopupService: SmplPopupService,\r\n      protected dialog: MatDialog,\r\n    ) {\r\n      super();\r\n      this.ctlName = \"SHCtlPopupMulti\";\r\n    }\r\n\r\n    /**\r\n     * ãã¤ã¢ã­ã°ãéãã¦éããæã«å¤ãè¦ªã«è¿ã\r\n     */\r\n    public openDialog() {\r\n      if (this.codes) {\r\n        if (!this.popupWidth && this.codes.length != 0 && Object.values(this.codes[0]).length >= 4) {\r\n          this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n        }\r\n        this.dialogRef = this.dialog.open(SHCtlPopupDialogMultiComponent, {\r\n          height: ShCtlConst.DIALOG_HEIGHT,\r\n          width: this.extendWidth,\r\n          data: { \r\n              dataTitle: this.dataTitle,\r\n              value: this.value,\r\n              uniqueColumns: this.uniqueColumns,\r\n              hiddenColumns: this.hiddenColumns,\r\n          }\r\n        });\r\n        this.dialogRef.afterClosed().subscribe(result => {\r\n          if (result != undefined)\r\n            this.valueChange.emit(result);\r\n        });\r\n      }  \r\n    }\r\n    \r\n    /**\r\n     *ãã­ããã£ã®åæå\r\n     *éå¸¸ãµã¼ãã¹ã«ã­ã£ãã·ã¥ãã¦ããããç¡ããã°ååº¦ãã¹ã¿ããåå¾\r\n     */\r\n    public ngOnInit() {\r\n      this.onInit();\r\n      if(this.popupWidth) {\r\n        this.extendWidth = this.popupWidth\r\n      }  \r\n      // //ã¦ãã¼ã¯ãªæå­å\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length >= 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then(response => {\r\n          this.codes = response.data;\r\n          if (response.header == null) {\r\n            return\r\n          }\r\n          this.codesHeader = Object.values(response.header);\r\n          this.dataTitle = response.title;\r\n        });\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * ãã¹ã¿æå ±ããã³ã¼ããåå¾\r\n     */\r\n    public getCodes() {\r\n      this.openDialog();\r\n      if (this.SmplPopupService.getMasterData(this.apiUrl).length == 0) {\r\n        this.SmplPopupService.fetchAll(this.apiUrl).then(response => {\r\n          this.codes = response.data;\r\n          this.codesHeader = Object.values(response.header);\r\n          this.dataTitle = response.title;\r\n          if (this.dataCache)\r\n            this.SmplPopupService.setMasterData(this.apiUrl, response);\r\n        });\r\n        if (this.dialogRef.componentInstance) {\r\n          this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n          this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n          this.dialogRef.componentInstance.codes = this.codes;\r\n          if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n          }\r\n          let cols = [];\r\n          this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n              if (!this.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n          });\r\n          this.dialogRef.componentInstance.displayedColumns = cols;    \r\n        }\r\n      } else {\r\n        this.codes = Object(this.SmplPopupService.getMasterData(this.apiUrl)).data;\r\n        this.codesHeader = Object.values(Object(this.SmplPopupService.getMasterData(this.apiUrl)).header);\r\n        if (this.dialogRef.componentInstance) {\r\n          this.dialogRef.componentInstance.codesHeader = this.codesHeader;\r\n          this.dialogRef.componentInstance.unchangeableCodes = this.codes;\r\n          this.dialogRef.componentInstance.codes = this.codes;\r\n          if (!this.popupWidth && Object.values(this.codes[0]).length >= 4) {\r\n            this.extendWidth = ShCtlConst.DIALOG_MAX_WIDTH;\r\n          }\r\n          let cols = [];\r\n          this.dialogRef.componentInstance.getHashKeys().forEach((name, idx) => {\r\n              if (!this.hiddenColumns.find(_ => _ == (idx + 1))) cols.push(name);\r\n          });\r\n          this.dialogRef.componentInstance.displayedColumns = cols;    \r\n        }\r\n      }\r\n    }\r\n  \r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ValidationErrorService } from 'sh-http-client';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-validated-error',\r\n  templateUrl: './sh-ctl-validated-error.component.html',\r\n  styleUrls: ['./sh-ctl-validated-error.component.css']\r\n})\r\nexport class ShCtlValidatedErrorComponent implements OnInit, OnDestroy {\r\n  @Input() message: string;\r\n  @Input() isError: boolean = false;\r\n  @Input() errors: string[];\r\n  private subscription: Subscription;\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor(\r\n    private validationErrorService: ValidationErrorService\r\n  ) { }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãåæå\r\n   */\r\n  public ngOnInit() {\r\n    this.subscription = this.validationErrorService.validationErrorState\r\n      .subscribe(response => {\r\n        if (response.show) {\r\n          this.isError = true;\r\n          this.errors = [];\r\n          Object.keys(response.meesages).forEach(controlName => {\r\n            this.errors = [...this.errors, ...response.meesages[controlName]];\r\n          });\r\n        } else {\r\n          this.isError = false;\r\n          this.errors = [];\r\n        }\r\n      });\r\n  }\r\n  public ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SHCtlCommon } from '../sh-ctl-common';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-half-number',\r\n  templateUrl: './sh-ctl-half-number.component.html',\r\n  styleUrls: ['./sh-ctl-half-number.component.css', '../../../style.common.css']\r\n})\r\nexport class SHCtlHalfNumberComponent extends SHFormControl<string> implements OnInit {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ctlName = \"SHCtlHalfNumber\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * onInput\r\n   * @param event input\r\n   */\r\n  public onInput(event: any) {\r\n    SHCtlCommon.replaceFullWidth(event);\r\n    SHCtlCommon.replaceHalfWidth(event);\r\n    if (event.inputType !== 'insertCompositionText') {  \r\n      SHCtlCommon.replaceSpace(event);\r\n      SHCtlCommon.replaceFUllSpace(event);\r\n      SHCtlCommon.replaceSign(event);\r\n      SHCtlCommon.replaceFullWidth(event);\r\n      SHCtlCommon.replaceHalfWidth(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n public onChange(event) {\r\n  this.onBeforeChange(event);\r\n  \r\n  this.valueChange.emit(event.target.value.replace(/[^\\x01-\\x7E\\xA1-\\xDF]/g, \"\"));\r\n\r\n  setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { SHFormControl } from '../../utilities/ShFormControl'\r\n\r\n@Component({\r\n  selector: 'sh-ctl-check',\r\n  templateUrl: './sh-ctl-check.component.html',\r\n  styleUrls: ['./sh-ctl-check.component.css', '../../../style.common.css']\r\n})\r\n\r\nexport class SHCtlCheckComponent extends SHFormControl<string> implements OnInit, OnChanges {\r\n\r\n  //ã©ãã«å\r\n  @Input() public checkedLabel: string = \"\";  \r\n  //ã©ãã«ä½ç½®(ãã§ãã¯ããã¯ã¹ã®åã)\r\n  @Input() public beforeAlign: boolean = false;\r\n  //ãã§ãã¯ããã¯ã¹ã®ãã§ãã¯æã®å¤\r\n  @Input() public checkedValue: string = \"1\";\r\n  //ãã§ãã¯ããã¯ã¹ã®æªãã§ãã¯æã®å¤\r\n  @Input() public uncheckedValue: string = \"0\";\r\n\r\n  constructor(  ) {\r\n    super();\r\n    this.ctlName = \"SHCtlCheck\";\r\n  }\r\n\r\n  public setLabelPosition() {\r\n    return this.beforeAlign ? 'before' : 'after';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onInit();\r\n  }\r\n\r\n  /**\r\n   * ngOnChangesã¤ãã³ã\r\n   */\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      if (changes.value.currentValue) {\r\n        if (changes.value.currentValue === '' || changes.value.currentValue === undefined || changes.value.currentValue === String(/[^\\x01-\\x7E\\xA1-\\xDF]+$/g)) {\r\n          this.value = '';\r\n          return;\r\n        }\r\n        this.value = changes.value.currentValue == this.checkedValue ? \"checked\" : \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onClick\r\n   * @param event click\r\n   */\r\n  public onClick(event) {\r\n    this.onBeforeClick(event);\r\n\r\n    this.onAfterClick(event);\r\n  }\r\n\r\n  /**\r\n   * onChange\r\n   * @param event change\r\n   */\r\n  public onChange(event) {\r\n    this.onBeforeChange(event);\r\n\r\n    this.valueChange.emit(event.checked ? this.checkedValue :  this.uncheckedValue);\r\n\r\n    setTimeout(() => {this.onAfterChange(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onFocus\r\n   * @param event focus\r\n   */\r\n  public onFocus(event) {\r\n    this.onBeforeFocus(event);\r\n\r\n    event.target.select();\r\n\r\n    setTimeout(() => {this.onAfterFocus(event)}, 0);\r\n  }\r\n\r\n  /**\r\n   * onBlur\r\n   * @param event blur\r\n   */\r\n  public onBlur(event) {\r\n    this.onBeforeBlur(event);\r\n\r\n    setTimeout(() => {this.onAfterBlur(event);}, 0);;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LockScreenService } from '../../services/lock-screen.service';\r\n\r\n@Component({\r\n  selector: 'sh-ctl-lock-screen',\r\n  templateUrl: './sh-ctl-lock-screen.component.html',\r\n  styleUrls: ['./sh-ctl-lock-screen.component.css']\r\n})\r\nexport class SHCtlLockScreenComponent implements OnInit {\r\n  public isConnecting: boolean = false;\r\n\r\n  /**\r\n  * ã³ã³ã¹ãã©ã¯ã¿\r\n  */\r\n  constructor(\r\n    private lockScreen: LockScreenService\r\n  ) { }\r\n\r\n  /**\r\n  * ã³ã³ãã¼ãã³ãåæå\r\n  */\r\n  public ngOnInit() {\r\n    this.lockScreen.isConnectingState.subscribe(\r\n      isConnecting => {\r\n        this.isConnecting = isConnecting;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n//Dateåã®ãã¼ã¿ãsh-ctl-dateã§æ±ãå½¢å¼ã®ãªãã¸ã§ã¯ãã«å¤æ\r\n@Pipe({\r\n  name: 'ngDateValue'\r\n})\r\nexport class NgDateValuePipe implements PipeTransform {\r\n  transform(value: Date): any {\r\n    if (value != null) {\r\n      return {\r\n        year: value.getFullYear(),\r\n        month: value.getMonth() + 1,\r\n        day: value.getDate()\r\n      };\r\n    }\r\n    return null;\r\n    \r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ShFlexRow]'\r\n})\r\nexport class ShFlexRowDirective implements OnInit {\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    ) { }\r\n\r\n  ngOnInit(){\r\n    this.init();\r\n  }\r\n  private init(){\r\n    this.el.nativeElement.style.flexFlow = \"row wrap\";\r\n    this.el.nativeElement.style.display = \"flex\";\r\n    this.el.nativeElement.style.boxSizing = \"border-box\";\r\n    this.el.nativeElement.style.margin = \"0px -1rem -1rem 0px\";\r\n  }\r\n}","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ShFlex]'\r\n})\r\nexport class ShFlexDirective implements OnInit {\r\n  /**\r\n   * æå¤§\r\n   */\r\n  @Input() colLg: number = 16.6\r\n  private ctlLgFlex: string = `1 1 ${this.colLg}%`;\r\n  private ctlLgMaxWidth: string = `${this.colLg}%`;\r\n  /**\r\n   * ipad ~ p\r\n   */\r\n  @Input() colMd: number = 33.3\r\n  private ctlMdFlex: string = `1 1 ${this.colMd}%`;\r\n  private ctlMdMaxWidth: string = `${this.colMd}%`;\r\n  /**\r\n   * mobile\r\n   */\r\n  @Input() colSm: number = 100\r\n  private ctlSmFlex: string = `1 1 ${this.colSm}%`;\r\n  private ctlSmMaxWidth: string = `${this.colSm}%`;\r\n  //ã¡ãã£ã¢ã¯ã¨ãªé¾å¤\r\n  private mediaSm: string = \"(max-width: 768px)\"\r\n  private mediaMd: string = \"(max-width: 1024px)\";\r\n  //ãã®ä»è¨­å®ãã¦ããããã¹ã¿ã¤ã«\r\n  private ctlWidth: string = \"100%\";\r\n  private ctlBoxSizing: string = \"border-box\";\r\n  private ctlPadding: string = \"0px 1rem 1rem 0px\";\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    //ä¸ããä»»æã®å¤ãè¨­å®ããå ´åããã§å¤ãåè¨­å®ãã¦ãããªãã¨\r\n    //æå³ããæåã«ãªããªãã®ã§æ¶ããªã\r\n    this.initParam();\r\n    this.initStyle();\r\n    window.addEventListener('resize', () => {\r\n      this.initStyle()\r\n    })\r\n  }\r\n  private initParam() {\r\n    this.ctlLgFlex = `1 1 ${this.colLg}%`;\r\n    this.ctlLgMaxWidth = `${this.colLg}%`;\r\n    this.ctlMdFlex = `1 1 ${this.colMd}%`;\r\n    this.ctlMdMaxWidth = `${this.colMd}%`;\r\n    this.ctlSmFlex = `1 1 ${this.colSm}%`;\r\n    this.ctlSmMaxWidth = `${this.colSm}%`;\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n  }\r\n  private initStyle() {\r\n    const sm: MediaQueryList = window.matchMedia(this.mediaSm)\r\n    const md: MediaQueryList = window.matchMedia(this.mediaMd)\r\n    if (sm.matches) {\r\n      this.smStyleInit()\r\n    } else if (md.matches) {\r\n      this.mdStyleInit()\r\n    } else {\r\n      this.defaultStyleInit()\r\n    }\r\n  }\r\n  private smStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlSmFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlSmMaxWidth;\r\n  }\r\n  private mdStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlMdFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlMdMaxWidth;\r\n  }\r\n  private defaultStyleInit() {\r\n    this.el.nativeElement.style.padding = this.ctlPadding;\r\n    this.el.nativeElement.style.width = this.ctlWidth;\r\n    this.el.nativeElement.style.flex = this.ctlLgFlex;\r\n    this.el.nativeElement.style.boxSizing = this.ctlBoxSizing;\r\n    this.el.nativeElement.style.maxWidth = this.ctlLgMaxWidth;\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, Input, AfterViewInit, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[readonly]'\r\n})\r\nexport class ShReadOnlyDirective implements AfterViewInit, OnChanges {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input('readonly') isReadOnly: boolean = true;\r\n\r\n  ngAfterViewInit() {\r\n    this.addAttribute();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.addAttribute();\r\n  }\r\n\r\n  addAttribute() {\r\n    let qs = this.el.nativeElement.querySelectorAll('input,textarea,select');\r\n    for (var e of qs) {\r\n      e.readOnly = this.isReadOnly;\r\n    }\r\n\r\n    qs = this.el.nativeElement.querySelectorAll('button,mat-icon');\r\n    if (this.isReadOnly) {\r\n      for (var e of qs) {\r\n        e.style.display = \"none\";\r\n      }\r\n    }\r\n    else {\r\n      for (var e of qs) {\r\n        e.style.display = \"inline\";\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[state]'\r\n})\r\nexport class ShCtlStateDirective implements OnChanges {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @Input('state') state: string = \"\";\r\n  @Input() onlyField: boolean = false;\r\n\r\n  ngAfterViewInit() {\r\n    this.addShCtlStateClass();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.addShCtlStateClass();\r\n  }\r\n\r\n  addShCtlStateClass() {\r\n    let qs = this.el.nativeElement.querySelectorAll('mat-form-field');\r\n    for (var e of qs) {\r\n      let classList = (e) ? e.className.split(' ') : [];\r\n      classList.forEach(className => {\r\n        if (className.startsWith(\"sh-ctl-state-\"))\r\n          e.classList.remove(className);\r\n      });\r\n      e.classList.add(\"sh-ctl-state-\" + this.state);\r\n    }\r\n\r\n    if (this.onlyField) {\r\n      let qsOnlyField = this.el.nativeElement.querySelectorAll('.only-field');\r\n      for (var e of qsOnlyField) {\r\n        let classList = (e) ? e.className.split(' ') : [];\r\n        classList.forEach(className => {\r\n          if(className.startsWith(\"only-field-\")){\r\n            e.classList.remove(className);\r\n          }\r\n        });\r\n        e.classList.add(\"only-field-\" + this.state);\r\n      }\r\n    }\r\n\r\n    qs = this.el.nativeElement.querySelectorAll('span,label');\r\n    for (var e of qs) {\r\n      let classList = (e) ? e.className.split(' ') : [];\r\n      classList.forEach(className => {\r\n        if (className.startsWith(\"sh-ctl-state-\"))\r\n          e.classList.remove(className);\r\n      });\r\n      e.classList.add(\"sh-ctl-state-\" + this.state + \"-message\");\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\n\r\n//Angular Material\r\nimport {\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatCheckboxModule,\r\n  MatProgressSpinnerModule,\r\n} from '@angular/material'\r\n\r\nimport { SHCtlAllCharComponent } from './components/sh-ctl-all-char/sh-ctl-all-char.component';\r\nimport { SHCtlAllCharMLComponent } from './components/sh-ctl-all-char-ml/sh-ctl-all-char-ml.component';\r\nimport { SHCtlBunjNoComponent } from './components/sh-ctl-bunj-no/sh-ctl-bunj-no.component';\r\nimport { SHCtlDateComponent } from './components/sh-ctl-date/sh-ctl-date.component';\r\nimport { SHCtlHalfCharComponent } from './components/sh-ctl-half-char/sh-ctl-half-char.component';\r\nimport { SHCtlJigCodeComponent } from './components/sh-ctl-jig-code/sh-ctl-jig-code.component';\r\nimport { SHCtlPopupDialogComponent } from './components/sh-ctl-popup-dialog/sh-ctl-popup-dialog.component';\r\nimport { SHCtlPopupDialogMultiComponent } from './components/sh-ctl-popup-multi-dialog/sh-ctl-popup-multi-dialog.component';\r\n\r\nimport { SHCtlJyuCodeComponent } from './components/sh-ctl-jyu-code/sh-ctl-jyu-code.component';\r\nimport { SHCtlKatakanaComponent } from './components/sh-ctl-katakana/sh-ctl-katakana.component';\r\nimport { SHCtlNumberComponent } from './components/sh-ctl-number/sh-ctl-number.component';\r\nimport { SHCtlSesyuCodeComponent } from './components/sh-ctl-sesyu-code/sh-ctl-sesyu-code.component';\r\nimport { SHCtlTanCodeComponent } from './components/sh-ctl-tan-code/sh-ctl-tan-code.component';\r\nimport { SHCtlTelNoComponent } from './components/sh-ctl-tel-no/sh-ctl-tel-no.component';\r\nimport { SHCtlTimeComponent } from './components/sh-ctl-time/sh-ctl-time.component';\r\nimport { SHCtlTokuCodeComponent } from './components/sh-ctl-toku-code/sh-ctl-toku-code.component';\r\nimport { SHCtlWideCharComponent } from './components/sh-ctl-wide-char/sh-ctl-wide-char.component';\r\nimport { SHCtlWideCharMLComponent } from './components/sh-ctl-wide-char-ml/sh-ctl-wide-char-ml.component';\r\nimport { SHCtlYearMonthComponent } from './components/sh-ctl-year-month/sh-ctl-year-month.component';\r\nimport { SHCtlZipNoComponent } from './components/sh-ctl-zip-no/sh-ctl-zip-no.component';\r\nimport { SHCtlKbnRadioComponent } from './components/sh-ctl-kbn-radio/sh-ctl-kbn-radio.component';\r\nimport { SHCtlKbnSelectComponent } from './components/sh-ctl-kbn-select/sh-ctl-kbn-select.component';\r\nimport { ShCtlPopupComponent } from './components/sh-ctl-popup/sh-ctl-popup.component';\r\nimport { ShCtlPopupMultiComponent } from './components/sh-ctl-popup-multi/sh-ctl-popup-multi.component';\r\nimport { ShCtlValidatedErrorComponent } from './components/sh-ctl-validated-error/sh-ctl-validated-error.component';\r\nimport { SHCtlHalfNumberComponent }  from './components/sh-ctl-half-number/sh-ctl-half-number.component';\r\nimport { SHCtlCheckComponent }  from './components/sh-ctl-check/sh-ctl-check.component';\r\nimport { SHCtlLockScreenComponent }  from './components/sh-ctl-lock-screen/sh-ctl-lock-screen.component';\r\n\r\nimport { NgDateValuePipe } from './pipes/ng-date-value.pipe';\r\n\r\nimport { ShHttpClient } from 'sh-http-client';\r\nimport { ShFlexRowDirective } from './directives/sh-flex-row.directive';\r\nimport { ShFlexDirective } from './directives/sh-flex.directive';\r\nimport { ShReadOnlyDirective } from './directives/sh-readonly.directive';\r\nimport { ShCtlStateDirective } from './directives/sh-ctl-state.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SHCtlAllCharComponent,\r\n    SHCtlAllCharMLComponent,\r\n    SHCtlBunjNoComponent,\r\n    SHCtlDateComponent,\r\n    SHCtlHalfCharComponent,\r\n    SHCtlJigCodeComponent,\r\n    SHCtlJyuCodeComponent,\r\n    SHCtlKatakanaComponent,\r\n    SHCtlNumberComponent,\r\n    SHCtlSesyuCodeComponent,\r\n    SHCtlTanCodeComponent,\r\n    SHCtlTelNoComponent,\r\n    SHCtlTimeComponent,\r\n    SHCtlTokuCodeComponent,\r\n    SHCtlWideCharComponent,\r\n    SHCtlWideCharMLComponent,\r\n    SHCtlYearMonthComponent,\r\n    SHCtlZipNoComponent,\r\n    SHCtlKbnRadioComponent,\r\n    SHCtlKbnSelectComponent,\r\n    ShCtlPopupComponent,\r\n    ShCtlPopupMultiComponent,\r\n    SHCtlPopupDialogComponent,\r\n    SHCtlPopupDialogMultiComponent,\r\n    ShCtlValidatedErrorComponent,\r\n    SHCtlHalfNumberComponent,\r\n    SHCtlCheckComponent,\r\n    SHCtlLockScreenComponent,\r\n    NgDateValuePipe,\r\n    ShFlexRowDirective,\r\n    ShFlexDirective,\r\n    ShReadOnlyDirective,\r\n    ShCtlStateDirective,\r\n  ],\r\n  entryComponents: [\r\n    SHCtlPopupDialogComponent,\r\n    SHCtlPopupDialogMultiComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    ShHttpClient\r\n  ],\r\n  exports: [\r\n    SHCtlAllCharComponent,\r\n    SHCtlAllCharMLComponent,\r\n    SHCtlBunjNoComponent,\r\n    SHCtlDateComponent,\r\n    SHCtlHalfCharComponent,\r\n    SHCtlJigCodeComponent,\r\n    SHCtlJyuCodeComponent,\r\n    SHCtlKatakanaComponent,\r\n    SHCtlNumberComponent,\r\n    SHCtlSesyuCodeComponent,\r\n    SHCtlTanCodeComponent,\r\n    SHCtlTelNoComponent,\r\n    SHCtlTimeComponent,\r\n    SHCtlTokuCodeComponent,\r\n    SHCtlWideCharComponent,\r\n    SHCtlWideCharMLComponent,\r\n    SHCtlYearMonthComponent,\r\n    SHCtlZipNoComponent,\r\n    SHCtlKbnRadioComponent,\r\n    SHCtlKbnSelectComponent,\r\n    ShCtlPopupComponent,\r\n    ShCtlPopupMultiComponent,\r\n    ShCtlValidatedErrorComponent,\r\n    SHCtlHalfNumberComponent,\r\n    SHCtlCheckComponent,\r\n    SHCtlLockScreenComponent,\r\n    NgDateValuePipe,\r\n    ShFlexRowDirective,\r\n    ShFlexDirective,\r\n    ShReadOnlyDirective,\r\n    ShCtlStateDirective\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class ShCtlCommonModule { }\r\n","import { OnInit, Component, ComponentRef} from \"@angular/core\";\r\nimport { ShCtlConst } from \"../constShCtl\";\r\nimport { ShHttpClientConst, ShRedirectService } from 'sh-http-client';\r\n\r\n/**\r\n * ã­ã¼å¶å¾¡ã®åæåãªã©\r\n */\r\nexport class ShAppComponent implements OnInit {\r\n\r\n  /**\r\n   * ã³ã³ã¹ãã©ã¯ã¿\r\n   */\r\n  constructor(\r\n    private redirectService: ShRedirectService\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * ã³ã³ãã¼ãã³ãåæå\r\n   */\r\n  ngOnInit() {}\r\n  /**\r\n   * åæå\r\n   */\r\n  private init() {\r\n    this.redirect();\r\n    this.keyValidation();\r\n    this.setToekn();\r\n  }\r\n  private redirect() {\r\n    if(this.redirectService.redirectPath) {\r\n      this.redirectService.redirect();\r\n    }\r\n  }\r\n  private setToekn(){\r\n    const params = new URLSearchParams(location.search);\r\n    const token = params.get('access_token')\r\n    if(token){\r\n      sessionStorage.setItem(`${ShHttpClientConst.AUTHORIZATION_TOKEN}`, token)\r\n      params.delete(\"access_token\");\r\n      history.pushState(null, null, location.pathname);\r\n    }\r\n  }\r\n  /**\r\n   *@ ã¨ã³ã¿ã¼æã«ãã©ã¼ã«ã¹ãå½ã¦ãããªãå ´åã®æ¡ä»¶\r\n   */\r\n  private isTargetElement(elm: HTMLInputElement) {\r\n    if(elm.type == 'hidden') return false;\r\n    if(elm.style.display == 'none') return false;\r\n    if(elm.style.opacity == '0') return false;\r\n    if(elm.disabled) return false;\r\n    const shctl =  this.getShCtlElement(elm);\r\n    if(this.checkShCtlAttr(shctl.attributes,[\r\n      'hidden'\r\n    ])) return false;\r\n    return true;\r\n  }\r\n\r\n  private checkShCtlAttr(map: NamedNodeMap, targets: string[]) {\r\n    return targets.map((t) => {\r\n      return map.getNamedItem(t) != null\r\n    }).includes(true);\r\n  }\r\n\r\n  private getShCtlElement(elm: HTMLElement): HTMLElement | null {\r\n    let parent = elm.parentElement;\r\n    if(!parent) return null;\r\n    if(parent.tagName.includes('SH-CTL')) {\r\n      return parent;\r\n    } else {\r\n      return this.getShCtlElement(parent);\r\n    }\r\n  }\r\n  /**\r\n   * ã­ã¼ããªãã¼ã·ã§ã³ä»ä¸\r\n   */\r\n  keyValidation() {\r\n    window.document.onkeydown = (event) => {\r\n      if (\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F1 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F2 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F3 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F4 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F5 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F6 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F10 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F11 ||\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_F12\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        event.altKey &&\r\n        (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_LEFT ||\r\n          event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_RIGHT)\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_N\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_R\r\n      ) {\r\n        return false;\r\n      }\r\n      if (\r\n        (event.ctrlKey || event.metaKey) &&\r\n        event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_D\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (event.keyCode === ShCtlConst.ORDINAL.KEYS.KEY_ENTER) {\r\n        let input = <HTMLInputElement>document.activeElement;\r\n        if (input != null) {\r\n          if (input.type != 'textarea') {\r\n            //æ¬¡ã®æä½å¯è½ãªã¿ã°ã«åãæ¿ãã\r\n            const nodeList = window.document.querySelectorAll(\r\n              '.can-moved-with-the-enter-key'\r\n            );\r\n            const filteredInput = Array.from(nodeList).filter((el) => {\r\n              return this.isTargetElement(el as HTMLInputElement)\r\n            })\r\n            let preInput = null;\r\n            for (let i = 0; i < filteredInput.length; i++) {\r\n              let cur_input = <HTMLInputElement>filteredInput[i];\r\n              if (input.name === cur_input.name) {\r\n                if (++i >= filteredInput.length) {\r\n                  i = 0;\r\n                }\r\n                cur_input.blur();\r\n                if (event.shiftKey) {\r\n                  preInput.focus();  \r\n                }\r\n                else {\r\n                  let nextInput = <HTMLInputElement>filteredInput[i];\r\n                  nextInput.focus();  \r\n                }\r\n                return false;\r\n              }\r\n              preInput = <HTMLInputElement>filteredInput[i];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","export class ShFormControlType {\r\n  //è¦ç´ ã³ã³ãã­ã¼ã«å\r\n  public ctlName: string = \"SHFormControl\";\r\n  //è¡¨ç¤ºã¬ã¤ã¢ã¦ãåãæ¿ããã©ã°(true:é²è¦§å°ç¨/false:ç·¨éå¯è½)\r\n  public isDisabled: boolean = false;\r\n  //å¤ãã¤ã³ãå¤æ°\r\n  public value: string = \"\";\r\n  //ã¿ã¤ãã«å\r\n  public title = \"\";\r\n  //ã³ã³ãã­ã¼ã«æå(auto/always/nevwer)\r\n  public floatLabel = \"auto\";\r\n  //é²è¦§å°ç¨ç»é¢ã§ã®ã©ãã«å¹(px)\r\n  public labelWidth = \"150\";\r\n  //inputè¦ç´ ã«å¯¾ããæå¤§å¥åæå­æ°(è¨­å®å¯è½ãªã³ã³ãã­ã¼ã«ã®ã¿é©ç¨)\r\n  public maxlength: number;\r\n  //inputè¦ç´ ã«å¯¾ããstyleã®æå®(å½¢å¼ï¼{ color: \"red\" })\r\n  public styles: any = {}\r\n  //inputè¦ç´ ã«å¯¾ããclassã®æå®(å½¢å¼ï¼{ \"className\": true } or \"className className2\")\r\n  public classes: any = {}\r\n  //inputè¦ç´ ã«å¯¾ããå¿é å¥åãã©ã°\r\n  public required: boolean = false;\r\n  //inputè¦ç´ ã«å¯¾ããç¶æã®æå®\r\n  public state: string = \"\";\r\n  //inputè¦ç´ ã«å¯¾ããæè¨ã®æå®\r\n  public message: string[] = [\"\"];\r\n\r\n  //ã³ã³ã¹ãã©ã¯ã¿ã§ctlNameãå¿ãæå®ãã\r\n  constructor(_ctlName: string) {\r\n    this.ctlName = _ctlName; \r\n  }\r\n}"]}