/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class LockScreenService {
    /**
     * コンストラクタ
     */
    constructor() {
        this.isConnecting = false;
        this.isConnectingSubject = new Subject();
        this.isConnectingState = this.isConnectingSubject.asObservable();
        this.count = 0;
    }
    /**
     * 画面をロックする(ユーザーが操作出来ないようにする)
     * @return {?}
     */
    lockScreen() {
        this.count += 1;
        if (this.count === 1) {
            this.isConnecting = true;
            this.isConnectingSubject.next(this.isConnecting);
        }
    }
    /**
     * 画面のロックを解除する(ユーザーが操作出来る状態にする)
     * @return {?}
     */
    unlock() {
        this.count -= 1;
        if (this.count === 0) {
            this.isConnecting = false;
            this.isConnectingSubject.next(this.isConnecting);
        }
    }
}
LockScreenService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
LockScreenService.ctorParameters = () => [];
/** @nocollapse */ LockScreenService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function LockScreenService_Factory() { return new LockScreenService(); }, token: LockScreenService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    LockScreenService.prototype.isConnecting;
    /**
     * @type {?}
     * @private
     */
    LockScreenService.prototype.isConnectingSubject;
    /** @type {?} */
    LockScreenService.prototype.isConnectingState;
    /** @type {?} */
    LockScreenService.prototype.count;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jay1zY3JlZW4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9sb2NrLXNjcmVlbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBSy9CLE1BQU0sT0FBTyxpQkFBaUI7Ozs7SUFTNUI7UUFSUSxpQkFBWSxHQUFZLEtBQUssQ0FBQztRQUM5Qix3QkFBbUIsR0FBRyxJQUFJLE9BQU8sRUFBVyxDQUFDO1FBQzlDLHNCQUFpQixHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUM1RCxVQUFLLEdBQVcsQ0FBQyxDQUFDO0lBS1QsQ0FBQzs7Ozs7SUFLVixVQUFVO1FBQ2IsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUM7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRTtZQUNwQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUN6QixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNsRDtJQUNMLENBQUM7Ozs7O0lBS00sTUFBTTtRQUNYLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDO1FBQ2hCLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7WUFDMUIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDcEQ7SUFDSCxDQUFDOzs7WUFsQ0YsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7Ozs7Ozs7O0lBRUMseUNBQXNDOzs7OztJQUN0QyxnREFBcUQ7O0lBQ3JELDhDQUFtRTs7SUFDbkUsa0NBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb2NrU2NyZWVuU2VydmljZSB7XHJcbiAgcHJpdmF0ZSBpc0Nvbm5lY3Rpbmc6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIGlzQ29ubmVjdGluZ1N1YmplY3QgPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xyXG4gIHB1YmxpYyBpc0Nvbm5lY3RpbmdTdGF0ZSA9IHRoaXMuaXNDb25uZWN0aW5nU3ViamVjdC5hc09ic2VydmFibGUoKTtcclxuICBwdWJsaWMgY291bnQgOm51bWJlciA9IDA7XHJcblxyXG4gIC8qKlxyXG4gICog44Kz44Oz44K544OI44Op44Kv44K/XHJcbiAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAvKipcclxuICAqIOeUu+mdouOCkuODreODg+OCr+OBmeOCiyjjg6bjg7zjgrbjg7zjgYzmk43kvZzlh7rmnaXjgarjgYTjgojjgYbjgavjgZnjgospXHJcbiAgKi9cclxuICBwdWJsaWMgbG9ja1NjcmVlbigpIHtcclxuICAgICAgdGhpcy5jb3VudCArPSAxO1xyXG4gICAgICBpZiAodGhpcy5jb3VudCA9PT0gMSkge1xyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0aW5nID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmlzQ29ubmVjdGluZ1N1YmplY3QubmV4dCh0aGlzLmlzQ29ubmVjdGluZyk7XHJcbiAgICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICog55S76Z2i44Gu44Ot44OD44Kv44KS6Kej6Zmk44GZ44KLKOODpuODvOOCtuODvOOBjOaTjeS9nOWHuuadpeOCi+eKtuaFi+OBq+OBmeOCiylcclxuICAqL1xyXG4gIHB1YmxpYyB1bmxvY2soKSB7XHJcbiAgICB0aGlzLmNvdW50IC09IDE7XHJcbiAgICBpZiAodGhpcy5jb3VudCA9PT0gMCkge1xyXG4gICAgICAgIHRoaXMuaXNDb25uZWN0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pc0Nvbm5lY3RpbmdTdWJqZWN0Lm5leHQodGhpcy5pc0Nvbm5lY3RpbmcpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=