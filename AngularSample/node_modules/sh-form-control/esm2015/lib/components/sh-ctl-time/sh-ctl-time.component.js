/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { SHFormControl } from '../../utilities/ShFormControl';
export class SHCtlTimeComponent extends SHFormControl {
    constructor() {
        super();
        this.obj = ".ShCtlTime";
        this.adjust = 1;
        this.isValidateError = false;
        this.errorMessage = "無効な日付です";
        this.isFirst = true;
        this.format = SHCtlCommon.Const.timeFormat.HHMM;
        //直前の値保持
        this.timeStrage = null;
        this.ctlName = "SHCtlTime";
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        if (this.value != null) {
            /** @type {?} */
            var date = this.value.split(':');
            switch (this.format) {
                case SHCtlCommon.Const.timeFormat.HH:
                    this.stringValue = `${date[0]}`;
                    break;
                case SHCtlCommon.Const.timeFormat.HHMM:
                    this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : "00")}`;
                    break;
                case SHCtlCommon.Const.timeFormat.HH:
                    this.stringValue = `${date[0]}:${(date.length > 1 ? date[1] : "00")}:${(date.length > 2 ? date[2] : "00")}`;
                    break;
                default:
                    break;
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.onInit();
    }
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    onInput(event) {
        this.timecalculation(event);
    }
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    onClick(event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterFocus(event); }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        /** @type {?} */
        let val = event.target.value;
        if (val) {
            //HH形式の場合
            if (val.length == 2)
                val += ":00:00";
            //HHMM形式の場合
            if (val.length == 5)
                val += ":00";
        }
        if (this.timeStrage != val) {
            this.onBeforeChange(event);
            this.valueChange.emit(val);
        }
        this.timeStrage = val;
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterBlur(event); }), 0);
    }
    /**
     * onKeypress
     * @param {?} event keypress
     * @return {?}
     */
    onKeypress(event) {
        this.timecalculation(event);
    }
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    onChange(event) {
    }
    /**
     * キーイベント系
     * /キーを押すことで現在時刻をセット
     * @private
     * @param {?} event keypress
     * @return {?}
     */
    timecalculation(event) {
        if (event.key === SHCtlCommon.Const.keyCodes.signs[191]) {
            event.target.value = this.setCurrentTime();
            this.onChange(event);
        }
    }
    /**
     * 現在時刻の設定
     * @private
     * @return {?}
     */
    setCurrentTime() {
        /** @type {?} */
        let newDate = new Date();
        /** @type {?} */
        let nullFirstString = null;
        /** @type {?} */
        let nullLastString = null;
        nullFirstString = SHCtlCommon.padding(newDate.getHours(), 2); // HH
        nullLastString = SHCtlCommon.padding(newDate.getMinutes(), 2); // HH:MM
        // HH:MM
        /** @type {?} */
        let stringValue = String(nullFirstString + ":" + nullLastString);
        return stringValue;
    }
}
SHCtlTimeComponent.decorators = [
    { type: Component, args: [{
                selector: 'sh-ctl-time',
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [placeholder]=\"title\" [required]=\"required\" type=\"time\" step=\"{{format}}\" max=\"23:59\" [(ngModel)]=\"value\"\r\n        attr.name=\"{{ctlName}}\" class=\"form-control ShCtlTime can-moved-with-the-enter-key  {{strClass}}\"\r\n        (input)=\"onInput($event)\" (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"\r\n        autocomplete=\"off\" (change)=\"onChange($event)\" [disabled]=\"disabled\" (keypress)=\"onKeypress($event)\"\r\n        [class.isValidateError]=\"isValidateError\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" >\r\n      <button mat-button class=\"closeButton\" type=\"button\" *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" type=\"time\" step=\"{{format}}\" max=\"23:59\" [(ngModel)]=\"value\"\r\n      attr.name=\"{{ctlName}}\" class=\"form-control ShCtlTime can-moved-with-the-enter-key  {{strClass}}\"\r\n      (input)=\"onInput($event)\" (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"\r\n      autocomplete=\"off\" (change)=\"onChange($event)\" [disabled]=\"disabled\" (keypress)=\"onKeypress($event)\"\r\n      [class.isValidateError]=\"isValidateError\" maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" >\r\n    <button mat-button class=\"closeButton\" type=\"button\" *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\" type=\"time\">\r\n        {{stringValue}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{stringValue}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".isValidateError{border:1px solid red}.alert-danger{background-color:#ffd2ff}.display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1;padding-top:4px}.notitle-value{width:100%;margin-left:30px}.ShCtlTime{float:left}mat-form-field .closeButton{position:absolute;right:20px;bottom:5px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlTimeComponent.ctorParameters = () => [];
SHCtlTimeComponent.propDecorators = {
    format: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SHCtlTimeComponent.prototype.obj;
    /** @type {?} */
    SHCtlTimeComponent.prototype.adjust;
    /** @type {?} */
    SHCtlTimeComponent.prototype.isValidateError;
    /** @type {?} */
    SHCtlTimeComponent.prototype.errorMessage;
    /** @type {?} */
    SHCtlTimeComponent.prototype.stringValue;
    /** @type {?} */
    SHCtlTimeComponent.prototype.isFirst;
    /** @type {?} */
    SHCtlTimeComponent.prototype.format;
    /**
     * @type {?}
     * @private
     */
    SHCtlTimeComponent.prototype.timeStrage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXRpbWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vc2gtZm9ybS1jb250cm9sLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc2gtY3RsLXRpbWUvc2gtY3RsLXRpbWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFBO0FBTzdELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxhQUFxQjtJQVkzRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBWkgsUUFBRyxHQUFXLFlBQVksQ0FBQztRQUMzQixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBQ25CLG9CQUFlLEdBQVksS0FBSyxDQUFDO1FBQ2pDLGlCQUFZLEdBQVcsU0FBUyxDQUFDO1FBRWpDLFlBQU8sR0FBWSxJQUFJLENBQUM7UUFDZixXQUFNLEdBQVcsV0FBVyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDOztRQUczRCxlQUFVLEdBQVcsSUFBSSxDQUFDO1FBSWhDLElBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFTSxxQkFBcUI7UUFDMUIsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTs7Z0JBQ2xCLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7WUFDaEMsUUFBTyxJQUFJLENBQUMsTUFBTSxFQUFDO2dCQUNqQixLQUFLLFdBQVcsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUU7b0JBQ2xDLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQTtvQkFDL0IsTUFBTTtn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QUFHLENBQUMsRUFBRTtZQUN2RCxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDM0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN0QjtJQUNILENBQUM7Ozs7OztJQU1PLGNBQWM7O1lBQ2hCLE9BQU8sR0FBRyxJQUFJLElBQUksRUFBRTs7WUFDcEIsZUFBZSxHQUFHLElBQUk7O1lBQ3RCLGNBQWMsR0FBRyxJQUFJO1FBQ3pCLGVBQWUsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7UUFDbkUsY0FBYyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsUUFBUTs7O1lBQ2xFLFdBQVcsR0FBRyxNQUFNLENBQUMsZUFBZSxHQUFHLEdBQUcsR0FBRyxjQUFjLENBQUM7UUFDaEUsT0FBTyxXQUFXLENBQUM7SUFDckIsQ0FBQzs7O1lBNUlGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsdWdHQUEyQzs7YUFFNUM7Ozs7O3FCQVFFLEtBQUs7Ozs7SUFOTixpQ0FBa0M7O0lBQ2xDLG9DQUEwQjs7SUFDMUIsNkNBQXdDOztJQUN4QywwQ0FBd0M7O0lBQ3hDLHlDQUF3Qjs7SUFDeEIscUNBQStCOztJQUMvQixvQ0FBbUU7Ozs7O0lBR25FLHdDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTSEN0bENvbW1vbiB9IGZyb20gJy4uL3NoLWN0bC1jb21tb24nO1xyXG5pbXBvcnQgeyBTSEZvcm1Db250cm9sIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL1NoRm9ybUNvbnRyb2wnXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NoLWN0bC10aW1lJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2gtY3RsLXRpbWUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoLWN0bC10aW1lLmNvbXBvbmVudC5jc3MnLCAnLi4vLi4vLi4vc3R5bGUuY29tbW9uLmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTSEN0bFRpbWVDb21wb25lbnQgZXh0ZW5kcyBTSEZvcm1Db250cm9sPHN0cmluZz4gaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIHB1YmxpYyBvYmo6IHN0cmluZyA9IFwiLlNoQ3RsVGltZVwiO1xyXG4gIHB1YmxpYyBhZGp1c3Q6IG51bWJlciA9IDE7XHJcbiAgcHVibGljIGlzVmFsaWRhdGVFcnJvcjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHB1YmxpYyBlcnJvck1lc3NhZ2U6IHN0cmluZyA9IFwi54Sh5Yq544Gq5pel5LuY44Gn44GZXCI7XHJcbiAgcHVibGljIHN0cmluZ1ZhbHVlOiBhbnk7XHJcbiAgcHVibGljIGlzRmlyc3Q6IGJvb2xlYW4gPSB0cnVlO1xyXG4gIEBJbnB1dCgpIHB1YmxpYyBmb3JtYXQ6IG51bWJlciA9IFNIQ3RsQ29tbW9uLkNvbnN0LnRpbWVGb3JtYXQuSEhNTTtcclxuXHJcbiAgLy/nm7TliY3jga7lgKTkv53mjIFcclxuICBwcml2YXRlIHRpbWVTdHJhZ2U6IHN0cmluZyA9IG51bGw7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCAgKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5jdGxOYW1lID0gXCJTSEN0bFRpbWVcIjtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XHJcbiAgICBpZiAodGhpcy52YWx1ZSAhPSBudWxsKSB7XHJcbiAgICAgIHZhciBkYXRlID0gdGhpcy52YWx1ZS5zcGxpdCgnOicpO1xyXG4gICAgICBzd2l0Y2godGhpcy5mb3JtYXQpe1xyXG4gICAgICAgIGNhc2UgU0hDdGxDb21tb24uQ29uc3QudGltZUZvcm1hdC5ISDpcclxuICAgICAgICAgIHRoaXMuc3RyaW5nVmFsdWUgPSBgJHtkYXRlWzBdfWBcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgU0hDdGxDb21tb24uQ29uc3QudGltZUZvcm1hdC5ISE1NOlxyXG4gICAgICAgICAgdGhpcy5zdHJpbmdWYWx1ZSA9IGAke2RhdGVbMF19OiR7KGRhdGUubGVuZ3RoID4gMSA/IGRhdGVbMV0gOiBcIjAwXCIpfWBcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgU0hDdGxDb21tb24uQ29uc3QudGltZUZvcm1hdC5ISDpcclxuICAgICAgICAgIHRoaXMuc3RyaW5nVmFsdWUgPSBgJHtkYXRlWzBdfTokeyhkYXRlLmxlbmd0aCA+IDEgPyBkYXRlWzFdIDogXCIwMFwiKX06JHsoZGF0ZS5sZW5ndGggPiAyID8gZGF0ZVsyXSA6IFwiMDBcIil9YFxyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm9uSW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25JbnB1dFxyXG4gICAqIEBwYXJhbSBldmVudCBpbnB1dFxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbklucHV0KGV2ZW50OiBhbnkpIHtcclxuICAgIHRoaXMudGltZWNhbGN1bGF0aW9uKGV2ZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2xpY2tcclxuICAgKiBAcGFyYW0gZXZlbnQgY2xpY2tcclxuICAgKi9cclxuICBwdWJsaWMgb25DbGljayhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUNsaWNrKGV2ZW50KTtcclxuXHJcbiAgICB0aGlzLm9uQWZ0ZXJDbGljayhldmVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbkZvY3VzXHJcbiAgICogQHBhcmFtIGV2ZW50IGZvY3VzXHJcbiAgICovXHJcbiAgcHVibGljIG9uRm9jdXMoZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVGb2N1cyhldmVudCk7XHJcblxyXG4gICAgZXZlbnQudGFyZ2V0LnNlbGVjdCgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckZvY3VzKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25CbHVyXHJcbiAgICogQHBhcmFtIGV2ZW50IGJsdXJcclxuICAgKi9cclxuICBwdWJsaWMgb25CbHVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQmx1cihldmVudCk7XHJcblxyXG4gICAgbGV0IHZhbCA9IGV2ZW50LnRhcmdldC52YWx1ZVxyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICAvL0hI5b2i5byP44Gu5aC05ZCIXHJcbiAgICAgIGlmICh2YWwubGVuZ3RoID09IDIpXHJcbiAgICAgICAgdmFsICs9IFwiOjAwOjAwXCI7XHJcbiAgICAgIC8vSEhNTeW9ouW8j+OBruWgtOWQiFxyXG4gICAgICBpZiAodmFsLmxlbmd0aCA9PSA1KVxyXG4gICAgICAgIHZhbCArPSBcIjowMFwiO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnRpbWVTdHJhZ2UgIT0gdmFsKSB7XHJcbiAgICAgIHRoaXMub25CZWZvcmVDaGFuZ2UoZXZlbnQpO1xyXG4gICAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQodmFsKTtcclxuICAgIH1cclxuICAgIHRoaXMudGltZVN0cmFnZSA9IHZhbDtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckJsdXIoZXZlbnQpfSwgMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbktleXByZXNzXHJcbiAgICogQHBhcmFtIGV2ZW50IGtleXByZXNzXHJcbiAgICovXHJcbiAgcHVibGljIG9uS2V5cHJlc3MoZXZlbnQpIHtcclxuICAgIHRoaXMudGltZWNhbGN1bGF0aW9uKGV2ZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2hhbmdlXHJcbiAgICogQHBhcmFtIGV2ZW50IGNoYW5nZVxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbkNoYW5nZShldmVudCkge1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOOCreODvOOCpOODmeODs+ODiOezu1xyXG4gICAqIC/jgq3jg7zjgpLmirzjgZnjgZPjgajjgafnj77lnKjmmYLliLvjgpLjgrvjg4Pjg4hcclxuICAgKiBAcGFyYW0gZXZlbnQga2V5cHJlc3NcclxuICAgKi9cclxuICBwcml2YXRlIHRpbWVjYWxjdWxhdGlvbihldmVudCkge1xyXG4gICAgaWYgKGV2ZW50LmtleSA9PT0gU0hDdGxDb21tb24uQ29uc3Qua2V5Q29kZXMuc2lnbnNbMTkxXSkge1xyXG4gICAgICBldmVudC50YXJnZXQudmFsdWUgPSB0aGlzLnNldEN1cnJlbnRUaW1lKCk7XHJcbiAgICAgIHRoaXMub25DaGFuZ2UoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog54++5Zyo5pmC5Yi744Gu6Kit5a6aXHJcbiAgICogQHBhcmFtIGV2ZW50IGtleXByZXNzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBzZXRDdXJyZW50VGltZSgpIHtcclxuICAgIGxldCBuZXdEYXRlID0gbmV3IERhdGUoKTtcclxuICAgIGxldCBudWxsRmlyc3RTdHJpbmcgPSBudWxsO1xyXG4gICAgbGV0IG51bGxMYXN0U3RyaW5nID0gbnVsbDtcclxuICAgIG51bGxGaXJzdFN0cmluZyA9IFNIQ3RsQ29tbW9uLnBhZGRpbmcobmV3RGF0ZS5nZXRIb3VycygpLCAyKTsgLy8gSEhcclxuICAgIG51bGxMYXN0U3RyaW5nID0gU0hDdGxDb21tb24ucGFkZGluZyhuZXdEYXRlLmdldE1pbnV0ZXMoKSwgMikgLy8gSEg6TU1cclxuICAgIGxldCBzdHJpbmdWYWx1ZSA9IFN0cmluZyhudWxsRmlyc3RTdHJpbmcgKyBcIjpcIiArIG51bGxMYXN0U3RyaW5nKTtcclxuICAgIHJldHVybiBzdHJpbmdWYWx1ZTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==