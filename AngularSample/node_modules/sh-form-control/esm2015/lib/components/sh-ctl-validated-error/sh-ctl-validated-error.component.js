/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ValidationErrorService } from 'sh-http-client';
export class ShCtlValidatedErrorComponent {
    /**
     * コンストラクタ
     * @param {?} validationErrorService
     */
    constructor(validationErrorService) {
        this.validationErrorService = validationErrorService;
        this.isError = false;
    }
    /**
     * コンポーネント初期化
     * @return {?}
     */
    ngOnInit() {
        this.subscription = this.validationErrorService.validationErrorState
            .subscribe((/**
         * @param {?} response
         * @return {?}
         */
        response => {
            if (response.show) {
                this.isError = true;
                this.errors = [];
                Object.keys(response.meesages).forEach((/**
                 * @param {?} controlName
                 * @return {?}
                 */
                controlName => {
                    this.errors = [...this.errors, ...response.meesages[controlName]];
                }));
            }
            else {
                this.isError = false;
                this.errors = [];
            }
        }));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
}
ShCtlValidatedErrorComponent.decorators = [
    { type: Component, args: [{
                selector: 'sh-ctl-validated-error',
                template: "<div *ngIf=\"isError\" class=\"error-message\">\r\n  <div *ngFor=\"let item of errors\" class=\"errorMessages text-red\" role=\"alert\">\r\n    \u30FB{{item}}\r\n  </div>\r\n</div>\r\n",
                styles: [".error-message{text-align:left;width:100%;height:100%}.text-red{color:red}"]
            }] }
];
/** @nocollapse */
ShCtlValidatedErrorComponent.ctorParameters = () => [
    { type: ValidationErrorService }
];
ShCtlValidatedErrorComponent.propDecorators = {
    message: [{ type: Input }],
    isError: [{ type: Input }],
    errors: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.message;
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.isError;
    /** @type {?} */
    ShCtlValidatedErrorComponent.prototype.errors;
    /**
     * @type {?}
     * @private
     */
    ShCtlValidatedErrorComponent.prototype.subscription;
    /**
     * @type {?}
     * @private
     */
    ShCtlValidatedErrorComponent.prototype.validationErrorService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLXZhbGlkYXRlZC1lcnJvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zaC1mb3JtLWNvbnRyb2wvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zaC1jdGwtdmFsaWRhdGVkLWVycm9yL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQVF4RCxNQUFNLE9BQU8sNEJBQTRCOzs7OztJQVF2QyxZQUNVLHNCQUE4QztRQUE5QywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBUC9DLFlBQU8sR0FBWSxLQUFLLENBQUM7SUFROUIsQ0FBQzs7Ozs7SUFLRSxRQUFRO1FBQ2IsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsb0JBQW9CO2FBQ2pFLFNBQVM7Ozs7UUFBQyxRQUFRLENBQUMsRUFBRTtZQUNwQixJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUU7Z0JBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO2dCQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztnQkFDakIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTzs7OztnQkFBQyxXQUFXLENBQUMsRUFBRTtvQkFDbkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDcEUsQ0FBQyxFQUFDLENBQUM7YUFDSjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztnQkFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7YUFDbEI7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7Ozs7SUFDTSxXQUFXO1FBQ2hCLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7O1lBckNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxvTUFBc0Q7O2FBRXZEOzs7O1lBUFEsc0JBQXNCOzs7c0JBUzVCLEtBQUs7c0JBQ0wsS0FBSztxQkFDTCxLQUFLOzs7O0lBRk4sK0NBQXlCOztJQUN6QiwrQ0FBa0M7O0lBQ2xDLDhDQUEwQjs7Ozs7SUFDMUIsb0RBQW1DOzs7OztJQUtqQyw4REFBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBWYWxpZGF0aW9uRXJyb3JTZXJ2aWNlIH0gZnJvbSAnc2gtaHR0cC1jbGllbnQnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2gtY3RsLXZhbGlkYXRlZC1lcnJvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NoLWN0bC12YWxpZGF0ZWQtZXJyb3IuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaEN0bFZhbGlkYXRlZEVycm9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG4gIEBJbnB1dCgpIG1lc3NhZ2U6IHN0cmluZztcclxuICBASW5wdXQoKSBpc0Vycm9yOiBib29sZWFuID0gZmFsc2U7XHJcbiAgQElucHV0KCkgZXJyb3JzOiBzdHJpbmdbXTtcclxuICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xyXG4gIC8qKlxyXG4gICAqIOOCs+ODs+OCueODiOODqeOCr+OCv1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSB2YWxpZGF0aW9uRXJyb3JTZXJ2aWNlOiBWYWxpZGF0aW9uRXJyb3JTZXJ2aWNlXHJcbiAgKSB7IH1cclxuXHJcbiAgLyoqXHJcbiAgICog44Kz44Oz44Od44O844ON44Oz44OI5Yid5pyf5YyWXHJcbiAgICovXHJcbiAgcHVibGljIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLnZhbGlkYXRpb25FcnJvclNlcnZpY2UudmFsaWRhdGlvbkVycm9yU3RhdGVcclxuICAgICAgLnN1YnNjcmliZShyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnNob3cpIHtcclxuICAgICAgICAgIHRoaXMuaXNFcnJvciA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLmVycm9ycyA9IFtdO1xyXG4gICAgICAgICAgT2JqZWN0LmtleXMocmVzcG9uc2UubWVlc2FnZXMpLmZvckVhY2goY29udHJvbE5hbWUgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9ycyA9IFsuLi50aGlzLmVycm9ycywgLi4ucmVzcG9uc2UubWVlc2FnZXNbY29udHJvbE5hbWVdXTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLmlzRXJyb3IgPSBmYWxzZTtcclxuICAgICAgICAgIHRoaXMuZXJyb3JzID0gW107XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICB9XHJcbiAgcHVibGljIG5nT25EZXN0cm95KCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICB9XHJcbn1cclxuIl19