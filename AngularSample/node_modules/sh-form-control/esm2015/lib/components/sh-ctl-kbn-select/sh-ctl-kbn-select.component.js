/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from "@angular/core";
import { SmplKbnCodeService } from "../../services/smpl-kbn-code.service";
import { SHFormControl } from '../../utilities/ShFormControl';
export class SHCtlKbnSelectComponent extends SHFormControl {
    /**
     * @param {?} SmplKbnSelectService
     */
    constructor(SmplKbnSelectService) {
        super();
        this.SmplKbnSelectService = SmplKbnSelectService;
        this.dataKbnName = "";
        this.selectContent = "";
        this.apiUrl = "/api/";
        this.hiddenClearButton = false;
        this.throwError = new EventEmitter();
        this.name = "";
        this.uniqueStr = "";
        this.ctlName = "SHCtlKbnSelect";
    }
    /**
     * プロパティの初期化
     * 通常サービスにキャッシュしているが、無ければ再度マスタより取得
     * @return {?}
     */
    ngOnInit() {
        this.onInit();
        if (!this.items) {
            if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length == 0) {
                this.SmplKbnSelectService.fetchAll(this.apiUrl).then((/**
                 * @param {?} response
                 * @return {?}
                 */
                response => {
                    this.kbnCodes = response;
                    this.SmplKbnSelectService.setMasterData(this.apiUrl, response);
                }));
            }
            else {
                if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)
                    this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);
            }
            if (this.SmplKbnSelectService.getMasterData(this.apiUrl).length > 0)
                this.kbnCodes = this.SmplKbnSelectService.getMasterData(this.apiUrl);
        }
        else {
            this.kbnCodes = this.items;
        }
    }
    /**
     * itemsの変更検知
     * 上位コンポーネントからitemsに値が注入されているか検知し変更する
     * @param {?} change
     * @return {?}
     */
    ngOnChanges(change) {
        if (change.items) {
            if (change.items.currentValue) {
                this.kbnCodes = change.items.currentValue;
            }
        }
    }
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    onClick(event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    }
    /**
     * onChange
     * @return {?}
     */
    onChange() {
        this.onBeforeChange(event);
        this.valueChange.emit(this.value);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterChange(event); }), 0);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterFocus(event); }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterBlur(event); }), 0);
        ;
    }
    /**
     * フォーマット編集
     * @param {?} item
     * @return {?}
     */
    changeSelectContent(item) {
        this.selectContent = item;
    }
    /**
     * 値のクリア
     * @return {?}
     */
    clearValue() {
        this.value = null;
        this.onChange();
    }
}
SHCtlKbnSelectComponent.decorators = [
    { type: Component, args: [{
                selector: "sh-ctl-kbn-select",
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\">\r\n    <mat-form-field [floatLabel]=\"floatLabel\">\r\n      <mat-label class=\"sh-label\">{{title}}</mat-label>\r\n      <mat-select #inputElm [required]=\"required\" [(ngModel)]=\"value\" (selectionChange)=\"onChange()\"\r\n        class=\"SHCtlKbnListbox h6 can-moved-with-the-enter-key  {{strClass}}\" (click)=\"onClick($event)\"\r\n        (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" attr.name=\"{{ctlName}}\" [disabled]=\"disabled\"\r\n        [ngStyle]=\"styles\" [ngClass]=\"objClass\">\r\n        <mat-option *ngFor=\"let item of kbnCodes\" [value]=\"item.key\">\r\n          {{item.value}}\r\n        </mat-option>      \r\n      </mat-select>\r\n      <button mat-button *ngIf=\"value && !inputElm.disabled && !hiddenClearButton\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (click)=\"clearValue();$event.stopPropagation();\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n\r\n</ng-container>\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\">\r\n    <mat-select #inputElm [required]=\"required\" [(ngModel)]=\"value\" (selectionChange)=\"onChange()\"\r\n        class=\"SHCtlKbnListbox h6 can-moved-with-the-enter-key  {{strClass}}\" (click)=\"onClick($event)\"\r\n        (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" attr.name=\"{{ctlName}}\" [disabled]=\"disabled\"\r\n        [ngStyle]=\"styles\" [ngClass]=\"objClass\">\r\n        <mat-option *ngFor=\"let item of kbnCodes\" [value]=\"item.key\">\r\n          {{item.value}}\r\n        </mat-option>      \r\n      </mat-select>\r\n      <button mat-button *ngIf=\"value && !inputElm.disabled && !hiddenClearButton\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (click)=\"clearValue();$event.stopPropagation();\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div *ngFor=\"let item of kbnCodes;\">\r\n        <div fxFlex class=\"valueOutput\" *ngIf=\"value == item.key\">\r\n          {{item.value}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div *ngFor=\"let item of kbnCodes;\">\r\n        <div fxFlex class=\"valueOutput\" *ngIf=\"value == item.key\">\r\n          {{item.value}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".input-group-text{background-color:#fff;border:none}.btn{border:none}.btn-primary{background-color:#17a2b8}.btn-primary:hover{background-color:#1792b8}.fixed-bottom{top:708px;height:65px;max-width:1024px;margin-right:auto;margin-left:auto}.display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlKbnSelectComponent.ctorParameters = () => [
    { type: SmplKbnCodeService }
];
SHCtlKbnSelectComponent.propDecorators = {
    dataKbnName: [{ type: Input }],
    selectContent: [{ type: Input }],
    apiUrl: [{ type: Input }],
    hiddenClearButton: [{ type: Input }],
    throwError: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.dataKbnName;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.selectContent;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.apiUrl;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.hiddenClearButton;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.throwError;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.name;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.event;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.kbnCodes;
    /** @type {?} */
    SHCtlKbnSelectComponent.prototype.uniqueStr;
    /**
     * @type {?}
     * @private
     */
    SHCtlKbnSelectComponent.prototype.SmplKbnSelectService;
}
//# sourceMappingURL=data:application/json;base64,