/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from "@angular/core";
import { DateAdapter } from "@angular/material";
import { JpDateAdapter } from "./adapter/jpDateAdapter";
import { SHFormControl } from "../../utilities/ShFormControl";
export class SHCtlDateComponent extends SHFormControl {
    /**
     * @param {?} dataAdapter
     */
    constructor(dataAdapter) {
        super();
        this.ctlName = "SHCtlDate";
        dataAdapter.setLocale("ja");
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.onInit();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.value) {
            if (changes.value.currentValue) {
                /** @type {?} */
                const result = this.getfomatedDate(changes.value.currentValue.replace(/\-/g, '/'));
                this.value = new Date(result);
            }
        }
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        if (this.value != null && this.isDisabled) {
            this.stringValue = this.changeFormat(this.value);
        }
    }
    /**
     * onOpened
     * @return {?}
     */
    onOpened() {
        /** @type {?} */
        let el = document.querySelector("mat-datepicker-content");
        el.addEventListener("focusin", (/**
         * @return {?}
         */
        () => {
            this.isfocused = true;
        }));
    }
    /**
     * onClosed
     * @return {?}
     */
    onClosed() {
        /** @type {?} */
        let inputValue = (/** @type {?} */ (document.querySelector(`textarea[name=` + this.ctlName + `], input[name=` + this.ctlName + `]`)));
        setTimeout((/**
         * @return {?}
         */
        function () { inputValue.dispatchEvent(new Event('focus')); }), 0);
    }
    /**
     * onKeypress
     * @param {?} event keyPress
     * @return {?}
     */
    onKeypress(event) {
        this.setCurrentDate(event);
    }
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    onClick(event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    }
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    onChange(event) {
        this.onBeforeChange(event);
        this.valueChange.emit(this.getfomatedDate(event.target.value));
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.onAfterChange(event);
        }), 0);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterFocus(event); }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterBlur(event); }), 0);
        ;
    }
    /**
     * 本日日付の設定
     * @param {?} event
     * @return {?}
     */
    setCurrentDate(event) {
        if (event.key === "/") {
            this.value = new Date();
            event.target.value = this.getfomatedDate(this.value).split('/').join('-');
            this.onChange(event);
        }
    }
    /**
     * 日付データのフォーマット変更を行う
     * @private
     * @param {?} date 日付データ
     * @return {?} 日付文字列
     */
    getfomatedDate(date) {
        if (!date)
            return "";
        /** @type {?} */
        const toString = Object.prototype.toString;
        if (toString.call(date) == "[object Date]") {
            const { year, month, day } = this.paddingDate(date.toLocaleDateString());
            return `${year}/${month}/${day}`;
        }
        else {
            const { year, month, day } = this.paddingDate(date);
            if (date.match(/-/))
                return `${year}/${month}/${day}`;
            else
                return `${year}-${month}-${day}`;
        }
    }
    /**
     * 日付文字列の年月日分割オブジェクトを返却する
     * @param {?} dateStr 日付文字列
     * @return {?} 分割オブジェクト(year, month, day)
     */
    paddingDate(dateStr) {
        if (!dateStr)
            return;
        /** @type {?} */
        const dateArr = dateStr.split(/[-/]/);
        /** @type {?} */
        let year = (Array(4).join("0") + dateArr[0]).slice(-4);
        /** @type {?} */
        const month = (Array(2).join('0') + dateArr[1]).slice(-2);
        /** @type {?} */
        const day = (Array(2).join('0') + dateArr[2]).slice(-2);
        return { year, month, day };
    }
    /**
     * フォーマット編集
     * @param {?} value
     * @return {?}
     */
    changeFormat(value) {
        if (!value) {
            this.stringValue = "";
            return;
        }
        /** @type {?} */
        const dataStr = value.toLocaleDateString();
        /** @type {?} */
        const result = dataStr.replace('/', "年").replace('/', '月') + '日';
        return result;
    }
}
SHCtlDateComponent.decorators = [
    { type: Component, args: [{
                selector: "sh-ctl-date",
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation {{strClass}}\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm [required]=\"required\" matInput type=\"date\" [matDatepicker]=\"picker\" [placeholder]=\"title\" max=\"9999-12-31\"\r\n        attr.name=\"{{ctlName}}\" (click)=\"onClick($event)\" (dateChange)=\"onChange($event)\" (focus)=\"onFocus($event)\"\r\n        [disabled]=\"disabled\" (keypress)=\"onKeypress($event)\" [(ngModel)]=\"value\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" class=\"can-moved-with-the-enter-key\">\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\" (mousedown)=\"picker.open(); $event.preventDefault(); $event.stopPropagation();\" ></mat-datepicker-toggle>\r\n      <mat-datepicker #picker (opened)=\"onOpened()\" (closed)=\"onClosed()\"></mat-datepicker>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm [required]=\"required\" matInput type=\"date\" [matDatepicker]=\"picker\" max=\"9999-12-31\"\r\n      attr.name=\"{{ctlName}}\" (click)=\"onClick($event)\" (dateChange)=\"onChange($event)\" (focus)=\"onFocus($event)\"\r\n      [disabled]=\"disabled\" (keypress)=\"onKeypress($event)\" [(ngModel)]=\"value\"\r\n      maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" class=\"can-moved-with-the-enter-key\">\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" (mousedown)=\"picker.open(); $event.preventDefault(); $event.stopPropagation();\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker (opened)=\"onOpened()\" (closed)=\"onClosed()\"></mat-datepicker>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{stringValue}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{stringValue}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                providers: [{ provide: DateAdapter, useClass: JpDateAdapter }],
                styles: [".input-group-text{background-color:#fff;border:none}.btn{border:none}.btn.btn-primary:disabled{background-color:#999}.btn-primary{background-color:#17a2b8}.btn-primary:hover{background-color:#1792b8}.fixed-bottom{top:708px;height:65px;max-width:1024px;margin-right:auto;margin-left:auto}input[type=date]::-webkit-calendar-picker-indicator{display:none}.display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}input[type=date]::-webkit-inner-spin-button,input[type=date]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=date]::-webkit-clear-button{display:none}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlDateComponent.ctorParameters = () => [
    { type: DateAdapter }
];
if (false) {
    /** @type {?} */
    SHCtlDateComponent.prototype.stringValue;
}
//# sourceMappingURL=data:application/json;base64,