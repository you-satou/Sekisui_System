/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { SHFormControl } from '../../utilities/ShFormControl';
export class SHCtlKatakanaComponent extends SHFormControl {
    constructor() {
        super();
        //入力変換時を補足するための値保持
        this._data = "";
        this.ctlName = "SHCtlKatakana";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.onInit();
    }
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    onInput(event) {
        /** @type {?} */
        const isSameData = (this._data == event.data);
        this._data = event.data;
        //入力変換中は書き換えを行わない
        if (event.isComposing && (!event.isComposing || !isSameData))
            return;
        if (!event.isComposing) {
            if (this.maxByteLength > 0)
                if (event.inputType !== 'insertCompositionText') {
                    this.onKeyDown(event);
                    SHCtlCommon.sliceLength(event, this.maxByteLength);
                }
        }
    }
    /**
     * onPaste
     * @param {?} event paste
     * @return {?}
     */
    onPaste(event) {
        /** @type {?} */
        let obj = this;
        setTimeout((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            SHCtlCommon.replaceHalfDoubleQuote(event);
            obj.replaceFullWIdth(event);
        }), 100);
    }
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    onClick(event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterFocus(event); }), 0);
    }
    /**
     * onChange
     * @param {?} event chage
     * @return {?}
     */
    onChange(event) {
        this.onBeforeChange(event);
        //emitの直前にも値の精査を行う
        this.onInput(event);
        this.valueChange.emit(event.target.value);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterChange(event); }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        this.replaceFullWIdth(event);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterBlur(event); }), 0);
        ;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onKeyUp(event) {
        if (!event.isComposing) {
            SHCtlCommon.replaceHalfDoubleQuote(event);
            this.replaceFullWIdth(event);
        }
    }
    /**
     * onKeyDown
     * @param {?} event KeyDown
     * @return {?}
     */
    onKeyDown(event) {
        super.onKeyDown(event);
    }
    /**
     * 除去変換
     * @param {?} event
     * @return {?}
     */
    replaceFullWIdth(event) {
        event.target.value = event.target.value.replace(/[ぁ-んァ-ヶ\u30e0-\u9fcfａ-ｚＡ-Ｚ１-９！”＃＄％＆’（）＝～｜￥＾－‘｛＋＊｝＜＞？＿＠「；：」、。・￥ー　]/g, "");
    }
}
SHCtlKatakanaComponent.decorators = [
    { type: Component, args: [{
                selector: 'sh-ctl-katakana',
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [required]=\"required\" [placeholder]=\"title\" (input)=\"onInput($event)\"\r\n        (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\"\r\n        (paste)=\"onPaste($event)\"\r\n        [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control SHCtlKatakana can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" (input)=\"onInput($event)\"\r\n      (click)=\"onClick($event)\" (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\"\r\n      (paste)=\"onPaste($event)\"\r\n      [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n      class=\"form-control SHCtlKatakana can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\"\r\n      maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlKatakanaComponent.ctorParameters = () => [];
if (false) {
    /**
     * @type {?}
     * @private
     */
    SHCtlKatakanaComponent.prototype._data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLWthdGFrYW5hLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1rYXRha2FuYS9zaC1jdGwta2F0YWthbmEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sK0JBQStCLENBQUE7QUFPN0QsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGFBQXFCO0lBSy9EO1FBQ0UsS0FBSyxFQUFFLENBQUM7O1FBSEYsVUFBSyxHQUFFLEVBQUUsQ0FBQztRQUloQixJQUFJLENBQUMsT0FBTyxHQUFHLGVBQWUsQ0FBQztJQUNqQyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDOzs7Ozs7SUFNTSxPQUFPLENBQUMsS0FBSzs7Y0FDWixVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDN0MsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFBO1FBQ3ZCLGlCQUFpQjtRQUNqQixJQUFHLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDekQsT0FBTztRQUNULElBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFHO1lBQ3hCLElBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDO2dCQUN4QixJQUFJLEtBQUssQ0FBQyxTQUFTLEtBQUssdUJBQXVCLEVBQUU7b0JBQy9DLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ3RCLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztpQkFDcEQ7U0FDSjtJQUNILENBQUM7Ozs7OztJQU1NLE9BQU8sQ0FBQyxLQUFLOztZQUNkLEdBQUcsR0FBRyxJQUFJO1FBQ2QsVUFBVTs7OztRQUFDLFVBQVMsQ0FBQztZQUNuQixXQUFXLENBQUMsc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLENBQUMsR0FBRSxHQUFHLENBQUMsQ0FBQztJQUNWLENBQUM7Ozs7OztJQU1NLE9BQU8sQ0FBQyxLQUFLO1FBQ2xCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7Ozs7SUFNTSxPQUFPLENBQUMsS0FBSztRQUNsQixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTFCLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFdEIsVUFBVTs7O1FBQUMsR0FBRyxFQUFFLEdBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDOzs7Ozs7SUFNTSxRQUFRLENBQUMsS0FBSztRQUNuQixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTNCLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUMsVUFBVTs7O1FBQUMsR0FBRyxFQUFFLEdBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7Ozs7SUFNTSxNQUFNLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUM1QixVQUFVOzs7UUFBQyxHQUFHLEVBQUUsR0FBRSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUEsQ0FBQyxHQUFFLENBQUMsQ0FBQyxDQUFDO1FBQUEsQ0FBQztJQUNuRCxDQUFDOzs7OztJQUVNLE9BQU8sQ0FBQyxLQUFLO1FBQ2xCLElBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFHO1lBQ3hCLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDOUI7SUFDSCxDQUFDOzs7Ozs7SUFNTSxTQUFTLENBQUMsS0FBSztRQUNwQixLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7Ozs7OztJQU1NLGdCQUFnQixDQUFDLEtBQUs7UUFDM0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLG9FQUFvRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVILENBQUM7OztZQXJIRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsMnRGQUErQzs7YUFFaEQ7Ozs7Ozs7OztJQUlDLHVDQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTSEN0bENvbW1vbiB9IGZyb20gJy4uL3NoLWN0bC1jb21tb24nO1xyXG5pbXBvcnQgeyBTSEZvcm1Db250cm9sIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL1NoRm9ybUNvbnRyb2wnXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NoLWN0bC1rYXRha2FuYScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NoLWN0bC1rYXRha2FuYS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2gtY3RsLWthdGFrYW5hLmNvbXBvbmVudC5jc3MnLCAnLi4vLi4vLi4vc3R5bGUuY29tbW9uLmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTSEN0bEthdGFrYW5hQ29tcG9uZW50IGV4dGVuZHMgU0hGb3JtQ29udHJvbDxzdHJpbmc+IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgLy/lhaXlipvlpInmj5vmmYLjgpLoo5zotrPjgZnjgovjgZ/jgoHjga7lgKTkv53mjIFcclxuICBwcml2YXRlIF9kYXRhID1cIlwiO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLmN0bE5hbWUgPSBcIlNIQ3RsS2F0YWthbmFcIjtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5vbkluaXQoKTtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogb25JbnB1dFxyXG4gICAqIEBwYXJhbSBldmVudCBpbnB1dFxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbklucHV0KGV2ZW50KSB7XHJcbiAgICBjb25zdCBpc1NhbWVEYXRhID0gKHRoaXMuX2RhdGEgPT0gZXZlbnQuZGF0YSk7XHJcbiAgICB0aGlzLl9kYXRhID0gZXZlbnQuZGF0YVxyXG4gICAgLy/lhaXlipvlpInmj5vkuK3jga/mm7jjgY3mj5vjgYjjgpLooYzjgo/jgarjgYRcclxuICAgIGlmKGV2ZW50LmlzQ29tcG9zaW5nICYmICghZXZlbnQuaXNDb21wb3NpbmcgfHwgIWlzU2FtZURhdGEpKVxyXG4gICAgICByZXR1cm47XHJcbiAgICBpZiAoICFldmVudC5pc0NvbXBvc2luZyApIHtcclxuICAgICAgaWYgKHRoaXMubWF4Qnl0ZUxlbmd0aCA+IDApXHJcbiAgICAgICAgaWYgKGV2ZW50LmlucHV0VHlwZSAhPT0gJ2luc2VydENvbXBvc2l0aW9uVGV4dCcpIHtcclxuICAgICAgICAgIHRoaXMub25LZXlEb3duKGV2ZW50KTtcclxuICAgICAgICAgIFNIQ3RsQ29tbW9uLnNsaWNlTGVuZ3RoKGV2ZW50LCB0aGlzLm1heEJ5dGVMZW5ndGgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uUGFzdGVcclxuICAgKiBAcGFyYW0gZXZlbnQgcGFzdGVcclxuICAgKi9cclxuICBwdWJsaWMgb25QYXN0ZShldmVudCkge1xyXG4gICAgbGV0IG9iaiA9IHRoaXM7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKGUpe1xyXG4gICAgICBTSEN0bENvbW1vbi5yZXBsYWNlSGFsZkRvdWJsZVF1b3RlKGV2ZW50KTtcclxuICAgICAgb2JqLnJlcGxhY2VGdWxsV0lkdGgoZXZlbnQpO1xyXG4gICAgfSwgMTAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2xpY2tcclxuICAgKiBAcGFyYW0gZXZlbnQgY2xpY2tcclxuICAgKi9cclxuICBwdWJsaWMgb25DbGljayhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUNsaWNrKGV2ZW50KTtcclxuXHJcbiAgICB0aGlzLm9uQWZ0ZXJDbGljayhldmVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbkZvY3VzXHJcbiAgICogQHBhcmFtIGV2ZW50IGZvY3VzXHJcbiAgICovXHJcbiAgcHVibGljIG9uRm9jdXMoZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVGb2N1cyhldmVudCk7XHJcblxyXG4gICAgZXZlbnQudGFyZ2V0LnNlbGVjdCgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckZvY3VzKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25DaGFuZ2VcclxuICAgKiBAcGFyYW0gZXZlbnQgY2hhZ2VcclxuICAgKi9cclxuICBwdWJsaWMgb25DaGFuZ2UoZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVDaGFuZ2UoZXZlbnQpO1xyXG5cclxuICAgIC8vZW1pdOOBruebtOWJjeOBq+OCguWApOOBrueyvuafu+OCkuihjOOBhlxyXG4gICAgdGhpcy5vbklucHV0KGV2ZW50KTtcclxuICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdChldmVudC50YXJnZXQudmFsdWUpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckNoYW5nZShldmVudCl9LCAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQmx1clxyXG4gICAqIEBwYXJhbSBldmVudCBibHVyXHJcbiAgICovXHJcbiAgcHVibGljIG9uQmx1cihldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUJsdXIoZXZlbnQpO1xyXG4gICAgdGhpcy5yZXBsYWNlRnVsbFdJZHRoKGV2ZW50KVxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQmx1cihldmVudCk7fSwgMCk7O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG9uS2V5VXAoZXZlbnQpIHtcclxuICAgIGlmICggIWV2ZW50LmlzQ29tcG9zaW5nICkgeyBcclxuICAgICAgU0hDdGxDb21tb24ucmVwbGFjZUhhbGZEb3VibGVRdW90ZShldmVudCk7XHJcbiAgICAgIHRoaXMucmVwbGFjZUZ1bGxXSWR0aChldmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbktleURvd25cclxuICAgKiBAcGFyYW0gZXZlbnQgS2V5RG93blxyXG4gICAqL1xyXG4gIHB1YmxpYyBvbktleURvd24oZXZlbnQpIHtcclxuICAgIHN1cGVyLm9uS2V5RG93bihldmVudCk7XHJcbiAgfVxyXG5cclxuIC8qKlxyXG4gICog6Zmk5Y675aSJ5o+bXHJcbiAgKiBAcGFyYW0gZXZlbnRcclxuICAqL1xyXG4gIHB1YmxpYyByZXBsYWNlRnVsbFdJZHRoKGV2ZW50KSB7XHJcbiAgICBldmVudC50YXJnZXQudmFsdWUgPSBldmVudC50YXJnZXQudmFsdWUucmVwbGFjZSgvW+OBgS3jgpPjgqEt44O2XFx1MzBlMC1cXHU5ZmNm772BLe+9mu+8oS3vvLrvvJEt77yZ77yB4oCd77yD77yE77yF77yG4oCZ77yI77yJ77yd772e772c77+l77y+77yN4oCY772b77yL77yK772d77yc77ye77yf77y/77yg44CM77yb77ya44CN44CB44CC44O777+l44O844CAXS9nLCBcIlwiKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==