/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Component } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
import { SHCtlCommon } from '../sh-ctl-common';
/**
 * @record
 */
function Data() { }
if (false) {
    /** @type {?} */
    Data.prototype.dataTitle;
    /** @type {?} */
    Data.prototype.hiddenColumns;
}
export class SHCtlPopupDialogComponent {
    /**
     * @param {?} dialogRef
     * @param {?} data
     */
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.displayedColumns = [];
        this.name = "";
        this.uniqueStr = "";
    }
    /**
     * 値がバインドされる時に呼ばれる
     * @return {?}
     */
    ngOnInit() {
        this.init();
    }
    /**
     * 値の初期化
     * @private
     * @return {?}
     */
    init() {
        this.dataTitle = this.data.dataTitle;
        /** @type {?} */
        let cols = [];
        this.getHashKeys().forEach((/**
         * @param {?} name
         * @param {?} idx
         * @return {?}
         */
        (name, idx) => {
            if (!this.data.hiddenColumns.find((/**
             * @param {?} _
             * @return {?}
             */
            _ => _ == (idx + 1))))
                cols.push(name);
        }));
        this.displayedColumns = cols;
        this.uniqueStr = SHCtlCommon.getUniqueStr();
    }
    /**
     * テーブルのヘッダーを編集
     * @return {?}
     */
    ngAfterViewChecked() {
        /** @type {?} */
        let headerElement = document.getElementsByTagName('th');
        /** @type {?} */
        let countBlank = 0;
        if (!this.codesHeader)
            return;
        for (let i = 0; i < headerElement.length; i++) {
            if (this.codesHeader[i] != "") {
                for (let e = 1; e <= countBlank; e++) {
                    headerElement[i - e].style.display = 'none';
                }
                countBlank = 0;
            }
            else if (this.codesHeader[i] === "") {
                countBlank += 1;
                headerElement[i - countBlank].colSpan = countBlank + 1;
                headerElement[i - countBlank].style.textAlign = 'center';
                if (i === headerElement.length - 1) {
                    for (let j = 0; j < countBlank; j++) {
                        headerElement[i - j].style.display = 'none';
                    }
                }
            }
        }
    }
    /**
     * ダイアログを閉じる
     * @return {?}
     */
    closeDialog() {
        this.dialogRef.close();
    }
    /**
     * ポップアップから選択されたデータを親に返す
     * @param {?} item 事業所コード一覧から選択された1つ
     * @return {?}
     */
    selectCode(item) {
        //ダイアログを閉める時に値を親に渡す
        this.dialogRef.close(item);
    }
    /**
     * データのkeyを返す
     * @return {?}
     */
    getHashKeys() {
        if (!this.unchangeableCodes || this.unchangeableCodes.length == 0) {
            return [];
        }
        else {
            return Object.keys(this.unchangeableCodes[0]);
        }
    }
    /**
     * ポップアップ内での曖昧検索
     * スペース区切りで1キーワードとする
     * @param {?} event inputイベント
     * @return {?}
     */
    filter(event) {
        if (!this.unchangeableCodes)
            return;
        /** @type {?} */
        const filterString = event.target.value;
        /** @type {?} */
        let fileterStrArray = filterString.replace(/　/g, " ").split(" ");
        fileterStrArray = fileterStrArray.filter((/**
         * @param {?} value
         * @return {?}
         */
        (value) => {
            return value;
        }));
        /** @type {?} */
        let resultArray;
        resultArray = this.unchangeableCodes.concat();
        for (let i = 0; i < fileterStrArray.length; i++) {
            /** @type {?} */
            let obj = this;
            resultArray = resultArray.filter((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                /** @type {?} */
                let values = Object.values(value);
                for (let j = 0; j < values.length; j++) {
                    if (obj.data.hiddenColumns.find((/**
                     * @param {?} _
                     * @return {?}
                     */
                    _ => _ == (j + 1))))
                        continue;
                    if (values[j] != null && values[j].toString().match(fileterStrArray[i])) {
                        return true;
                    }
                }
                return false;
            }));
        }
        this.codes = resultArray;
    }
}
SHCtlPopupDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'sh-ctl-popup-dialog',
                template: "<div *ngIf=\"!unchangeableCodes\" class=\"overlay\">\r\n  <mat-spinner></mat-spinner>\r\n  <span class=\"loader-text\">Loading...</span>\r\n</div> \r\n<div class=\"sh-container\" id={{uniqueStr}}>\r\n    <h1 mat-dialog-title class=\"sh-text-center\">{{dataTitle}}</h1>\r\n    <div mat-dialog-content class=\"sh-dialog-content\">\r\n      <mat-form-field class=\"sh-width-100\">\r\n        <input matInput placeholder=\"\u691C\u7D22\u6B04\" (input)=\"filter($event)\"/>\r\n      </mat-form-field>\r\n      <div class=\"sh-dialog-table-container mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"codes\" class=\"sh-width-100\">\r\n          <span *ngFor=\"let key of getHashKeys(); let i = index\">\r\n            <ng-container matColumnDef=\"{{key}}\">\r\n              <th mat-header-cell *matHeaderCellDef>{{codesHeader[i]}}</th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element[key]}}</td>\r\n            </ng-container>\r\n          </span>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selectCode(row)\"></tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-raised-button (click)=\"closeDialog()\">\u623B\u308B</button>\r\n    </div>\r\n  </div>\r\n  ",
                styles: ["", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlPopupDialogComponent.ctorParameters = () => [
    { type: MatDialogRef },
    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
];
if (false) {
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.displayedColumns;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.name;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.uniqueStr;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.dataTitle;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.codes;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.unchangeableCodes;
    /** @type {?} */
    SHCtlPopupDialogComponent.prototype.codesHeader;
    /**
     * @type {?}
     * @private
     */
    SHCtlPopupDialogComponent.prototype.dialogRef;
    /**
     * @type {?}
     * @private
     */
    SHCtlPopupDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,