/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from "@angular/core";
import { SHCtlCommon } from "../sh-ctl-common";
import { SHFormControl } from "../../utilities/ShFormControl";
export class SHCtlAllCharComponent extends SHFormControl {
    constructor() {
        super();
        //入力変換時を補足するための値保持
        this._data = "";
        this.ctlName = "SHCtlAllChar";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.onInit();
    }
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    onInput(event) {
        /** @type {?} */
        const isSameData = this._data == event.data;
        this._data = event.data;
        //入力変換中は書き換えを行わない
        if (event.isComposing && (!event.isComposing || !isSameData))
            return;
        if (event.inputType !== "insertCompositionText") {
            SHCtlCommon.sliceLength(event, this.maxlength);
        }
    }
    /**
     * onClick
     * @param {?} event click
     * @return {?}
     */
    onClick(event) {
        this.onBeforeClick(event);
        this.onAfterClick(event);
    }
    /**
     * onChange
     * @param {?} event change
     * @return {?}
     */
    onChange(event) {
        this.onBeforeChange(event);
        //emitの直前にも値の精査を行う
        this.onInput(event);
        SHCtlCommon.replaceFullDoubleQuote(event);
        SHCtlCommon.replaceHalfDoubleQuote(event);
        this.valueChange.emit(event.target.value);
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.onAfterChange(event);
        }), 0);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        event.target.value = SHCtlCommon.LineBreak(event.target.value);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.onAfterFocus(event);
        }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        event.target.value = SHCtlCommon.LineBreak(event.target.value);
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.onAfterBlur(event);
        }), 0);
    }
}
SHCtlAllCharComponent.decorators = [
    { type: Component, args: [{
                selector: "sh-ctl-all-char",
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <mat-form-field id=\"mat-all-char\" class=\"example-full-width mat-validation\" [floatLabel]=\"floatLabel\">\r\n      <input #inputElm matInput [required]=\"required\" [placeholder]=\"title\" [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control can-moved-with-the-enter-key {{strClass}}\" (input)=\"onInput($event)\" (click)=\"onClick($event)\"\r\n        (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" (keydown)=\"onKeyDown($event)\" [disabled]=\"disabled\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}</span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"only-field\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input #inputElm matInput [required]=\"required\" [(ngModel)]=\"value\" attr.name=\"{{ctlName}}\"\r\n        class=\"form-control can-moved-with-the-enter-key {{strClass}}\" (input)=\"onInput($event)\" (click)=\"onClick($event)\"\r\n        (change)=\"onChange($event)\" (focus)=\"onFocus($event)\" [disabled]=\"disabled\"\r\n        maxlength=\"{{maxlength}}\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" />\r\n    <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n      aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div fxFlex class=\"valueOutput\">\r\n        {{value}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: ["mat-card-actions,mat-card-content,mat-card-title{text-align:center}mat-card-content{padding-top:20px;padding-bottom:20px}.advanced-color{color:#3f51b5}.beginner-color{color:#f44336}.display-ctl-view{display:-webkit-box;display:flex}.display-result{margin-left:30px}.valueOutput{-webkit-box-flex:1;flex:1}.validation-error::ng-deep .mat-form-field-label{color:red}.validation-error::ng-deep .mat-form-field-underline{background-color:red}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlAllCharComponent.ctorParameters = () => [];
if (false) {
    /**
     * @type {?}
     * @private
     */
    SHCtlAllCharComponent.prototype._data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLWFsbC1jaGFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1hbGwtY2hhci9zaC1jdGwtYWxsLWNoYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUF5QixNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBTzlELE1BQU0sT0FBTyxxQkFDWCxTQUFRLGFBQXFCO0lBSzdCO1FBQ0UsS0FBSyxFQUFFLENBQUM7O1FBSEYsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUlqQixJQUFJLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDOzs7Ozs7SUFNTSxPQUFPLENBQUMsS0FBSzs7Y0FDWixVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsSUFBSTtRQUMzQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDeEIsaUJBQWlCO1FBQ2pCLElBQUksS0FBSyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUFFLE9BQU87UUFDckUsSUFBSSxLQUFLLENBQUMsU0FBUyxLQUFLLHVCQUF1QixFQUFFO1lBQy9DLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNoRDtJQUNILENBQUM7Ozs7OztJQU1NLE9BQU8sQ0FBQyxLQUFLO1FBQ2xCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7Ozs7SUFNTSxRQUFRLENBQUMsS0FBSztRQUNuQixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTNCLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BCLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUUxQyxVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVCLENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUNSLENBQUM7Ozs7OztJQU1NLE9BQU8sQ0FBQyxLQUFLO1FBQ2xCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFMUIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9ELEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFdEIsVUFBVTs7O1FBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDOzs7Ozs7SUFNTSxNQUFNLENBQUMsS0FBSztRQUNqQixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pCLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUUvRCxVQUFVOzs7UUFBQyxHQUFHLEVBQUU7WUFDZCxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFCLENBQUMsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUNSLENBQUM7OztZQXhGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsNG1GQUErQzs7YUFFaEQ7Ozs7Ozs7OztJQUtDLHNDQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tIFwiLi4vc2gtY3RsLWNvbW1vblwiO1xyXG5pbXBvcnQgeyBTSEZvcm1Db250cm9sIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9TaEZvcm1Db250cm9sXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogXCJzaC1jdGwtYWxsLWNoYXJcIixcclxuICB0ZW1wbGF0ZVVybDogXCIuL3NoLWN0bC1hbGwtY2hhci5jb21wb25lbnQuaHRtbFwiLFxyXG4gIHN0eWxlVXJsczogW1wiLi9zaC1jdGwtYWxsLWNoYXIuY29tcG9uZW50LmNzc1wiLCBcIi4uLy4uLy4uL3N0eWxlLmNvbW1vbi5jc3NcIl0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTSEN0bEFsbENoYXJDb21wb25lbnRcclxuICBleHRlbmRzIFNIRm9ybUNvbnRyb2w8c3RyaW5nPlxyXG4gIGltcGxlbWVudHMgT25Jbml0IHtcclxuICAvL+WFpeWKm+WkieaPm+aZguOCkuijnOi2s+OBmeOCi+OBn+OCgeOBruWApOS/neaMgVxyXG4gIHByaXZhdGUgX2RhdGEgPSBcIlwiO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLmN0bE5hbWUgPSBcIlNIQ3RsQWxsQ2hhclwiO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm9uSW5pdCgpO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBvbklucHV0XHJcbiAgICogQHBhcmFtIGV2ZW50IGlucHV0XHJcbiAgICovXHJcbiAgcHVibGljIG9uSW5wdXQoZXZlbnQpIHtcclxuICAgIGNvbnN0IGlzU2FtZURhdGEgPSB0aGlzLl9kYXRhID09IGV2ZW50LmRhdGE7XHJcbiAgICB0aGlzLl9kYXRhID0gZXZlbnQuZGF0YTtcclxuICAgIC8v5YWl5Yqb5aSJ5o+b5Lit44Gv5pu444GN5o+b44GI44KS6KGM44KP44Gq44GEXHJcbiAgICBpZiAoZXZlbnQuaXNDb21wb3NpbmcgJiYgKCFldmVudC5pc0NvbXBvc2luZyB8fCAhaXNTYW1lRGF0YSkpIHJldHVybjtcclxuICAgIGlmIChldmVudC5pbnB1dFR5cGUgIT09IFwiaW5zZXJ0Q29tcG9zaXRpb25UZXh0XCIpIHtcclxuICAgICAgU0hDdGxDb21tb24uc2xpY2VMZW5ndGgoZXZlbnQsIHRoaXMubWF4bGVuZ3RoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQ2xpY2tcclxuICAgKiBAcGFyYW0gZXZlbnQgY2xpY2tcclxuICAgKi9cclxuICBwdWJsaWMgb25DbGljayhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUNsaWNrKGV2ZW50KTtcclxuXHJcbiAgICB0aGlzLm9uQWZ0ZXJDbGljayhldmVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbkNoYW5nZVxyXG4gICAqIEBwYXJhbSBldmVudCBjaGFuZ2VcclxuICAgKi9cclxuICBwdWJsaWMgb25DaGFuZ2UoZXZlbnQpIHtcclxuICAgIHRoaXMub25CZWZvcmVDaGFuZ2UoZXZlbnQpO1xyXG5cclxuICAgIC8vZW1pdOOBruebtOWJjeOBq+OCguWApOOBrueyvuafu+OCkuihjOOBhlxyXG4gICAgdGhpcy5vbklucHV0KGV2ZW50KTtcclxuICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VGdWxsRG91YmxlUXVvdGUoZXZlbnQpO1xyXG4gICAgU0hDdGxDb21tb24ucmVwbGFjZUhhbGZEb3VibGVRdW90ZShldmVudCk7XHJcbiAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgdGhpcy5vbkFmdGVyQ2hhbmdlKGV2ZW50KTtcclxuICAgIH0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25Gb2N1c1xyXG4gICAqIEBwYXJhbSBldmVudCBmb2N1c1xyXG4gICAqL1xyXG4gIHB1YmxpYyBvbkZvY3VzKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlRm9jdXMoZXZlbnQpO1xyXG5cclxuICAgIGV2ZW50LnRhcmdldC52YWx1ZSA9IFNIQ3RsQ29tbW9uLkxpbmVCcmVhayhldmVudC50YXJnZXQudmFsdWUpO1xyXG4gICAgZXZlbnQudGFyZ2V0LnNlbGVjdCgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICB0aGlzLm9uQWZ0ZXJGb2N1cyhldmVudCk7XHJcbiAgICB9LCAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uQmx1clxyXG4gICAqIEBwYXJhbSBldmVudCBibHVyXHJcbiAgICovXHJcbiAgcHVibGljIG9uQmx1cihldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUJsdXIoZXZlbnQpO1xyXG4gICAgZXZlbnQudGFyZ2V0LnZhbHVlID0gU0hDdGxDb21tb24uTGluZUJyZWFrKGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIHRoaXMub25BZnRlckJsdXIoZXZlbnQpO1xyXG4gICAgfSwgMCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==