/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { SHCtlCommon } from '../sh-ctl-common';
import { MatDialog } from '@angular/material';
import { SHFormPopup } from '../../utilities/ShFormPopup';
import { SmplPopupService } from '../../services/smpl-popup.service';
import { BindCtlService } from '../../services/bind-ctl.service';
import { LockScreenService } from "../../services/lock-screen.service";
export class SHCtlJigCodeComponent extends SHFormPopup {
    /**
     * @param {?} smplPopupService
     * @param {?} dialog
     * @param {?} bindCtlService
     * @param {?} lockScreenService
     */
    constructor(smplPopupService, dialog, bindCtlService, lockScreenService) {
        super(smplPopupService, dialog, bindCtlService, lockScreenService);
        this.smplPopupService = smplPopupService;
        this.dialog = dialog;
        this.bindCtlService = bindCtlService;
        this.lockScreenService = lockScreenService;
        this.ctlName = "SHCtlJigCode";
        this.maxlength = 6;
    }
    /**
     * onInput
     * @param {?} event input
     * @return {?}
     */
    onInput(event) {
        SHCtlCommon.replaceSpace(event);
        SHCtlCommon.replaceFullWidth(event);
        SHCtlCommon.replaceHalfWidth(event);
        SHCtlCommon.replaceSign(event);
        SHCtlCommon.sliceLength(event, this.maxlength);
    }
    /**
     * onFocus
     * @param {?} event focus
     * @return {?}
     */
    onFocus(event) {
        this.onBeforeFocus(event);
        event.target.value = this.toText(event.target.value);
        event.target.select();
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterFocus(event); }), 0);
    }
    /**
     * onBlur
     * @param {?} event blur
     * @return {?}
     */
    onBlur(event) {
        this.onBeforeBlur(event);
        setTimeout((/**
         * @return {?}
         */
        () => { this.onAfterBlur(event); }), 0);
        ;
    }
    /**
     * 3桁入力時に残りを補完する
     * @param {?} jigCode 事業所コード
     * @return {?}
     */
    toText(jigCode) {
        // ブランクなら
        if (SHCtlCommon.isBlank(jigCode))
            return "";
        // 6桁は処理しない
        if (jigCode.trim().length == 6)
            return jigCode;
        /** @type {?} */
        let result = null;
        if (jigCode.trim().length == 3) {
            /** @type {?} */
            let firstString = parseInt((Number(jigCode.substr(0, 1)) * 9).toString(), 10);
            // 一文字目
            /** @type {?} */
            let secondString = parseInt((Number(jigCode.substr(1, 1)) * 8).toString(), 10);
            // 弐文字目
            /** @type {?} */
            let thirdString = parseInt((Number(jigCode.substr(2, 1)) * 7).toString(), 10);
            // 参文字目
            /** @type {?} */
            const strNo = firstString + secondString + thirdString;
            /** @type {?} */
            const lastStrting = strNo.toString().substr(strNo.toString().length - 1, 1);
            // one + two + three + '00' + lastNo
            result = `${jigCode}00${lastStrting}`;
        }
        else {
            result = "";
        }
        return result;
    }
}
SHCtlJigCodeComponent.decorators = [
    { type: Component, args: [{
                selector: 'sh-ctl-jig-code',
                template: "<ng-container *ngIf=\"!onlyField; else onlyFieldControl\">\r\n  <div *ngIf=\"!isDisabled\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <input class=\"bind-flg__input\" [(value)]=\"noChangeFlg\" [name]=\"noChangeFlgCtlName\" (change)=\"noChangeFlgChange($event)\"/>\r\n    <div class=\"sh-flex sh-flex-center\">\r\n      <mat-form-field style=\"width: 33.3%;\" class=\"mat-validation\" [floatLabel]=\"floatLabel\">\r\n        <input [required]=\"required\" #inputElm matInput (input)=\"onInput($event)\"\r\n          (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" [(ngModel)]=\"value\"\r\n          class=\"SHCtlJigCode can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\" type=\"tel\"\r\n          [placeholder]=\"title\" [ngStyle]=\"styles\" [ngClass]=\"objClass\" attr.name=\"{{ctlName}}\" />\r\n        <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n          aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"result-container\" style=\"width: 66.6%;\">\r\n        <input class=\"result-input {{strClass}}\" matInput type=\"text\" [(ngModel)]=\"name\" [ngStyle]=\"styles\"\r\n        attr.name=\"{{popupLabelName}}\" [ngClass]=\"objClass\" disabled>\r\n        <mat-icon mat-button matSuffix class=\"mat-search-btn\" *ngIf=\"!inputElm.readOnly && !inputElm.disabled\"\r\n          (click)=\"getCodes()\">search</mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <span class=\"custom-alert-message\">{{message.toString().split(',').join(' ')}}\r\n    </span>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-template #onlyFieldControl>\r\n  <div class=\"sh-flex sh-flex-center\" (focusin)=\"onFocusin($event)\" (focusout)=\"onFocusout($event)\">\r\n    <div class=\"only-field\" style=\"width: 33.3%;\">\r\n      <input class=\"bind-flg__input\" [(value)]=\"noChangeFlg\" [name]=\"noChangeFlgCtlName\" (change)=\"noChangeFlgChange($event)\"/>\r\n      <input [required]=\"required\" #inputElm matInput (input)=\"onInput($event)\"\r\n        (click)=\"onClick($event)\" (focus)=\"onFocus($event)\" (change)=\"onChange($event)\" [(ngModel)]=\"value\"\r\n        class=\"SHCtlJigCode can-moved-with-the-enter-key {{strClass}}\" [disabled]=\"disabled\" type=\"tel\"\r\n        [ngStyle]=\"styles\" [ngClass]=\"objClass\" attr.name=\"{{ctlName}}\" />\r\n      <button mat-button *ngIf=\"inputElm.value && !inputElm.readOnly && !inputElm.disabled\" matSuffix mat-icon-button\r\n        aria-label=\"Clear\" (mousedown)=\"clearValue()\" (keydown)=\"clickClearButton($event)\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div class=\"only-field only-label\" style=\"width: 66.6%;\">\r\n      <input class=\"result-input {{strClass}}\" matInput type=\"text\" [(ngModel)]=\"name\" [ngStyle]=\"styles\"\r\n      attr.name=\"{{popupLabelName}}\" [ngClass]=\"objClass\" disabled>\r\n      <mat-icon mat-button matSuffix class=\"mat-search-btn\" *ngIf=\"!inputElm.readOnly && !inputElm.disabled\"\r\n        (click)=\"getCodes()\">search</mat-icon>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isDisabled\" class=\"display-ctl-view\">\r\n  <div>\r\n    <div *ngIf=\"title\" class=\"display-ctl-view\">\r\n      <div class=\"display-result\" [ngStyle]=\"{'width.px': labelWidth}\" fxLayout=\"row wrap\" fxFlex>\r\n        <div fxFlex class=\"item-title\"><strong>{{title}}:</strong></div>\r\n      </div>\r\n      <div class=\"valueOutput-container\">\r\n        <div fxFlex class=\"valueOutput\">{{value}}</div>\r\n        <div fxFlex class=\"valueOutput-second\">{{name}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"!title\" class=\"display-ctl-view notitle-value\">\r\n      <div class=\"valueOutput-container\">\r\n        <div fxFlex class=\"valueOutput\">{{value}}</div>\r\n        <div fxFlex class=\"valueOutput-second\">{{name}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".mat-search-btn{color:#bababa;font-size:1.1rem}.mat-search-btn:hover{cursor:pointer}.result-input{text-overflow:ellipsis;padding-right:10%}.display-ctl-view{display:-webkit-box;display:flex}.display-block{display:inline-block}.display-result{margin-left:30px}.valueOutput-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.valueOutput{margin-right:14px;padding-top:4px}.validation-error::ng-deep .mat-form-field-label{color:red}.validation-error::ng-deep .mat-form-field-underline{background-color:red}.notitle-value{width:100%;margin-left:30px}", ".sh-flex{width:100%;display:-webkit-inline-box;display:inline-flex}.sh-flex-center{-webkit-box-align:center;align-items:center}.sh-flex-between{-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.display-ctl-view{margin-top:20px}.overlay{position:fixed;display:-webkit-box;display:flex;top:0;left:0;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;height:100%;width:100%;color:gray;background-color:rgba(0,0,0,.5);z-index:9999}.loader-text{display:block;color:#f3f3f3;margin-top:1em}.mat-dialog-content{overflow:hidden;max-height:none}.sh-dialog-content{height:85%}.sh-kbn-dialog-table-container{height:92%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-dialog-table-container{display:-webkit-box;display:flex;height:83%;overflow-y:scroll;margin-top:18px;margin-bottom:18px}.sh-text-center{text-align:center}.sh-width-100{width:100%}.sh-label{display:block}.custom-alert-message{top:-20px;position:relative;font-size:.75em;color:rgba(0,0,0,.54)}.result-input,.sh-label{color:rgba(0,0,0,.87)}::ng-deep .mat-form-field-label span{color:rgba(0,0,0,.87)}::ng-deep .result-container .mat-form-field-flex{background-color:#ccdcff}.sh-ctl-state-primary::ng-deep .mat-form-field-label{color:#3f51b5}.sh-ctl-state-primary::ng-deep .mat-form-field-underline{background-color:#3f51b5}.sh-ctl-state-primary-message{color:#3f51b5}.sh-ctl-state-secondary::ng-deep .mat-form-field-label{color:#ff4081}.sh-ctl-state-secondary::ng-deep .mat-form-field-underline{background-color:#ff4081}.sh-ctl-state-secondary-message{color:#ff4081}.sh-ctl-state-success::ng-deep .mat-form-field-label{color:#0dad17}.sh-ctl-state-success::ng-deep .mat-form-field-underline{background-color:#0dad17}.sh-ctl-state-success-message{color:#0dad17}.sh-ctl-state-danger::ng-deep .mat-form-field-label{color:#f44336}.sh-ctl-state-danger::ng-deep .mat-form-field-underline{background-color:#f44336}.sh-ctl-state-danger-message{color:#f44336}.sh-ctl-state-warning::ng-deep .mat-form-field-label{color:#e29f2b}.sh-ctl-state-warning::ng-deep .mat-form-field-underline{background-color:#e29f2b}.sh-ctl-state-warning-message{color:#e29f2b}.sh-container{position:relative;width:100%;height:100%}.only-field{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;width:100%;height:100%;min-height:28px}.only-field input,.only-field textarea{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.only-field-danger{background-color:#f44336}.only-field-warning{background-color:#e29f2b}.only-field-success{background-color:#0dad17}::ng-deep .only-field .material-icons{font-size:13px}::ng-deep .only-field .mat-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon-button{position:relative;width:24px;height:24px}::ng-deep .only-field .mat-icon{position:absolute;top:0;left:0}::ng-deep .only-field .mat-datepicker-toggle-default-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;margin-right:auto}::ng-deep .mat-datepicker-toggle span svg{width:16px;height:16px}.only-label{background-color:#ccdcff;position:relative}.only-label mat-icon{position:absolute;top:25%;left:0;right:0;bottom:0;margin-left:auto;font-size:16px}.bind-flg__input{opacity:0;height:0;width:0;position:absolute;z-index:-100}"]
            }] }
];
/** @nocollapse */
SHCtlJigCodeComponent.ctorParameters = () => [
    { type: SmplPopupService },
    { type: MatDialog },
    { type: BindCtlService },
    { type: LockScreenService }
];
if (false) {
    /**
     * @type {?}
     * @protected
     */
    SHCtlJigCodeComponent.prototype.smplPopupService;
    /**
     * @type {?}
     * @protected
     */
    SHCtlJigCodeComponent.prototype.dialog;
    /**
     * @type {?}
     * @protected
     */
    SHCtlJigCodeComponent.prototype.bindCtlService;
    /**
     * @type {?}
     * @protected
     */
    SHCtlJigCodeComponent.prototype.lockScreenService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2gtY3RsLWppZy1jb2RlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3NoLWZvcm0tY29udHJvbC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NoLWN0bC1qaWctY29kZS9zaC1jdGwtamlnLWNvZGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBQzdDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFPdkUsTUFBTSxPQUFPLHFCQUFzQixTQUFRLFdBQVc7Ozs7Ozs7SUFFcEQsWUFDWSxnQkFBa0MsRUFDbEMsTUFBaUIsRUFDakIsY0FBOEIsRUFDOUIsaUJBQW9DO1FBRTlDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFMekQscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxXQUFNLEdBQU4sTUFBTSxDQUFXO1FBQ2pCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBRzlDLElBQUksQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDO1FBQzlCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ3JCLENBQUM7Ozs7OztJQU1NLE9BQU8sQ0FBQyxLQUFLO1FBQ2xCLFdBQVcsQ0FBQyxZQUFZLENB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QUMzQiwrQ0FBd0M7Ozs7O0lBQ3hDLGtEQUE4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25DaGFuZ2VzLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU0hDdGxDb21tb24gfSBmcm9tICcuLi9zaC1jdGwtY29tbW9uJztcclxuaW1wb3J0IHsgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnXHJcbmltcG9ydCB7IFNIRm9ybVBvcHVwIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL1NoRm9ybVBvcHVwJztcclxuaW1wb3J0IHsgU21wbFBvcHVwU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3NtcGwtcG9wdXAuc2VydmljZSc7XHJcbmltcG9ydCB7IEJpbmRDdGxTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYmluZC1jdGwuc2VydmljZSc7XHJcbmltcG9ydCB7IExvY2tTY3JlZW5TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2xvY2stc2NyZWVuLnNlcnZpY2VcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2gtY3RsLWppZy1jb2RlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2gtY3RsLWppZy1jb2RlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zaC1jdGwtamlnLWNvZGUuY29tcG9uZW50LmNzcycsICcuLi8uLi8uLi9zdHlsZS5jb21tb24uY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNIQ3RsSmlnQ29kZUNvbXBvbmVudCBleHRlbmRzIFNIRm9ybVBvcHVwIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByb3RlY3RlZCBzbXBsUG9wdXBTZXJ2aWNlOiBTbXBsUG9wdXBTZXJ2aWNlLFxyXG4gICAgcHJvdGVjdGVkIGRpYWxvZzogTWF0RGlhbG9nLFxyXG4gICAgcHJvdGVjdGVkIGJpbmRDdGxTZXJ2aWNlOiBCaW5kQ3RsU2VydmljZSxcclxuICAgIHByb3RlY3RlZCBsb2NrU2NyZWVuU2VydmljZTogTG9ja1NjcmVlblNlcnZpY2VcclxuICApIHtcclxuICAgIHN1cGVyKHNtcGxQb3B1cFNlcnZpY2UsIGRpYWxvZywgYmluZEN0bFNlcnZpY2UsIGxvY2tTY3JlZW5TZXJ2aWNlKTtcclxuICAgIHRoaXMuY3RsTmFtZSA9IFwiU0hDdGxKaWdDb2RlXCI7XHJcbiAgICB0aGlzLm1heGxlbmd0aCA9IDY7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBvbklucHV0XHJcbiAgICogQHBhcmFtIGV2ZW50IGlucHV0XHJcbiAgICovXHJcbiAgcHVibGljIG9uSW5wdXQoZXZlbnQpIHtcclxuICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VTcGFjZShldmVudCk7XHJcbiAgICBTSEN0bENvbW1vbi5yZXBsYWNlRnVsbFdpZHRoKGV2ZW50KTtcclxuICAgIFNIQ3RsQ29tbW9uLnJlcGxhY2VIYWxmV2lkdGgoZXZlbnQpO1xyXG4gICAgU0hDdGxDb21tb24ucmVwbGFjZVNpZ24oZXZlbnQpO1xyXG4gICAgU0hDdGxDb21tb24uc2xpY2VMZW5ndGgoZXZlbnQsIHRoaXMubWF4bGVuZ3RoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIG9uRm9jdXNcclxuICAgKiBAcGFyYW0gZXZlbnQgZm9jdXNcclxuICAgKi9cclxuICBwdWJsaWMgb25Gb2N1cyhldmVudCkge1xyXG4gICAgdGhpcy5vbkJlZm9yZUZvY3VzKGV2ZW50KTtcclxuXHJcbiAgICBldmVudC50YXJnZXQudmFsdWUgPSB0aGlzLnRvVGV4dChldmVudC50YXJnZXQudmFsdWUpO1xyXG4gICAgZXZlbnQudGFyZ2V0LnNlbGVjdCgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge3RoaXMub25BZnRlckZvY3VzKGV2ZW50KX0sIDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogb25CbHVyXHJcbiAgICogQHBhcmFtIGV2ZW50IGJsdXJcclxuICAgKi9cclxuICBwdWJsaWMgb25CbHVyKGV2ZW50KSB7XHJcbiAgICB0aGlzLm9uQmVmb3JlQmx1cihldmVudCk7XHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7dGhpcy5vbkFmdGVyQmx1cihldmVudCk7fSwgMCk7O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogM+ahgeWFpeWKm+aZguOBq+aui+OCiuOCkuijnOWujOOBmeOCi1xyXG4gICAqIEBwYXJhbSBqaWdDb2RlIOS6i+alreaJgOOCs+ODvOODiVxyXG4gICAqL1xyXG4gIHB1YmxpYyB0b1RleHQoamlnQ29kZTogc3RyaW5nKSB7XHJcbiAgICAvLyDjg5bjg6njg7Pjgq/jgarjgolcclxuICAgIGlmIChTSEN0bENvbW1vbi5pc0JsYW5rKGppZ0NvZGUpKSByZXR1cm4gXCJcIjtcclxuICAgIC8vIDbmoYHjga/lh6bnkIbjgZfjgarjgYRcclxuICAgIGlmIChqaWdDb2RlLnRyaW0oKS5sZW5ndGggPT0gNikgcmV0dXJuIGppZ0NvZGU7XHJcblxyXG4gICAgbGV0IHJlc3VsdCA9IG51bGw7XHJcblxyXG4gICAgaWYgKGppZ0NvZGUudHJpbSgpLmxlbmd0aCA9PSAzKSB7XHJcbiAgICAgIGxldCBmaXJzdFN0cmluZyA9IHBhcnNlSW50KChOdW1iZXIoamlnQ29kZS5zdWJzdHIoMCwgMSkpICogOSkudG9TdHJpbmcoKSwgMTApOyAgICAvLyDkuIDmloflrZfnm65cclxuICAgICAgbGV0IHNlY29uZFN0cmluZyA9IHBhcnNlSW50KChOdW1iZXIoamlnQ29kZS5zdWJzdHIoMSwgMSkpICogOCkudG9TdHJpbmcoKSwgMTApOyAgICAvLyDlvJDmloflrZfnm65cclxuICAgICAgbGV0IHRoaXJkU3RyaW5nID0gcGFyc2VJbnQoKE51bWJlcihqaWdDb2RlLnN1YnN0cigyLCAxKSkgKiA3KS50b1N0cmluZygpLCAxMCk7ICAgLy8g5Y+C5paH5a2X55uuXHJcbiAgICAgIGNvbnN0IHN0ck5vID0gZmlyc3RTdHJpbmcgKyBzZWNvbmRTdHJpbmcgKyB0aGlyZFN0cmluZztcclxuICAgICAgY29uc3QgbGFzdFN0cnRpbmcgPSBzdHJOby50b1N0cmluZygpLnN1YnN0cihzdHJOby50b1N0cmluZygpLmxlbmd0aCAtIDEsIDEpOyAgLy8g5Y+z44GL44KJ5LiA5paH5a2X55uu5Y+W5b6XXHJcbiAgICAgIC8vIG9uZSArIHR3byArIHRocmVlICsgJzAwJyArIGxhc3ROb1xyXG4gICAgICByZXN1bHQgPSBgJHtqaWdDb2RlfTAwJHtsYXN0U3RydGluZ31gO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHJlc3VsdCA9IFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==