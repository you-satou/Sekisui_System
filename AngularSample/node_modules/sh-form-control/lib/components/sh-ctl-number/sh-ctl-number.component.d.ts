import { OnInit, OnChanges, SimpleChanges, AfterViewChecked } from '@angular/core';
import { SHFormControl } from '../../utilities/ShFormControl';
export declare class SHCtlNumberComponent extends SHFormControl<string> implements OnInit, OnChanges, AfterViewChecked {
    min: number;
    max: number;
    decimaldigit: number;
    rounding: string;
    stringValue: any;
    firstFlag: boolean;
    constructor();
    ngOnInit(): void;
    /**
     * ngOnChangesイベント
     * 値変更時にフォーマットを整形
     * @param event input
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * ngAfterViewCheckedイベント
     * 表示画面と修正画面でカンマ編集
     */
    ngAfterViewChecked(): void;
    /**
     * onInput
     * @param event input
     */
    onInput(event: any): void;
    /**
     * マッチした値を記号に置き換える
     * @param event input
     */
    checkNumbersSigns(event: any): void;
    /**
     * onClick
     * @param event click
     */
    onClick(event: any): void;
    /**
     * onKeyDown
     * @param event keydown
     */
    onKeyDown(event: any): void;
    /**
     * onChange
     * @param event change
     */
    onChange(event: any): void;
    /**
     * onFocus
     * @param event focus
     */
    onFocus(event: any): void;
    /**
     * onBlur
     * @param event blur
     */
    onBlur(event: any): void;
    /**
     * カンマ付きの値を返す
     * @param inputTargetValue event.target.value
     */
    toText(inputTargetValue: string): string;
    /**
     * min maxを反映した値を返す
     * @param inputTargetValue event.target.value
     */
    setMinMax(inputTargetValue: string): string;
    /**
     * roundingがfloorかceilの時に切り捨て切り上げ処理を行う
     * @param type floor or ceil
     * @param value value
     * @param decimalDigit decimalDigit
     */
    decimalAdjust(type: any, value: any, decimalDigit: any): any;
    /**
     * カンマを外した値を返す
     * @param inputTargetValue event.target.value
     */
    removeComma(inputTargetValue: string): string;
}
