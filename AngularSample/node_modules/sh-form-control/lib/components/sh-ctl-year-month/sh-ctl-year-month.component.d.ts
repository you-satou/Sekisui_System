import { OnInit, OnChanges, SimpleChanges, ElementRef, AfterViewInit } from "@angular/core";
import { SHFormControl } from "../../utilities/ShFormControl";
import { FormControl } from "@angular/forms";
declare type yearAndMonth = {
    year: number;
    month: number;
};
export declare class SHCtlYearMonthComponent extends SHFormControl<string> implements OnInit, OnChanges, AfterViewInit {
    private el;
    isValidateError: boolean;
    errorMessage: string;
    adjust: any;
    stringValue: any;
    cache: yearAndMonth;
    date: FormControl;
    max: string;
    min: string;
    constructor(el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    getYearAndManth(date: any): string;
    ngAfterContentChecked(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * onOpened
     */
    onOpened(): void;
    /**
     * onClosed
     */
    onClosed(): void;
    /**
     * onInput
     * @param event input
     */
    onInput(event: any): void;
    /**
     * onKeypress
     * @param event keypress
     */
    onKeypress(event: any): void;
    /**
     * onClick
     * @param event click
     */
    onClick(event: any): void;
    /**
     * onChange
     * @param event change
     */
    onChange(event: any): void;
    /**
     * onFocus
     * @param event focus
     */
    onFocus(event: any): boolean;
    /**
     * onBlur
     * @param event blur
     */
    onBlur(event: any): void;
    /**
     * 年月計算
     * @param event
     */
    private yearAndMonthCalculation;
    /**
     * 自タイプに許容されているキー
     * @param event keypress
     */
    private isKeysAllowedToMe;
    /**
     * 本日日付の設定
     * @param event keypress
     */
    setCurrentDate(event: any): void;
    /**
     * 接頭語付与
     * @param inputTargetValue num.substr(0, 2)
     */
    convYear(inputTargetValue: any): string;
    /**
     * YYYY/MM処理
     * @param inputTargetValue event.target.value
     */
    toText(inputTargetValue: any): any;
    /**
     * 接続文字除去
     * @param inputTargetValue event.target.value
     */
    toValue(inputTargetValue: any): string;
    /**
     * フォーマット編集
     * @param value this.value
     */
    changeFormat(value: any): any;
}
export {};
